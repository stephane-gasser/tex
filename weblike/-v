
(***PASCAL module 4***)
(*\4*)
(*INSERT 'Compiler directives'*)(*PASCAL module 9*)
@{$C-,A+,D-@} {no range check, catch arithmetic overflow, no debug overhead}
debug @{$C+,D+@} gubed {but turn everything on when debugging}

(*FIN INSERT 'Compiler directives'*)

Program TEX; {all file names are defined dynamically}

Label 
(*INSERT 'Labels in the outer block'*)(*PASCAL module 6*)
  start_of_TEX(*\hskip-2pt*), end_of_TEX(*\hskip-2pt*), final_end;
  {key control points}

(*FIN INSERT 'Labels in the outer block'*)

Const 
(*INSERT 'Constants in the outer block'*)(*PASCAL module 11*)
  mem_max = 30000; {greatest index in \TeX's internal |mem| array; 
  must be strictly less than |max_halfword|; 
  must be equal to |mem_top| in \.[INITEX], otherwise |>=mem_top|}
  mem_min = 0; {smallest index in \TeX's internal |mem| array; 
  must be |min_halfword| or more; 
  must be equal to |mem_bot| in \.[INITEX], otherwise |<=mem_bot|}
  buf_size = 500; {maximum number of characters simultaneously present in 
  current lines of open files and in control sequences between 
  \.[\\csname] and \.[\\endcsname]; must not exceed |max_halfword|}
  error_line = 72; {width of context lines on terminal error messages}
  half_error_line = 42; {width of first lines of contexts in terminal 
  error messages; should be between 30 and |error_line-15|}
  max_print_line = 79; {width of longest text lines output; should be at least 60}
  stack_size = 200; {maximum number of simultaneous input sources}
  max_in_open = 6; {maximum number of input files and error insertions that 
  can be going on simultaneously}
  font_max = 75; {maximum internal font number; must not exceed |max_quarterword| 
  and must be at most |font_base+256|}
  font_mem_size = 20000; {number of words of |font_info| for all fonts}
  param_size = 60; {maximum number of simultaneous macro parameters}
  nest_size = 40; {maximum number of semantic levels simultaneously active}
  max_strings = 3000; {maximum number of strings; must not exceed |max_halfword|}
  string_vacancies = 8000; {the minimum number of characters that should be 
  available for the user's control sequences and font names, 
  after \TeX's own error messages are stored}
  pool_size = 32000; {maximum number of characters in strings, including all 
  error messages and help texts, and the names of all fonts and 
  control sequences; must exceed |string_vacancies| by the total 
  length of \TeX's own strings, which is currently about 23000}
  save_size = 600; {space for saving values outside of current group; must be 
  at most |max_halfword|}
  trie_size = 8000; {space for hyphenation patterns; should be larger for 
  \.[INITEX] than it is in production versions of \TeX}
  trie_op_size = 500; {space for ``opcodes'' in the hyphenation patterns}
  dvi_buf_size = 800; {size of the output buffer; must be a multiple of 8}
  file_name_size = 40; {file names shouldn't be longer than this}
  pool_name = 'TeXformats:TEX.POOL                     ';
  {string of length |file_name_size|; tells where the string pool appears}
(*TeXformats*)

(*FIN INSERT 'Constants in the outer block'*)

  mtype
(*INSERT 'Types in the outer block'*)(*PASCAL module 18*)
  ASCII_code = 0..255; {eight-bit numbers}

(*PASCAL module 25*)
  eight_bits = 0..255; {unsigned one-byte quantity}
  alpha_file = packed file Of text_char; {files that contain textual data}
  byte_file = packed file Of eight_bits; {files that contain binary data}

(*PASCAL module 38*)
  pool_pointer = 0..pool_size; {for variables that point into |str_pool|}
  str_number = 0..max_strings; {for variables that point into |str_start|}
  packed_ASCII_code = 0..255; {elements of |str_pool| array}

(*PASCAL module 101*)
  scaled = integer; {this type is used for scaled integers}
  nonnegative_integer = 0..2147483647; {$0\L x<2^[31]$}
  small_number = 0..63; {this type is self-explanatory}

(*PASCAL module 109*)
  glue_ratio = real; {one-word representation of a glue expansion factor}

(*PASCAL module 113*)
  quarterword = min_quarterword..max_quarterword; {1/4 of a word}
  halfword = min_halfword..max_halfword; {1/2 of a word}
  two_choices = 1..2; {used when there are two variants in a record}
  four_choices = 1..4; {used when there are four variants in a record}
  two_halves = packed Record;

    rh: halfword;
    Case two_choices Of 
      1: (lh:halfword);
      2: (b0:quarterword; b1:quarterword);
  End;
  four_quarters = packed Record;

    b0: quarterword;
    b1: quarterword;
    b2: quarterword;
    b3: quarterword;
  End;
  memory_word = Record;

    Case four_choices Of 
      1: (int:integer);
      2: (gr:glue_ratio);
      3: (hh:two_halves);
      4: (qqqq:four_quarters);
  End;
  word_file = file Of memory_word;

(*PASCAL module 150*)
  glue_ord = normal..filll; {infinity to the 0, 1, 2, or 3 power}

(*PASCAL module 212*)
  list_state_record = recordmode_field: -mmode..mmode;
  head_field,tail_field: pointer;
  pg_field,ml_field: integer;
  aux_field: memory_word;
End;

(*PASCAL module 269*)
group_code = 0..max_group_code; {|save_level| for a level boundary}

(*PASCAL module 300*)
in_state_record = Record
  state_field, index_field: quarterword;
  start_field,loc_field, limit_field, name_field: halfword;
End;

(*PASCAL module 548*)
internal_font_number = font_base..font_max; {|font| in a |char_node|}
font_index = 0..font_mem_size; {index into |font_info|}

(*PASCAL module 594*)
dvi_index = 0..dvi_buf_size; {an index into the output buffer}

(*PASCAL module 920*)
trie_pointer = 0..trie_size; {an index into |trie|}

(*PASCAL module 925*)
hyph_pointer = 0..hyph_size; {an index into the ordered hash table}

(*FIN INSERT 'Types in the outer block'*)

Var 
(*INSERT 'Global variables'*)(*PASCAL module 13*)
  bad: integer; {is some ``constant'' wrong?}

(*PASCAL module 20*)
  xord: array [text_char] Of ASCII_code;
  {specifies conversion of input characters}
  xchr: array [ASCII_code] Of text_char;
  {specifies conversion of output characters}

(*PASCAL module 26*)
  name_of_file: packed array[1..file_name_size] Of char;;

  {on some systems this may be a \&[record] variable}
  name_length: 0..file_name_size;
{this many characters are actually 
  relevant in |name_of_file| (the rest are blank)}

(*PASCAL module 30*)
  buffer: array[0..buf_size] Of ASCII_code; {lines of characters being read}
  first: 0..buf_size; {the first unused position in |buffer|}
  last: 0..buf_size; {end of the line just input to |buffer|}
  max_buf_stack: 0..buf_size; {largest index used in |buffer|}

(*PASCAL module 32*)
  term_in: alpha_file; {the terminal as an input file}
  term_out: alpha_file; {the terminal as an output file}

(*PASCAL module 39*)
  str_pool: packed array[pool_pointer] Of packed_ASCII_code; {the characters}
  str_start : array[str_number] Of pool_pointer; {the starting pointers}
  pool_ptr : pool_pointer; {first unused position in |str_pool|}
  str_ptr : str_number; {number of the current string being created}
  init_pool_ptr : pool_pointer; {the starting value of |pool_ptr|}
  init_str_ptr : str_number; {the starting value of |str_ptr|}

(*PASCAL module 50*)
  init pool_file: alpha_file; {the string-pool file output by \.[TANGLE]}
  tini

(*PASCAL module 54*)
  log_file : alpha_file; {transcript of \TeX\ session}
  selector : 0..max_selector; {where to print a message}
  dig : array[0..22] Of 0..15; {digits in a number being output}
  tally : integer; {the number of characters recently printed}
  term_offset : 0..max_print_line;
  {the number of characters on the current terminal line}
  file_offset : 0..max_print_line;
  {the number of characters on the current file line}
  trick_buf: array[0..error_line] Of ASCII_code; {circular buffer for 
  pseudoprinting}
  trick_count: integer; {threshold for pseudoprinting, explained later}
  first_count: integer; {another variable for pseudoprinting}

(*PASCAL module 73*)
  interaction: batch_mode..error_stop_mode; {current level of interaction}

(*PASCAL module 76*)
  deletions_allowed: boolean; {is it safe for |error| to call |get_token|?}
  set_box_allowed: boolean; {is it safe to do a \.[\\setbox] assignment?}
  history: spotless..fatal_error_stop; {has the source input been clean so far?}
  error_count: -1..100; {the number of scrolled errors since the 
  last paragraph ended}

(*PASCAL module 79*)
  help_line: array[0..5] Of str_number; {helps for the next |error|}
  help_ptr: 0..6; {the number of help lines present}
  use_err_help: boolean; {should the |err_help| list be shown?}

(*PASCAL module 96*)
  interrupt: integer; {should \TeX\ pause for instructions?}
  OK_to_interrupt: boolean; {should interrupts be observed?}

(*PASCAL module 104*)
  arith_error: boolean; {has arithmetic overflow occurred recently?}
  remainder: scaled; {amount subtracted to get an exact division}

(*PASCAL module 115*)
  temp_ptr: pointer; {a pointer variable for occasional emergency use}

(*PASCAL module 116*)
  mem : array[mem_min..mem_max] Of memory_word; {the big dynamic storage area}
  lo_mem_max : pointer; {the largest location of variable-size memory in use}
  hi_mem_min : pointer; {the smallest location of one-word memory in use}

(*PASCAL module 117*)
  var_used, dyn_used : integer; {how much memory is in use}

(*PASCAL module 118*)
  avail : pointer; {head of the list of available one-word nodes}
  mem_end : pointer; {the last one-word node used in |mem|}

(*PASCAL module 124*)
  rover : pointer; {points to some node in the list of empties}

(*PASCAL module 165*)
  debug free: packed array [mem_min..mem_max] Of boolean; {free cells}
(*\hskip10pt*)was_free: packed array [mem_min..mem_max] Of boolean;
  {previously free cells}
(*\hskip10pt*)was_mem_end,was_lo_max,was_hi_min: pointer;
  {previous |mem_end|, |lo_mem_max|, and |hi_mem_min|}
(*\hskip10pt*)panicking: boolean; {do we want to check memory constantly?}
  gubed

(*PASCAL module 173*)
  font_in_short_display: integer; {an internal font number}

(*PASCAL module 181*)
  depth_threshold : integer; {maximum nesting depth in box displays}
  breadth_max : integer; {maximum number of items shown at the same list level}

(*PASCAL module 213*)
  nest: array[0..nest_size] Of list_state_record;
  nest_ptr: 0..nest_size; {first unused location of |nest|}
  max_nest_stack: 0..nest_size; {maximum of |nest_ptr| when pushing}
  cur_list: list_state_record; {the ``top'' semantic state}
  shown_mode: -mmode..mmode; {most recent mode shown by \.[\\tracingcommands]}

(*PASCAL module 246*)
  old_setting: 0..max_selector;

(*PASCAL module 253*)
  eqtb: array[active_base..eqtb_size] Of memory_word;
  xeq_level: array[int_base..eqtb_size] Of quarterword;

(*PASCAL module 256*)
  hash: array[hash_base..undefined_control_sequence-1] Of two_halves;
  {the hash table}
  hash_used: pointer; {allocation pointer for |hash|}
  no_new_control_sequence: boolean; {are new identifiers legal?}
  cs_count: integer; {total number of known identifiers}

(*PASCAL module 271*)
  save_stack : array[0..save_size] Of memory_word;
  save_ptr : 0..save_size; {first unused entry on |save_stack|}
  max_save_stack: 0..save_size; {maximum usage of save stack}
  cur_level: quarterword; {current nesting level for groups}
  cur_group: group_code; {current group type}
  cur_boundary: 0..save_size; {where the current level begins}

(*PASCAL module 286*)
  mag_set: integer; {if nonzero, this magnification should be used henceforth}

(*PASCAL module 297*)
  cur_cmd: eight_bits; {current command set by |get_next|}
  cur_chr: halfword; {operand of current command}
  cur_cs: pointer; {control sequence found here, zero if none found}
  cur_tok: halfword; {packed representative of |cur_cmd| and |cur_chr|}

(*PASCAL module 301*)
  input_stack : array[0..stack_size] Of in_state_record;
  input_ptr : 0..stack_size; {first unused location of |input_stack|}
  max_in_stack: 0..stack_size; {largest value of |input_ptr| when pushing}
  cur_input : in_state_record;
  {the ``top'' input state, according to convention (1)}

(*PASCAL module 304*)
  in_open : 0..max_in_open; {the number of lines in the buffer, less one}
  open_parens : 0..max_in_open; {the number of open text files}
  input_file : array[1..max_in_open] Of alpha_file;
  line : integer; {current line number in the current source file}
  line_stack : array[1..max_in_open] Of integer;

(*PASCAL module 305*)
  scanner_status : normal..absorbing; {can a subfile end now?}
  warning_index : pointer; {identifier relevant to non-|normal| scanner status}
  def_ref : pointer; {reference count of token list being defined}

(*PASCAL module 308*)
  param_stack: array [0..param_size] Of pointer;
  {token list pointers for parameters}
  param_ptr: 0..param_size; {first unused entry in |param_stack|}
  max_param_stack: integer;
  {largest value of |param_ptr|, will be |<=param_size+9|}

(*PASCAL module 309*)
  align_state: integer; {group level with respect to current alignment}

(*PASCAL module 310*)
  base_ptr: 0..stack_size; {shallowest level shown by |show_context|}

(*PASCAL module 333*)
  par_loc: pointer; {location of `\.[\\par]' in |eqtb|}
  par_token: halfword; {token representing `\.[\\par]'}

(*PASCAL module 361*)
  force_eof: boolean; {should the next \.[\\input] be aborted early?}

(*PASCAL module 382*)
  cur_mark: array[top_mark_code..split_bot_mark_code] Of pointer;
  {token lists for marks}

(*PASCAL module 387*)
  long_state: call..long_outer_call; {governs the acceptance of \.[\\par]}

(*PASCAL module 388*)
  pstack: array[0..8] Of pointer; {arguments supplied to a macro}

(*PASCAL module 410*)
  cur_val: integer; {value returned by numeric scanners}
  cur_val_level: int_val..tok_val; {the ``level'' of this value}

(*PASCAL module 438*)
  radix: small_number; {|scan_int| sets this to 8, 10, 16, or zero}

(*PASCAL module 447*)
  cur_order: glue_ord; {order of infinity found by |scan_dimen|}

(*PASCAL module 480*)
  read_file: array[0..15] Of alpha_file; {used for \.[\\read]}
  read_open: array[0..16] Of normal..closed; {state of |read_file[n]|}

(*PASCAL module 489*)
  cond_ptr: pointer; {top of the condition stack}
  if_limit: normal..or_code; {upper bound on |fi_or_else| codes}
  cur_if: small_number; {type of conditional being worked on}
  if_line: integer; {line where that conditional began}

(*PASCAL module 493*)
  skip_line: integer; {skipping began here}

(*PASCAL module 512*)
  cur_name: str_number; {name of file just scanned}
  cur_area: str_number; {file area just scanned, or \.['']}
  cur_ext: str_number; {file extension just scanned, or \.['']}

(*PASCAL module 513*)
  area_delimiter: pool_pointer; {the most recent `\.>' or `\.:', if any}
  ext_delimiter: pool_pointer; {the relevant `\..', if any}

(*PASCAL module 520*)
  TEX_format_default: packed array[1..format_default_length] Of char;

(*PASCAL module 527*)
  name_in_progress: boolean; {is a file name being scanned?}
  job_name: str_number; {principal file name}
  log_opened: boolean; {has the transcript file been opened?}

(*PASCAL module 532*)
  dvi_file: byte_file; {the device-independent output goes here}
  output_file_name: str_number; {full name of the output file}
  log_name: str_number; {full name of the log file}

(*PASCAL module 539*)
  tfm_file: byte_file;

(*PASCAL module 549*)
  font_info: array[font_index] Of memory_word;
  {the big collection of font data}
  fmem_ptr: font_index; {first unused word of |font_info|}
  font_ptr: internal_font_number; {largest internal font number in use}
  font_check: array[internal_font_number] Of four_quarters; {check sum}
  font_size: array[internal_font_number] Of scaled; {``at'' size}
  font_dsize: array[internal_font_number] Of scaled; {``design'' size}
  font_params: array[internal_font_number] Of font_index; {how many font 
  parameters are present}
  font_name: array[internal_font_number] Of str_number; {name of the font}
  font_area: array[internal_font_number] Of str_number; {area of the font}
  font_bc: array[internal_font_number] Of eight_bits;
  {beginning (smallest) character code}
  font_ec: array[internal_font_number] Of eight_bits;
  {ending (largest) character code}
  font_glue: array[internal_font_number] Of pointer;
  {glue specification for interword space, |null| if not allocated}
  font_used: array[internal_font_number] Of boolean;
  {has a character from this font actually appeared in the output?}
  hyphen_char: array[internal_font_number] Of integer;
  {current \.[\\hyphenchar] values}
  skew_char: array[internal_font_number] Of integer;
  {current \.[\\skewchar] values}
  bchar_label: array[internal_font_number] Of font_index;
  {start of |lig_kern| program for left boundary character, 
  |non_address| if there is none}
  font_bchar: array[internal_font_number] Of min_quarterword..non_char;
  {right boundary character, |non_char| if there is none}
  font_false_bchar: array[internal_font_number] Of min_quarterword..non_char;
  {|font_bchar| if it doesn't exist in the font, otherwise |non_char|}

(*PASCAL module 550*)
  char_base: array[internal_font_number] Of integer;
  {base addresses for |char_info|}
  width_base: array[internal_font_number] Of integer;
  {base addresses for widths}
  height_base: array[internal_font_number] Of integer;
  {base addresses for heights}
  depth_base: array[internal_font_number] Of integer;
  {base addresses for depths}
  italic_base: array[internal_font_number] Of integer;
  {base addresses for italic corrections}
  lig_kern_base: array[internal_font_number] Of integer;
  {base addresses for ligature/kerning programs}
  kern_base: array[internal_font_number] Of integer;
  {base addresses for kerns}
  exten_base: array[internal_font_number] Of integer;
  {base addresses for extensible recipes}
  param_base: array[internal_font_number] Of integer;
  {base addresses for font parameters}

(*PASCAL module 555*)
  null_character: four_quarters; {nonexistent character information}

(*PASCAL module 592*)
  total_pages: integer; {the number of pages that have been shipped out}
  max_v: scaled; {maximum height-plus-depth of pages shipped so far}
  max_h: scaled; {maximum width of pages shipped so far}
  max_push: integer; {deepest nesting of |push| commands encountered so far}
  last_bop: integer; {location of previous |bop| in the \.[DVI] output}
  dead_cycles: integer; {recent outputs that didn't ship anything out}
  doing_leaders: boolean; {are we inside a leader box?}



  c,f: quarterword; {character and font in current |char_node|}
  rule_ht,rule_dp,rule_wd: scaled; {size of current rule being output}
  g: pointer; {current glue specification}
  lq,lr: integer; {quantities used in calculations for leaders}

(*PASCAL module 595*)
  dvi_buf: array[dvi_index] Of eight_bits; {buffer for \.[DVI] output}
  half_buf: dvi_index; {half of |dvi_buf_size|}
  dvi_limit: dvi_index; {end of the current half buffer}
  dvi_ptr: dvi_index; {the next available buffer address}
  dvi_offset: integer; {|dvi_buf_size| times the number of times the 
  output buffer has been fully emptied}
  dvi_gone: integer; {the number of bytes already output to |dvi_file|}

(*PASCAL module 605*)
  down_ptr,right_ptr: pointer; {heads of the down and right stacks}

(*PASCAL module 616*)
  dvi_h,dvi_v: scaled; {a \.[DVI] reader program thinks we are here}
  cur_h,cur_v: scaled; {\TeX\ thinks we are here}
  dvi_f: internal_font_number; {the current font}
  cur_s: integer; {current depth of output box nesting, initially $-1$}

(*PASCAL module 646*)
  total_stretch, total_shrink: array[glue_ord] Of scaled;
  {glue found by |hpack| or |vpack|}
  last_badness: integer; {badness of the most recently packaged box}

(*PASCAL module 647*)
  adjust_tail: pointer; {tail of adjustment list}

(*PASCAL module 661*)
  pack_begin_line: integer; {source file line where the current paragraph 
  or alignment began; a negative value denotes alignment}

(*PASCAL module 684*)
  empty_field: two_halves;
  null_delimiter: four_quarters;

(*PASCAL module 719*)
  cur_mlist: pointer; {beginning of mlist to be translated}
  cur_style: small_number; {style code at current place in the list}
  cur_size: small_number; {size code corresponding to |cur_style|}
  cur_mu: scaled; {the math unit width corresponding to |cur_size|}
  mlist_penalties: boolean; {should |mlist_to_hlist| insert penalties?}

(*PASCAL module 724*)
  cur_f: internal_font_number; {the |font| field of a |math_char|}
  cur_c: quarterword; {the |character| field of a |math_char|}
  cur_i: four_quarters; {the |char_info| of a |math_char|, 
  or a lig/kern instruction}

(*PASCAL module 764*)
  magic_offset: integer; {used to find inter-element spacing}

(*PASCAL module 770*)
  cur_align: pointer; {current position in preamble list}
  cur_span: pointer; {start of currently spanned columns in preamble list}
  cur_loop: pointer; {place to copy when extending a periodic preamble}
  align_ptr: pointer; {most recently pushed-down alignment stack node}
  cur_head,cur_tail: pointer; {adjustment list pointers}

(*PASCAL module 814*)
  just_box: pointer; {the |hlist_node| for the last line of the new paragraph}

(*PASCAL module 821*)
  passive: pointer; {most recent node on passive list}
  printed_node: pointer; {most recent node that has been printed}
  pass_number: halfword; {the number of passive nodes allocated on this pass}

(*PASCAL module 823*)
  active_width: array[1..6] Of scaled;
  {distance from first active node to~|cur_p|}
  cur_active_width: array[1..6] Of scaled; {distance from current active node}
  background: array[1..6] Of scaled; {length of an ``empty'' line}
  break_width: array[1..6] Of scaled; {length being computed after current break}

(*PASCAL module 825*)
  no_shrink_error_yet: boolean; {have we complained about infinite shrinkage?}

(*PASCAL module 828*)
  cur_p: pointer; {the current breakpoint under consideration}
  second_pass: boolean; {is this our second attempt to break this paragraph?}
  final_pass: boolean; {is this our final attempt to break this paragraph?}
  threshold: integer; {maximum badness on feasible lines}

(*PASCAL module 833*)
  minimal_demerits: array[very_loose_fit..tight_fit] Of integer; {best total 
  demerits known for current line class and position, given the fitness}
  minimum_demerits: integer; {best total demerits known for current line class 
  and position}
  best_place: array[very_loose_fit..tight_fit] Of pointer; {how to achieve 
  |minimal_demerits|}
  best_pl_line: array[very_loose_fit..tight_fit] Of halfword; {corresponding 
  line number}

(*PASCAL module 839*)
  disc_width: scaled; {the length of discretionary material preceding a break}

(*PASCAL module 847*)
  easy_line: halfword; {line numbers |>easy_line| are equivalent in break nodes}
  last_special_line: halfword; {line numbers |>last_special_line| all have 
  the same width}
  first_width: scaled; {the width of all lines |<=last_special_line|, if 
  no \.[\\parshape] has been specified}
  second_width: scaled; {the width of all lines |>last_special_line|}
  first_indent: scaled; {left margin to go with |first_width|}
  second_indent: scaled; {left margin to go with |second_width|}

(*PASCAL module 872*)
  best_bet: pointer; {use this passive node and its predecessors}
  fewest_demerits: integer; {the demerits associated with |best_bet|}
  best_line: halfword; {line number following the last line of the new paragraph}
  actual_looseness: integer; {the difference between |line_number(best_bet)| 
  and the optimum |best_line|}
  line_diff: integer; {the difference between the current line number and 
  the optimum |best_line|}

(*PASCAL module 892*)
  hc: array[0..65] Of 0..256; {word to be hyphenated}
  hn: small_number; {the number of positions occupied in |hc|}
  ha,hb: pointer; {nodes |ha..hb| should be replaced by the hyphenated result}
  hf: internal_font_number; {font number of the letters in |hc|}
  hu: array[0..63] Of 0..256; {like |hc|, before conversion to lowercase}
  hyf_char: integer; {hyphen character of the relevant font}
  cur_lang,init_cur_lang: ASCII_code; {current hyphenation table of interest}
  l_hyf,r_hyf,init_l_hyf,init_r_hyf: integer; {limits on fragment sizes}
  hyf_bchar: halfword; {boundary character after $c_n$}

(*PASCAL module 900*)
  hyf: array [0..64] Of 0..9; {odd values indicate discretionary hyphens}
  init_list: pointer; {list of punctuation characters preceding the word}
  init_lig: boolean; {does |init_list| represent a ligature?}
  init_lft: boolean; {if so, did the ligature involve a left boundary?}

(*PASCAL module 905*)
  hyphen_passed: small_number; {first hyphen in a ligature, if any}

(*PASCAL module 907*)
  cur_l,cur_r: halfword; {characters before and after the cursor}
  cur_q: pointer; {where a ligature should be detached}
  lig_stack: pointer; {unfinished business to the right of the cursor}
  ligature_present: boolean; {should a ligature node be made for |cur_l|?}
  lft_hit,rt_hit: boolean; {did we hit a ligature with a boundary character?}

(*PASCAL module 921*)
  trie: array[trie_pointer] Of two_halves; {|trie_link|, |trie_char|, |trie_op|}
  hyf_distance: array[1..trie_op_size] Of small_number; {position |k-j| of $n_j$}
  hyf_num: array[1..trie_op_size] Of small_number; {value of $n_j$}
  hyf_next: array[1..trie_op_size] Of quarterword; {continuation code}
  op_start: array[ASCII_code] Of 0..trie_op_size; {offset for current language}

(*PASCAL module 926*)
  hyph_word: array[hyph_pointer] Of str_number; {exception words}
  hyph_list: array[hyph_pointer] Of pointer; {lists of hyphen positions}
  hyph_count: hyph_pointer; {the number of words in the exception dictionary}

(*PASCAL module 943*)
  init trie_op_hash: array[-trie_op_size..trie_op_size] Of 0..trie_op_size;
  {trie op codes for quadruples}
  trie_used: array[ASCII_code] Of quarterword;
  {largest opcode used so far for this language}
  trie_op_lang: array[1..trie_op_size] Of ASCII_code;
  {language part of a hashed quadruple}
  trie_op_val: array[1..trie_op_size] Of quarterword;
  {opcode corresponding to a hashed quadruple}
  trie_op_ptr: 0..trie_op_size; {number of stored ops so far}
  tini

(*PASCAL module 947*)
  init trie_c: packed array[trie_pointer] Of packed_ASCII_code;
  {characters to match}
(*\hskip10pt*)trie_o: packed array[trie_pointer] Of quarterword;
  {operations to perform}
(*\hskip10pt*)trie_l: packed array[trie_pointer] Of trie_pointer;
  {left subtrie links}
(*\hskip10pt*)trie_r: packed array[trie_pointer] Of trie_pointer;
  {right subtrie links}
(*\hskip10pt*)trie_ptr: trie_pointer; {the number of nodes in the trie}
(*\hskip10pt*)trie_hash: packed array[trie_pointer] Of trie_pointer;
  {used to identify equivalent subtries}
  tini

(*PASCAL module 950*)
  inittrie_taken: packed array[1..trie_size] Of boolean;
  {does a family start here?}
(*\hskip10pt*)trie_min: array[ASCII_code] Of trie_pointer;
  {the first possible slot for each character}
(*\hskip10pt*)trie_max: trie_pointer; {largest location used in |trie|}
(*\hskip10pt*)trie_not_ready: boolean; {is the trie still in linked form?}
  tini

(*PASCAL module 971*)
  best_height_plus_depth: scaled; {height of the best box, without stretching or 
  shrinking}

(*PASCAL module 980*)
  page_tail: pointer; {the final node on the current page}
  page_contents: empty..box_there; {what is on the current page so far?}
  page_max_depth: scaled; {maximum box depth on page being built}
  best_page_break: pointer; {break here to get the best page known so far}
  least_page_cost: integer; {the score for this currently best page}
  best_size: scaled; {its |page_goal|}

(*PASCAL module 982*)
  page_so_far: array [0..7] Of scaled; {height and glue of the current page}
  last_glue: pointer; {used to implement \.[\\lastskip]}
  last_penalty: integer; {used to implement \.[\\lastpenalty]}
  last_kern: scaled; {used to implement \.[\\lastkern]}
  insert_penalties: integer; {sum of the penalties for held-over insertions}

(*PASCAL module 989*)
  output_active: boolean; {are we in the midst of an output routine?}

(*PASCAL module 1032*)
  main_f: internal_font_number; {the current font}
  main_i: four_quarters; {character information bytes for |cur_l|}
  main_j: four_quarters; {ligature/kern command}
  main_k: font_index; {index into |font_info|}
  main_p: pointer; {temporary register for list manipulation}
  main_s: integer; {space factor value}
  bchar: halfword; {right boundary character of current font, or |non_char|}
  false_bchar: halfword; {nonexistent character matching |bchar|, or |non_char|}
  cancel_boundary: boolean; {should the left boundary be ignored?}
  ins_disc: boolean; {should we insert a discretionary node?}

(*PASCAL module 1074*)
  cur_box: pointer; {box to be placed into its context}

(*PASCAL module 1266*)
  after_token: halfword; {zero, or a saved token}

(*PASCAL module 1281*)
  long_help_seen: boolean; {has the long \.[\\errmessage] help been used?}

(*PASCAL module 1299*)
  format_ident: str_number;

(*PASCAL module 1305*)
  fmt_file: word_file; {for input or output of format information}

(*PASCAL module 1331*)
  ready_already: integer; {a sacrifice of purity for economy}

(*PASCAL module 1342*)
  write_file: array[0..15] Of alpha_file;
  write_open: array[0..17] Of boolean;

(*PASCAL module 1345*)
  write_loc: pointer; {|eqtb| address of \.[\\write]}

(*FIN INSERT 'Global variables'*)




Procedure initialize; {this procedure gets things started properly}

Var 
(*INSERT 'Local variables for initialization'*)(*PASCAL module 19*)
  i: integer;

(*PASCAL module 163*)
  k: integer; {index into |mem|, |eqtb|, etc.}

(*PASCAL module 927*)
  z: hyph_pointer; {runs through the exception dictionary}

(*FIN INSERT 'Local variables for initialization'*)

Begin
(*INSERT 'Initialize whatever \TeX\ might access'*)(*PASCAL module 8*)

(*INSERT 'Set initial values of key variables'*)(*PASCAL module 21*)
  xchr[32] := ' ';
  xchr[33] := '!';
  xchr[34] := '''';
  xchr[35] := '#';
  xchr[36] := '$';
  xchr[37] := '%';
  xchr[38] := '&';
  xchr[39] := '''';

  xchr[40] := '(';
  xchr[41] := ')';
  xchr[42] := '*';
  xchr[43] := '+';
  xchr[44] := ',';
  xchr[45] := '-';
  xchr[46] := '.';
  xchr[47] := '/';

  xchr[48] := '0';
  xchr[49] := '1';
  xchr[50] := '2';
  xchr[51] := '3';
  xchr[52] := '4';
  xchr[53] := '5';
  xchr[54] := '6';
  xchr[55] := '7';

  xchr[56] := '8';
  xchr[57] := '9';
  xchr[58] := ':';
  xchr[59] := ';';
  xchr[60] := '<';
  xchr[61] := '=';
  xchr[62] := '>';
  xchr[63] := '?';

  xchr[64] := '@';
  xchr[65] := 'A';
  xchr[66] := 'B';
  xchr[67] := 'C';
  xchr[68] := 'D';
  xchr[69] := 'E';
  xchr[70] := 'F';
  xchr[71] := 'G';

  xchr[72] := 'H';
  xchr[73] := 'I';
  xchr[74] := 'J';
  xchr[75] := 'K';
  xchr[76] := 'L';
  xchr[77] := 'M';
  xchr[78] := 'N';
  xchr[79] := 'O';

  xchr[80] := 'P';
  xchr[81] := 'Q';
  xchr[82] := 'R';
  xchr[83] := 'S';
  xchr[84] := 'T';
  xchr[85] := 'U';
  xchr[86] := 'V';
  xchr[87] := 'W';

  xchr[88] := 'X';
  xchr[89] := 'Y';
  xchr[90] := 'Z';
  xchr[91] := '[';
  xchr[92] := '\';
  xchr[93] := ']';
  xchr[94] := '^';
  xchr[95] := '_';

  xchr[96] := '`';
  xchr[97] := 'a';
  xchr[98] := 'b';
  xchr[99] := 'c';
  xchr[100] := 'd';
  xchr[101] := 'e';
  xchr[102] := 'f';
  xchr[103] := 'g';

  xchr[104] := 'h';
  xchr[105] := 'i';
  xchr[106] := 'j';
  xchr[107] := 'k';
  xchr[108] := 'l';
  xchr[109] := 'm';
  xchr[110] := 'n';
  xchr[111] := 'o';

  xchr[112] := 'p';
  xchr[113] := 'q';
  xchr[114] := 'r';
  xchr[115] := 's';
  xchr[116] := 't';
  xchr[117] := 'u';
  xchr[118] := 'v';
  xchr[119] := 'w';

  xchr[120] := 'x';
  xchr[121] := 'y';
  xchr[122] := 'z';
  xchr[123] := '{';
  xchr[124] := '|';
  xchr[125] := '}';
  xchr[126] := '~';


(*PASCAL module 23*)
  For i:=0 To 31 Do
    xchr[i] := ' ';
  For i:=127 To 255 Do
    xchr[i] := ' ';

(*PASCAL module 24*)
  For i:=first_text_char To last_text_char Do
    xord[chr(i)] := invalid_code;
  For i:=128 To 255 Do
    xord[xchr[i]] := i;
  For i:=0 To 126 Do
    xord[xchr[i]] := i;

(*PASCAL module 77*)
  deletions_allowed := true;
  set_box_allowed := true;
  error_count := 0; {|history| is initialized elsewhere}

(*PASCAL module 80*)
  help_ptr := 0;
  use_err_help := false;

(*PASCAL module 97*)
  interrupt := 0;
  OK_to_interrupt := true;

(*PASCAL module 166*)
  debug was_mem_end := mem_min; {indicate that everything was previously free}
  was_lo_max := mem_min;
  was_hi_min := mem_max;
  panicking := false;
  gubed

(*PASCAL module 215*)
  nest_ptr := 0;
  max_nest_stack := 0;
  mode := vmode;
  head := contrib_head;
  tail := contrib_head;
  prev_depth := ignore_depth;
  mode_line := 0;
  prev_graf := 0;
  shown_mode := 0;

(*INSERT 'Start a new current page'*)(*PASCAL module 991*)
  page_contents := empty;
  page_tail := page_head;
  link(page_head) := null;

  last_glue := max_halfword;
  last_penalty := 0;
  last_kern := 0;
  page_depth := 0;
  page_max_depth := 0

(*FIN INSERT 'Start a new current page'*);

(*PASCAL module 254*)
  For k:=int_base To eqtb_size Do
    xeq_level[k] := level_one;

(*PASCAL module 257*)
  no_new_control_sequence := true; {new identifiers are usually forbidden}
  next(hash_base) := 0;
  text(hash_base) := 0;
  For k:=hash_base+1 To undefined_control_sequence-1 Do
    hash[k] := hash[hash_base];

(*PASCAL module 272*)
  save_ptr := 0;
  cur_level := level_one;
  cur_group := bottom_level;
  cur_boundary := 0;
  max_save_stack := 0;

(*PASCAL module 287*)
  mag_set := 0;

(*PASCAL module 383*)
  top_mark := null;
  first_mark := null;
  bot_mark := null;
  split_first_mark := null;
  split_bot_mark := null;

(*PASCAL module 439*)
  cur_val := 0;
  cur_val_level := int_val;
  radix := 0;
  cur_order := normal;

(*PASCAL module 481*)
  For k:=0 To 16 Do
    read_open[k] := closed;

(*PASCAL module 490*)
  cond_ptr := null;
  if_limit := normal;
  cur_if := 0;
  if_line := 0;

(*PASCAL module 521*)
  TEX_format_default := 'TeXformats:plain.fmt';
(*TeXformats*)
(*plain*)
(*system dependencies*)

(*PASCAL module 551*)
  For k:=font_base To font_max Do
    font_used[k] := false;

(*PASCAL module 556*)
  null_character.b0 := min_quarterword;
  null_character.b1 := min_quarterword;
  null_character.b2 := min_quarterword;
  null_character.b3 := min_quarterword;

(*PASCAL module 593*)
  total_pages := 0;
  max_v := 0;
  max_h := 0;
  max_push := 0;
  last_bop := -1;
  doing_leaders := false;
  dead_cycles := 0;
  cur_s := -1;

(*PASCAL module 596*)
  half_buf := dvi_buf_size Div 2;
  dvi_limit := dvi_buf_size;
  dvi_ptr := 0;
  dvi_offset := 0;
  dvi_gone := 0;

(*PASCAL module 606*)
  down_ptr := null;
  right_ptr := null;

(*PASCAL module 662*)
  pack_begin_line := 0;

(*PASCAL module 685*)
  empty_field.rh := empty;
  empty_field.lh := null;

  null_delimiter.b0 := 0;
  null_delimiter.b1 := min_quarterword;

  null_delimiter.b2 := 0;
  null_delimiter.b3 := min_quarterword;

(*PASCAL module 771*)
  align_ptr := null;
  cur_align := null;
  cur_span := null;
  cur_loop := null;
  cur_head := null;
  cur_tail := null;

(*PASCAL module 928*)
  For z:=0 To hyph_size Do
    Begin
      hyph_word[z] := 0;
      hyph_list[z] := null;
    End;
  hyph_count := 0;

(*PASCAL module 990*)
  output_active := false;
  insert_penalties := 0;

(*PASCAL module 1033*)
  ligature_present := false;
  cancel_boundary := false;
  lft_hit := false;
  rt_hit := false;
  ins_disc := false;

(*PASCAL module 1267*)
  after_token := 0;

(*PASCAL module 1300*)
  format_ident := 0;

(*PASCAL module 1343*)
  For k:=0 To 17 Do
    write_open[k] := false;

(*FIN INSERT 'Set initial values of key variables'*)

  init
(*INSERT 'Initialize table entries (done by \.{INITEX} only)'*)(*PASCAL module 164*)
  For k:=mem_bot+1 To lo_mem_stat_max Do
    mem[k].sc := 0;
  {all glue dimensions are zeroed}
(*data structure assumptions*)
  k := mem_bot;
  While k<=lo_mem_stat_max Do
    {set first words of glue specifications}
    Begin
      glue_ref_count(k) := null+1;
      stretch_order(k) := normal;
      shrink_order(k) := normal;
      k := k+glue_spec_size;
    End;
  stretch(fil_glue) := unity;
  stretch_order(fil_glue) := fil;

  stretch(fill_glue) := unity;
  stretch_order(fill_glue) := fill;

  stretch(ss_glue) := unity;
  stretch_order(ss_glue) := fil;

  shrink(ss_glue) := unity;
  shrink_order(ss_glue) := fil;

  stretch(fil_neg_glue) := -unity;
  stretch_order(fil_neg_glue) := fil;

  rover := lo_mem_stat_max+1;
  link(rover) := empty_flag; {now initialize the dynamic memory}
  node_size(rover) := 1000; {which is a 1000-word available node}
  llink(rover) := rover;
  rlink(rover) := rover;

  lo_mem_max := rover+1000;
  link(lo_mem_max) := null;
  info(lo_mem_max) := null;

  For k:=hi_mem_stat_min To mem_top Do
    mem[k] := mem[lo_mem_max]; {clear list heads}

(*INSERT 'Initialize the special list heads and constant nodes'*)(*PASCAL module 790*)
  info(omit_template) := end_template_token; {|link(omit_template)=null|}

(*PASCAL module 797*)
  link(end_span) := max_quarterword+1;
  info(end_span) := null;

(*PASCAL module 820*)

  Type (last_active) := hyphenated;
    line_number(last_active) := max_halfword;
    subtype(last_active) := 0; {the |subtype| is never examined by the algorithm}

(*PASCAL module 981*)
    subtype(page_ins_head) := qi(255);

  Type (page_ins_head) := split_up;
    link(page_ins_head) := page_ins_head;

(*PASCAL module 988*)

  Type (page_head) := glue_node;
    subtype(page_head) := normal;

(*FIN INSERT 'Initialize the special list heads and constant nodes'*);
    avail := null;
    mem_end := mem_top;
    hi_mem_min := hi_mem_stat_min; {initialize the one-word memory}
    var_used := lo_mem_stat_max+1-mem_bot;
    dyn_used := hi_mem_stat_usage;
  {initialize statistics}

(*PASCAL module 222*)
    eq_type(undefined_control_sequence) := undefined_cs;
    equiv(undefined_control_sequence) := null;
    eq_level(undefined_control_sequence) := level_zero;
    For k:=active_base To undefined_control_sequence-1 Do
      eqtb[k] := eqtb[undefined_control_sequence];

(*PASCAL module 228*)
    equiv(glue_base) := zero_glue;
    eq_level(glue_base) := level_one;
    eq_type(glue_base) := glue_ref;
    For k:=glue_base+1 To local_base-1 Do
      eqtb[k] := eqtb[glue_base];
    glue_ref_count(zero_glue) := glue_ref_count(zero_glue)+local_base-glue_base;

(*PASCAL module 232*)
    par_shape_ptr := null;
    eq_type(par_shape_loc) := shape_ref;
    eq_level(par_shape_loc) := level_one;

    For k:=output_routine_loc To toks_base+255 Do
      eqtb[k] := eqtb[undefined_control_sequence];
    box(0) := null;
    eq_type(box_base) := box_ref;
    eq_level(box_base) := level_one;
    For k:=box_base+1 To box_base+255 Do
      eqtb[k] := eqtb[box_base];
    cur_font := null_font;
    eq_type(cur_font_loc) := data;
    eq_level(cur_font_loc) := level_one;

    For k:=math_font_base To math_font_base+47 Do
      eqtb[k] := eqtb[cur_font_loc];
    equiv(cat_code_base) := 0;
    eq_type(cat_code_base) := data;
    eq_level(cat_code_base) := level_one;

    For k:=cat_code_base+1 To int_base-1 Do
      eqtb[k] := eqtb[cat_code_base];
    For k:=0 To 255 Do
      Begin
        cat_code(k) := other_char;
        math_code(k) := hi(k);
        sf_code(k) := 1000;
      End;
    cat_code(carriage_return) := car_ret;
    cat_code(' ') := spacer;
    cat_code('\') := escape;
    cat_code('%') := comment;
    cat_code(invalid_code) := invalid_char;
    cat_code(null_code) := ignore;
    For k:='0' To '9' Do
      math_code(k) := hi(k+var_code);
    For k:='A' To 'Z' Do
      Begin
        cat_code(k) := letter;
        cat_code(k+'a'-'A') := letter;

        math_code(k) := hi(k+var_code+64);
        math_code(k+'a'-'A') := hi(k+'a'-'A'+var_code+64);

        lc_code(k) := k+'a'-'A';
        lc_code(k+'a'-'A') := k+'a'-'A';

        uc_code(k) := k;
        uc_code(k+'a'-'A') := k;

        sf_code(k) := 999;
      End;

(*PASCAL module 240*)
    For k:=int_base To del_code_base-1 Do
      eqtb[k].int := 0;
    mag := 1000;
    tolerance := 10000;
    hang_after := 1;
    max_dead_cycles := 25;
    escape_char := '\';
    end_line_char := carriage_return;
    For k:=0 To 255 Do
      del_code(k) := -1;
    del_code('.') := 0; {this null delimiter is used in error recovery}

(*PASCAL module 250*)
    For k:=dimen_base To eqtb_size Do
      eqtb[k].sc := 0;

(*PASCAL module 258*)
    hash_used := frozen_control_sequence; {nothing is used}
    cs_count := 0;
    eq_type(frozen_dont_expand) := dont_expand;
    text(frozen_dont_expand) := 'notexpanded:';
(*notexpanded:*)

(*PASCAL module 552*)
    font_ptr := null_font;
    fmem_ptr := 7;
    font_name[null_font] := 'nullfont';
    font_area[null_font] := '';
    hyphen_char[null_font] := '-';
    skew_char[null_font] := -1;
    bchar_label[null_font] := non_address;
    font_bchar[null_font] := non_char;
    font_false_bchar[null_font] := non_char;
    font_bc[null_font] := 1;
    font_ec[null_font] := 0;
    font_size[null_font] := 0;
    font_dsize[null_font] := 0;
    char_base[null_font] := 0;
    width_base[null_font] := 0;
    height_base[null_font] := 0;
    depth_base[null_font] := 0;
    italic_base[null_font] := 0;
    lig_kern_base[null_font] := 0;
    kern_base[null_font] := 0;
    exten_base[null_font] := 0;
    font_glue[null_font] := null;
    font_params[null_font] := 7;
    param_base[null_font] := -1;
    For k:=0 To 6 Do
      font_info[k].sc := 0;

(*PASCAL module 946*)
    For k:=-trie_op_size To trie_op_size Do
      trie_op_hash[k] := 0;
    For k:=0 To 255 Do
      trie_used[k] := min_quarterword;
    trie_op_ptr := 0;

(*PASCAL module 951*)
    trie_not_ready := true;
    trie_root := 0;
    trie_c[0] := si(0);
    trie_ptr := 0;

(*PASCAL module 1216*)
    text(frozen_protection) := 'inaccessible';

(*PASCAL module 1301*)
    format_ident := ' (INITEX)';

(*PASCAL module 1369*)
    text(end_write) := 'endwrite';
    eq_level(end_write) := level_one;
    eq_type(end_write) := outer_call;
    equiv(end_write) := null;

(*FIN INSERT 'Initialize table entries (done by \.{INITEX} only)'*);
    tini

(*FIN INSERT 'Initialize whatever \TeX\ might access'*);
  End;


(*\4*)
(*INSERT 'Basic printing procedures'*)(*PASCAL module 57*)
  Procedure print_ln; {prints an end-of-line}
  Begin
    Case selector Of 
      term_and_log:
                    Begin
                      wterm_cr;
                      wlog_cr;
                      term_offset := 0;
                      file_offset := 0;
                    End;
      log_only:
                Begin
                  wlog_cr;
                  file_offset := 0;
                End;
      term_only:
                 Begin
                   wterm_cr;
                   term_offset := 0;
                 End;
      no_print,pseudo,new_string: do_nothing;
      othercases write_ln(write_file[selector])
      endcases;

    End; {|tally| is not affected}

(*PASCAL module 58*)
    Procedure print_char(s:ASCII_code); {prints a single character}

    Label exit;
    Begin
      If 
(*INSERT 'Character |s| is the current new-line character'*)(*FIN INSERT 'Character |s| is the current new-line character'*) Then
        If selector<pseudo Then
          Begin
            print_ln;
            return;
          End;
      Case selector Of 
        term_and_log:
                      Begin
                        wterm(xchr[s]);
                        wlog(xchr[s]);
                        incr(term_offset);
                        incr(file_offset);
                        If term_offset=max_print_line Then
                          Begin
                            wterm_cr;
                            term_offset := 0;
                          End;
                        If file_offset=max_print_line Then
                          Begin
                            wlog_cr;
                            file_offset := 0;
                          End;
                      End;
        log_only:
                  Begin
                    wlog(xchr[s]);
                    incr(file_offset);
                    If file_offset=max_print_line Then print_ln;
                  End;
        term_only:
                   Begin
                     wterm(xchr[s]);
                     incr(term_offset);
                     If term_offset=max_print_line Then print_ln;
                   End;
        no_print: do_nothing;
        pseudo: If tally<trick_count Then trick_buf[tally mod error_line] := s;
        new_string:
                    Begin
                      If pool_ptr<pool_size Then append_char(s);
                    End; {we drop characters if the string space is full}
        othercases write(write_file[selector],xchr[s])
        endcases;

        incr(tally);
        exit:
      End;

(*PASCAL module 59*)
      Procedure print(s:integer); {prints string |s|}

      Label exit;

      Var j: pool_pointer; {current character code position}
        nl: integer; {new-line character to restore}
      Begin
        If s>=str_ptr Then s := '???' {this can''t happen}
(*???*)
        Else If s<256 Then
               If s<0 Then s := '???' {can''t happen}
        Else
          Begin
            If selector>pseudo Then
              Begin
                print_char(s);
                return; {internal strings are not expanded}
              End;
            If (
(*INSERT 'Character |s| is the current new-line character'*)(*FIN INSERT 'Character |s| is the current new-line character'*)) Then
              If selector<pseudo Then
                Begin
                  print_ln;
                  return;
                End;
            nl := new_line_char;
            new_line_char := -1;
      {temporarily disable new-line character}
            j := str_start[s];
            While j<str_start[s+1] Do
              Begin
                print_char(so(str_pool[j]));
                incr(j);
              End;
            new_line_char := nl;
            return;
          End;
        j := str_start[s];
        While j<str_start[s+1] Do
          Begin
            print_char(so(str_pool[j]));
            incr(j);
          End;
        exit:
      End;

(*PASCAL module 60*)
      Procedure slow_print(s:integer); {prints string |s|}

      Var j: pool_pointer; {current character code position}
      Begin
        If (s>=str_ptr) Or (s<256) Then print(s)
        Else
          Begin
            j := str_start[s];
            While j<str_start[s+1] Do
              Begin
                print(so(str_pool[j]));
                incr(j);
              End;
          End;
      End;

(*PASCAL module 62*)
      Procedure print_nl(s:str_number); {prints string |s| at beginning of line}
      Begin
        If ((term_offset>0)And(odd(selector)))Or
           ((file_offset>0)And(selector>=log_only)) Then print_ln;
        print(s);
      End;

(*PASCAL module 63*)
      Procedure print_esc(s:str_number); {prints escape character, then |s|}

      Var c: integer; {the escape character code}
      Begin
(*INSERT 'Set variable |c| to the current escape character'*)(*FIN INSERT 'Set variable |c| to the current escape character'*);
        If c>=0 Then If c<256 Then print(c);
        slow_print(s);
      End;

(*PASCAL module 64*)
      Procedure print_the_digs(k:eight_bits);
  {prints |dig[k-1]|$\,\ldots\,$|dig[0]|}
      Begin
        While k>0 Do
          Begin
            decr(k);
            If dig[k]<10 Then print_char('0'+dig[k])
            Else print_char('A'-10+dig[k]);
          End;
      End;

(*PASCAL module 65*)
      Procedure print_int(n:integer); {prints an integer in decimal form}

      Var k: 0..23; {index to current digit; we assume that $|n|<10^[23]$}
        m: integer; {used to negate |n| in possibly dangerous cases}
      Begin
        k := 0;
        If n<0 Then
          Begin
            print_char('-');
            If n>-100000000 Then negate(n)
            Else
              Begin
                m := -1-n;
                n := m Div 10;
                m := (m Mod 10)+1;
                k := 1;
                If m<10 Then dig[0] := m
                Else
                  Begin
                    dig[0] := 0;
                    incr(n);
                  End;
              End;
          End;
        Repeat
          dig[k] := n Mod 10;
          n := n Div 10;
          incr(k);
        Until n=0;
        print_the_digs(k);
      End;

(*PASCAL module 262*)
      Procedure print_cs(p:integer); {prints a purported control sequence}
      Begin
        If p<hash_base Then {single character}
          If p>=single_base Then
            If p=null_cs Then
              Begin
                print_esc('csname');
                print_esc('endcsname');
                print_char(' ');
              End
        Else
          Begin
            print_esc(p-single_base);
            If cat_code(p-single_base)=letter Then print_char(' ');
          End
        Else If p<active_base Then print_esc('IMPOSSIBLE.')
(*IMPOSSIBLE*)
        Else print(p-active_base)
        Else If p>=undefined_control_sequence Then print_esc('IMPOSSIBLE.')
        Else If (text(p)<0)Or(text(p)>=str_ptr) Then print_esc('NONEXISTENT.')
(*NONEXISTENT*)
        Else
          Begin
            print_esc(text(p));
            print_char(' ');
          End;
      End;

(*PASCAL module 263*)
      Procedure sprint_cs(p:pointer); {prints a control sequence}
      Begin
        If p<hash_base Then
          If p<single_base Then print(p-active_base)
        Else  If p<null_cs Then print_esc(p-single_base)
        Else
          Begin
            print_esc('csname');
            print_esc('endcsname');
          End
        Else print_esc(text(p));
      End;

(*PASCAL module 518*)
      Procedure print_file_name(n,a,e:integer);
      Begin
        slow_print(a);
        slow_print(n);
        slow_print(e);
      End;

(*PASCAL module 699*)
      Procedure print_size(s:integer);
      Begin
        If s=text_size Then print_esc('textfont')
        Else If s=script_size Then print_esc('scriptfont')
        Else print_esc('scriptscriptfont');
      End;

(*PASCAL module 1355*)
      Procedure print_write_whatsit(s:str_number;p:pointer);
      Begin
        print_esc(s);
        If write_stream(p)<16 Then print_int(write_stream(p))
        Else If write_stream(p)=16 Then print_char('*')
(**\relax*)
        Else print_char('-');
      End;

(*FIN INSERT 'Basic printing procedures'*)

(*\4*)
(*INSERT 'Error handling procedures'*)(*PASCAL module 78*)
      Procedure normalize_selector;
      forward;
(*\2*)

      Procedure get_token;
      forward;
(*\2*)

      Procedure term_input;
      forward;
(*\2*)

      Procedure show_context;
      forward;
(*\2*)

      Procedure begin_file_reading;
      forward;
(*\2*)

      Procedure open_log_file;
      forward;
(*\2*)

      Procedure close_files_and_terminate;
      forward;
(*\2*)

      Procedure clear_for_error_prompt;
      forward;
(*\2*)

      Procedure give_err_help;
      forward;
(*\2*)

(*\4\hskip-\fontdimen2\font*);
      debugprocedure debug_help;
      forward;;
      gubed

(*PASCAL module 81*)
      Procedure jump_out;
      Begin
        goto end_of_TEX;
      End;

(*PASCAL module 82*)
      Procedure error; {completes the job of error reporting}

      Label continue,exit;

      Var c: ASCII_code; {what the user types}
        s1,s2,s3,s4: integer;
  {used to save global variables when deleting tokens}
      Begin
        If history<error_message_issued Then history := error_message_issued;
        print_char('.');
        show_context;
        If interaction=error_stop_mode Then
(*INSERT 'Get user''s advice and |return|'*)(*PASCAL module 83*)
          loopbegin continue: clear_for_error_prompt;
        prompt_input('? ');
(*?\relax*)
        If last=first Then return;
        c := buffer[first];
        If c>='a' Then c := c+'A'-'a'; {convert to uppercase}

(*INSERT 'Interpret code |c| and |return| if done'*)(*PASCAL module 84*)
        Case c Of 
          '0','1','2','3','4','5','6','7','8','9': If deletions_allowed Then

(*INSERT 'Delete \(c)|c-''0''| tokens and |goto continue|'*)(*PASCAL module 88*)
                                                     Begin
                                                       s1 := cur_tok;
                                                       s2 := cur_cmd;
                                                       s3 := cur_chr;
                                                       s4 := align_state;
                                                       align_state := 1000000;
                                                       OK_to_interrupt := false;
                                                       If (last>first+1) And (buffer[first+1]>='0')And(buffer[first+1]<='9') Then
                                                         c := c*10+buffer[first+1]-'0'*11
                                                       Else c := c-'0';
                                                       While c>0 Do
                                                         Begin
                                                           get_token; {one-level recursive call of |error| is possible}
                                                           decr(c);
                                                         End;
                                                       cur_tok := s1;
                                                       cur_cmd := s2;
                                                       cur_chr := s3;
                                                       align_state := s4;
                                                       OK_to_interrupt := true;
                                                       help2('I have just deleted some text, as you asked.')

                                                       ('You can now delete more, or insert, or whatever.');
                                                       show_context;
                                                       goto continue;
                                                     End

(*FIN INSERT 'Delete \(c)|c-''0''| tokens and |goto continue|'*);
(*\4\4*)  ;
          debug 'D':
                     Begin
                       debug_help;
                       goto continue;
                     End;
          gubed

          'E': If base_ptr>0 Then
                 Begin
                   print_nl('You want to edit file ');
(*You want to edit file x*)
                   slow_print(input_stack[base_ptr].name_field);
                   print(' at line ');
                   print_int(line);
                   interaction := scroll_mode;
                   jump_out;
                 End;
          'H':
(*INSERT 'Print the help information and |goto continue|'*)(*PASCAL module 89*)
               Begin
                 If use_err_help Then
                   Begin
                     give_err_help;
                     use_err_help := false;
                   End
                 Else
                   Begin
                     If help_ptr=0 Then
                       help2('Sorry, I don''t know how to help in this situation.')

    (*\kern1em*)       ('Maybe you should try asking a human?');
                     Repeat
                       decr(help_ptr);
                       print(help_line[help_ptr]);
                       print_ln;
                     Until help_ptr=0;
                   End;
                 help4('Sorry, I already gave what help I could...')

                 ('Maybe you should try asking a human?')

                 ('An error might have occurred before I noticed any problems.')

                 ('``If all else fails, read the instructions.''''');

                 goto continue;
               End

(*FIN INSERT 'Print the help information and |goto continue|'*);
          'I':
(*INSERT 'Introduce new material from the terminal and |return|'*)(*PASCAL module 87*)
               Begin
                 begin_file_reading; {enter a new syntactic level for terminal input}
{now |state=mid_line|, so an initial blank space will count as a blank}
                 If last>first+1 Then
                   Begin
                     loc := first+1;
                     buffer[first] := ' ';
                   End
                 Else
                   Begin
                     prompt_input('insert>');
                     loc := first;
(*insert>*)
                   End;
                 first := last;
                 cur_input.limit_field := last-1; {no |end_line_char| ends this line}
                 return;
               End

(*FIN INSERT 'Introduce new material from the terminal and |return|'*);
          'Q','R','S':
(*INSERT 'Change the interaction level and |return|'*)(*PASCAL module 86*)
                       Begin
                         error_count := 0;
                         interaction := batch_mode+c-'Q';
                         print('OK, entering ');
                         Case c Of 
                           'Q':
                                Begin
                                  print_esc('batchmode');
                                  decr(selector);
                                End;
                           'R': print_esc('nonstopmode');
                           'S': print_esc('scrollmode');
                         End; {there are no other cases}
                         print('...');
                         print_ln;
                         update_terminal;
                         return;
                       End

(*FIN INSERT 'Change the interaction level and |return|'*);
          'X':
               Begin
                 interaction := scroll_mode;
                 jump_out;
               End;
          othercases do_nothing
          endcases;


(*INSERT 'Print the menu of available options'*)(*PASCAL module 85*)
          Begin
            print('Type <return> to proceed, S to scroll future error messages,');

(*Type <return> to proceed...*)
            print_nl('R to run without stopping, Q to run quietly,');

            print_nl('I to insert something, ');
            If base_ptr>0 Then print('E to edit your file,');
            If deletions_allowed Then
              print_nl('1 or ... or 9 to ignore the next 1 to 9 tokens of input,');
            print_nl('H for help, X to quit.');
          End

(*FIN INSERT 'Print the menu of available options'*)

(*FIN INSERT 'Interpret code |c| and |return| if done'*);
        End

(*FIN INSERT 'Get user''s advice and |return|'*);
        incr(error_count);
        If error_count=100 Then
          Begin
            print_nl('(That makes 100 errors; please try again.)');
(*That makes 100 errors...*)
            history := fatal_error_stop;
            jump_out;
          End;

(*INSERT 'Put help message on the transcript file'*)(*PASCAL module 90*)
        If interaction>batch_mode Then decr(selector); {avoid terminal output}
        If use_err_help Then
          Begin
            print_ln;
            give_err_help;
          End
        Else While help_ptr>0 Do
               Begin
                 decr(help_ptr);
                 print_nl(help_line[help_ptr]);
               End;
        print_ln;
        If interaction>batch_mode Then incr(selector); {re-enable terminal output}
        print_ln

(*FIN INSERT 'Put help message on the transcript file'*);
        exit:
      End;

(*PASCAL module 93*)
      Procedure fatal_error(s:str_number); {prints |s|, and that's it}
      Begin
        normalize_selector;

        print_err('Emergency stop');
        help1(s);
        succumb;
(*Emergency stop*)
      End;

(*PASCAL module 94*)
      Procedure overflow(s:str_number;n:integer); {stop due to finiteness}
      Begin
        normalize_selector;
        print_err('TeX capacity exceeded, sorry [');
(*TeX capacity exceeded ...*)
        print(s);
        print_char('=');
        print_int(n);
        print_char(']');
        help2('If you really absolutely need more capacity,')

        ('you can ask a wizard to enlarge me.');
        succumb;
      End;

(*PASCAL module 95*)
      Procedure confusion(s:str_number);
  {consistency check violated; |s| tells where}
      Begin
        normalize_selector;
        If history<error_message_issued Then
          Begin
            print_err('This can''t happen (');
            print(s);
            print_char(')');
(*This can''t happen*)
            help1('I''m broken. Please show this to someone who can fix can fix');
          End
        Else
          Begin
            print_err('I can''t go on meeting you like this');
(*I can''t go on...*)
            help2('One of your faux pas seems to have wounded me deeply...')

            ('in fact, I''m barely conscious. Please fix it and try again.');
          End;
        succumb;
      End;

(*FIN INSERT 'Error handling procedures'*)



(***PASCAL module 27***)
      Function a_open_in(Var f:alpha_file): boolean;
  {open a text file for input}
      Begin
        reset(f,name_of_file,'/O');
        a_open_in := reset_OK(f);
      End;



      Function a_open_out(Var f:alpha_file): boolean;
  {open a text file for output}
      Begin
        rewrite(f,name_of_file,'/O');
        a_open_out := rewrite_OK(f);
      End;



      Function b_open_in(Var f:byte_file): boolean;
  {open a binary file for input}
      Begin
        reset(f,name_of_file,'/O');
        b_open_in := reset_OK(f);
      End;



      Function b_open_out(Var f:byte_file): boolean;
  {open a binary file for output}
      Begin
        rewrite(f,name_of_file,'/O');
        b_open_out := rewrite_OK(f);
      End;



      Function w_open_in(Var f:word_file): boolean;
  {open a word file for input}
      Begin
        reset(f,name_of_file,'/O');
        w_open_in := reset_OK(f);
      End;



      Function w_open_out(Var f:word_file): boolean;
  {open a word file for output}
      Begin
        rewrite(f,name_of_file,'/O');
        w_open_out := rewrite_OK(f);
      End;


(***PASCAL module 28***)
      Procedure a_close(Var f:alpha_file); {close a text file}
      Begin
        close(f);
      End;



      Procedure b_close(Var f:byte_file); {close a binary file}
      Begin
        close(f);
      End;



      Procedure w_close(Var f:word_file); {close a word file}
      Begin
        close(f);
      End;


(***PASCAL module 31***)
      Function input_ln(Var f:alpha_file;bypass_eoln:boolean): boolean;
  {inputs the next line or returns |false|}

      Var last_nonblank: 0..buf_size; {|last| with trailing blanks removed}
      Begin
        If bypass_eoln Then If Not eof(f) Then get(f);
  {input the first character of the line into |f^|}
        last := first; {cf.\ Matthew 19\thinspace:\thinspace30}
        If eof(f) Then input_ln := false
        Else
          Begin
            last_nonblank := first;
            While Not eoln(f) Do
              Begin
                If last>=max_buf_stack Then
                  Begin
                    max_buf_stack := last+1;
                    If max_buf_stack=buf_size Then

(*INSERT 'Report overflow of the input buffer, and abort'*)(*PASCAL module 35*)
                      If format_ident=0 Then
                        Begin
                          write_ln(term_out,'Buffer size exceeded!');
                          goto final_end;
(*Buffer size exceeded*)
                        End
                    Else
                      Begin
                        cur_input.loc_field := first;
                        cur_input.limit_field := last-1;
                        overflow('buffer size',buf_size);
(*TeX capacity exceeded buffer size][\quad buffer size*)
                      End

(*FIN INSERT 'Report overflow of the input buffer, and abort'*);
                  End;
                buffer[last] := xord[f^];
                get(f);
                incr(last);
                If buffer[last-1]<>' ' Then last_nonblank := last;
              End;
            last := last_nonblank;
            input_ln := true;
          End;
      End;


(***PASCAL module 37***)
      Function init_terminal: boolean; {gets the terminal input started}

      Label exit;
      Begin
        t_open_in;
        loopbegin wake_up_terminal;
        write(term_out,'**');
        update_terminal;
(****)
        If Not input_ln(term_in,true) Then {this shouldn't happen}
          Begin
            write_ln(term_out);
            write(term_out,'! End of file on the terminal... why?');
(*End of file on the terminal*)
            init_terminal := false;
            return;
          End;
        loc := first;
        While (loc<last)And(buffer[loc]=' ') Do
          incr(loc);
        If loc<last Then
          Begin
            init_terminal := true;
            return; {return unless the line was all blank}
          End;
        write_ln(term_out,'Please type the name of your input file.');
      End;
      exit:
    End;


(***PASCAL module 43***)
    Function make_string : str_number; {current string enters the pool}
    Begin
      If str_ptr=max_strings Then
        overflow('number of strings',max_strings-init_str_ptr);
(*TeX capacity exceeded number of strings][\quad number of strings*)
      incr(str_ptr);
      str_start[str_ptr] := pool_ptr;
      make_string := str_ptr-1;
    End;


(***PASCAL module 45***)
    Function str_eq_buf(s:str_number;k:integer): boolean;
  {test equality of strings}

    Label not_found; {loop exit}

    Var j: pool_pointer; {running index}
      result: boolean; {result of comparison}
    Begin
      j := str_start[s];
      While j<str_start[s+1] Do
        Begin
          If so(str_pool[j])<>buffer[k] Then
            Begin
              result := false;
              goto not_found;
            End;
          incr(j);
          incr(k);
        End;
      result := true;
      not_found: str_eq_buf := result;
    End;


(***PASCAL module 46***)
    Function str_eq_str(s,t:str_number): boolean;
  {test equality of strings}

    Label not_found; {loop exit}

    Var j,k: pool_pointer; {running indices}
      result: boolean; {result of comparison}
    Begin
      result := false;
      If length(s)<>length(t) Then goto not_found;
      j := str_start[s];
      k := str_start[t];
      While j<str_start[s+1] Do
        Begin
          If str_pool[j]<>str_pool[k] Then goto not_found;
          incr(j);
          incr(k);
        End;
      result := true;
      not_found: str_eq_str := result;
    End;


(***PASCAL module 47***)
    init Function get_strings_started: boolean; {initializes the string pool, 
  but returns |false| if something goes wrong}

    Label done,exit;

    Var k,l: 0..255; {small indices or counters}
      m,n: text_char; {characters input from |pool_file|}
      g: str_number; {garbage}
      a: integer; {accumulator for check sum}
      c: boolean; {check sum has been checked}
    Begin
      pool_ptr := 0;
      str_ptr := 0;
      str_start[0] := 0;

(*INSERT 'Make the first 256 strings'*)(*PASCAL module 48*)
      For k:=0 To 255 Do
        Begin
          If (
(*INSERT 'Character |k| cannot be printed'*)(*PASCAL module 49*)
             (k<' ')Or(k>'~')

(*FIN INSERT 'Character |k| cannot be printed'*)) Then
            Begin
              append_char('^');
              append_char('^');
              If k<64 Then append_char(k+64)
              Else If k<128 Then append_char(k-64)
              Else
                Begin
                  app_lc_hex(k Div 16);
                  app_lc_hex(k Mod 16);
                End;
            End
          Else append_char(k);
          g := make_string;
        End

(*FIN INSERT 'Make the first 256 strings'*);

(*INSERT 'Read the other strings from the \.{TEX.POOL} file and return |true|, or give an error message and return |false|'*)(*PASCAL module 51*)
      name_of_file := pool_name; {we needn't set |name_length|}
      If a_open_in(pool_file) Then
        Begin
          c := false;
          Repeat
(*INSERT 'Read one string, but return |false| if the string memory space is getting too tight for comfort'*)(*PASCAL module 52*)
            Begin
              If eof(pool_file) Then bad_pool('! TEX.POOL has no check sum.');
(*TEX.POOL has no check sum*)
              read(pool_file,m,n); {read two digits of string length}
              If m='*' Then
(*INSERT 'Check the pool check sum'*)(*PASCAL module 53*)
                Begin
                  a := 0;
                  k := 1;
                  loop
                  Begin
                    If (xord[n]<'0')Or(xord[n]>'9') Then
                      bad_pool('! TEX.POOL check sum doesn''t have nine digits.');
(*TEX.POOL check sum...*)
                    a := 10*a+xord[n]-'0';
                    If k=9 Then goto done;
                    incr(k);
                    read(pool_file,n);
                  End;
                  done: If a<>@$ Then bad_pool('! TEX.POOL doesn''t match; TANGLE me again.');
(*TEX.POOL doesn''t match*)
                  c := true;
                End

(*FIN INSERT 'Check the pool check sum'*)
              Else
                Begin
                  If (xord[m]<'0')Or(xord[m]>'9')Or
                     (xord[n]<'0')Or(xord[n]>'9') Then
                    bad_pool('! TEX.POOL line doesn''t begin with two digits.');
(*TEX.POOL line doesn''t...*)
                  l := xord[m]*10+xord[n]-'0'*11; {compute the length}
                  If pool_ptr+l+string_vacancies>pool_size Then
                    bad_pool('! You have to increase POOLSIZE.');
(*You have to increase POOLSIZE*)
                  For k:=1 To l Do
                    Begin
                      If eoln(pool_file) Then m := ' '
                      Else read(pool_file,m);
                      append_char(xord[m]);
                    End;
                  read_ln(pool_file);
                  g := make_string;
                End;
            End

(*FIN INSERT 'Read one string, but return |false| if the string memory space is getting too tight for comfort'*);
          Until c;
          a_close(pool_file);
          get_strings_started := true;
        End
      Else  bad_pool('! I can''t read TEX.POOL.')
(*I can''t read TEX.POOL*)

(*FIN INSERT 'Read the other strings from the \.{TEX.POOL} file and return |true|, or give an error message and return |false|'*);
      exit:
    End;
    tini


(***PASCAL module 66***)
    Procedure print_two(n:integer); {prints two least significant digits}
    Begin
      n := abs(n) Mod 100;
      print_char('0'+(n Div 10));
      print_char('0'+(n Mod 10));
    End;


(***PASCAL module 67***)
    Procedure print_hex(n:integer);
  {prints a positive integer in hexadecimal form}

    Var k: 0..22; {index to current digit; we assume that $0\L n<16^[22]$}
    Begin
      k := 0;
      print_char('''');
      Repeat
        dig[k] := n Mod 16;
        n := n Div 16;
        incr(k);
      Until n=0;
      print_the_digs(k);
    End;


(***PASCAL module 69***)
    Procedure print_roman_int(n:integer);

    Label exit;

    Var j,k: pool_pointer; {mysterious indices into |str_pool|}
      u,v: nonnegative_integer; {mysterious numbers}
    Begin
      j := str_start['m2d5c2l5x2v5i'];
      v := 1000;
      loop
      Begin
        While n>=v Do
          Begin
            print_char(so(str_pool[j]));
            n := n-v;
          End;
        If n<=0 Then return; {nonpositive input produces no output}
        k := j+2;
        u := v Div (so(str_pool[k-1])-'0');
        If str_pool[k-1]=si('2') Then
          Begin
            k := k+2;
            u := u Div (so(str_pool[k-1])-'0');
          End;
        If n+u>=v Then
          Begin
            print_char(so(str_pool[k]));
            n := n+u;
          End
        Else
          Begin
            j := j+2;
            v := v Div (so(str_pool[j-1])-'0');
          End;
      End;
      exit:
    End;


(***PASCAL module 70***)
    Procedure print_current_string; {prints a yet-unmade string}

    Var j: pool_pointer; {points to current character code}
    Begin
      j := str_start[str_ptr];
      While j<pool_ptr Do
        Begin
          print_char(so(str_pool[j]));
          incr(j);
        End;
    End;


(***PASCAL module 71***)
    Procedure term_input; {gets a line from the terminal}

    Var k: 0..buf_size; {index into |buffer|}
    Begin
      update_terminal; {now the user sees the prompt for sure}
      If Not input_ln(term_in,true) Then fatal_error('End of file on the terminal!');
(*End of file on the terminal*)
      term_offset := 0; {the user's line ended with \<\rm return>}
      decr(selector); {prepare to echo the input}
      If last<>first Then For k:=first To last-1 Do
                            print(buffer[k]);
      print_ln;
      incr(selector); {restore previous status}
    End;


(***PASCAL module 91***)
    Procedure int_error(n:integer);
    Begin
      print(' (');
      print_int(n);
      print_char(')');
      error;
    End;


(***PASCAL module 92***)
    Procedure normalize_selector;
    Begin
      If log_opened Then selector := term_and_log
      Else selector := term_only;
      If job_name=0 Then open_log_file;
      If interaction=batch_mode Then decr(selector);
    End;


(***PASCAL module 98***)
    Procedure pause_for_instructions;
    Begin
      If OK_to_interrupt Then
        Begin
          interaction := error_stop_mode;
          If (selector=log_only)Or(selector=no_print) Then
            incr(selector);
          print_err('Interruption');
(*Interruption*)
          help3('You rang?')

          ('Try to insert some instructions for me (e.g.,`I\showlists''),')

          ('unless you just want to quit by typing `X''.');
          deletions_allowed := false;
          error;
          deletions_allowed := true;
          interrupt := 0;
        End;
    End;


(***PASCAL module 100***)
    Function half(x:integer): integer;
    Begin
      If odd(x) Then half := (x+1) Div 2
      Else half := x Div 2;
    End;


(***PASCAL module 102***)
    Function round_decimals(k:small_number) : scaled;
  {converts a decimal fraction}

    Var a: integer; {the accumulator}
    Begin
      a := 0;
      While k>0 Do
        Begin
          decr(k);
          a := (a+dig[k]*two) Div 10;
        End;
      round_decimals := (a+1) Div 2;
    End;


(***PASCAL module 103***)
    Procedure print_scaled(s:scaled); {prints scaled real, rounded to five 
  digits}

    Var delta: scaled; {amount of allowable inaccuracy}
    Begin
      If s<0 Then
        Begin
          print_char('-');
          negate(s); {print the sign, if negative}
        End;
      print_int(s Div unity); {print the integer part}
      print_char('.');
      s := 10*(s Mod unity)+5;
      delta := 10;
      Repeat
        If delta>unity Then s := s+32768-50000; {round the last digit}
        print_char('0'+(s Div unity));
        s := 10*(s Mod unity);
        delta := delta*10;
      Until s<=delta;
    End;


(***PASCAL module 105***)
    Function mult_and_add(n:integer;x,y,max_answer:scaled): scaled;
    Begin
      If n<0 Then
        Begin
          negate(x);
          negate(n);
        End;
      If n=0 Then mult_and_add := y
      Else If ((x<=(max_answer-y) Div n)And(-x<=(max_answer+y) Div n)) Then
             mult_and_add := n*x+y
      Else
        Begin
          arith_error := true;
          mult_and_add := 0;
        End;
    End;


(***PASCAL module 106***)
    Function x_over_n(x:scaled;n:integer): scaled;

    Var negative: boolean; {should |remainder| be negated?}
    Begin
      negative := false;
      If n=0 Then
        Begin
          arith_error := true;
          x_over_n := 0;
          remainder := x;
        End
      Else
        Begin
          If n<0 Then
            Begin
              negate(x);
              negate(n);
              negative := true;
            End;
          If x>=0 Then
            Begin
              x_over_n := x Div n;
              remainder := x Mod n;
            End
          Else
            Begin
              x_over_n := -((-x) Div n);
              remainder := -((-x) Mod n);
            End;
        End;
      If negative Then negate(remainder);
    End;


(***PASCAL module 107***)
    Function xn_over_d(x:scaled; n,d:integer): scaled;

    Var positive: boolean; {was |x>=0|?}
      t,u,v: nonnegative_integer; {intermediate quantities}
    Begin
      If x>=0 Then positive := true
      Else
        Begin
          negate(x);
          positive := false;
        End;
      t := (x Mod 32768)*n;
      u := (x Div 32768)*n+(t Div 32768);
      v := (u Mod d)*32768 + (t Mod 32768);
      If u Div d>=32768 Then arith_error := true
      Else u := 32768*(u Div d) + (v Div d);
      If positive Then
        Begin
          xn_over_d := u;
          remainder := v Mod d;
        End
      Else
        Begin
          xn_over_d := -u;
          remainder := -(v Mod d);
        End;
    End;


(***PASCAL module 108***)
    Function badness(t,s:scaled): halfword; {compute badness, given |t>=0|}

    Var r: integer; {approximation to $\alpha t/s$, where $\alpha^3\approx 
  100\cdot2^[18]$}
    Begin
      If t=0 Then badness := 0
      Else If s<=0 Then badness := inf_bad
      Else
        Begin
          If t<=7230584 Then  r := (t*297) Div s {$297^3=99.94\times2^[18]$}
          Else If s>=1663497 Then r := t Div (s Div 297)
          Else r := t;
          If r>1290 Then badness := inf_bad {$1290^3<2^[31]<1291^3$}
          Else badness := (r*r*r+131072) Div 262144;
        End; {that was $r^3/2^[18]$, rounded to the nearest integer}
    End;


(***PASCAL module 114***)
    debug Procedure print_word(w:memory_word);
  {prints |w| in all ways}
    Begin
      print_int(w.int);
      print_char(' ');

      print_scaled(w.sc);
      print_char(' ');

      print_scaled(round(unity*float(w.gr)));
      print_ln;

(*real multiplication*)
      print_int(w.hh.lh);
      print_char('=');
      print_int(w.hh.b0);
      print_char(':');
      print_int(w.hh.b1);
      print_char(';');
      print_int(w.hh.rh);
      print_char(' ');

      print_int(w.qqqq.b0);
      print_char(':');
      print_int(w.qqqq.b1);
      print_char(':');
      print_int(w.qqqq.b2);
      print_char(':');
      print_int(w.qqqq.b3);
    End;
    gubed


(***PASCAL module 119***)

(*INSERT 'Declare the procedure called |show_token_list|'*)(*PASCAL module 292*)
    Procedure show_token_list(p,q:integer;l:integer);

    Label exit;

    Var m,c: integer; {pieces of a token}
      match_chr: ASCII_code; {character used in a `|match|'}
      n: ASCII_code; {the highest parameter number, as an ASCII digit}
    Begin
      match_chr := '#';
      n := '0';
      tally := 0;
      While (p<>null) And (tally<l) Do
        Begin
          If p=q Then
(*INSERT 'Do magic computation'*)(*FIN INSERT 'Do magic computation'*);

(*INSERT 'Display token |p|, and |return| if there are problems'*)(*PASCAL module 293*)
          If (p<hi_mem_min) Or (p>mem_end) Then
            Begin
              print_esc('CLOBBERED.');
              return;
(*CLOBBERED*)
            End;
          If info(p)>=cs_token_flag Then print_cs(info(p)-cs_token_flag)
          Else
            Begin
              m := info(p) Div 256;
              c := info(p) Mod 256;
              If info(p)<0 Then print_esc('BAD.')
(*BAD*)
              Else
(*INSERT 'Display the token $(|m|,|c|)$'*)(*PASCAL module 294*)
                Case m Of 
                  left_brace,right_brace,math_shift,tab_mark,sup_mark,sub_mark,spacer,
                  letter,other_char: print(c);
                  mac_param:
                             Begin
                               print(c);
                               print(c);
                             End;
                  out_param:
                             Begin
                               print(match_chr);
                               If c<=9 Then print_char(c+'0')
                               Else
                                 Begin
                                   print_char('!');
                                   return;
                                 End;
                             End;
                  match:
                         Begin
                           match_chr := c;
                           print(c);
                           incr(n);
                           print_char(n);
                           If n>'9' Then return;
                         End;
                  end_match: print('->');
(*->*)
                  othercases print_esc('BAD.')
(*BAD*)
                  endcases

(*FIN INSERT 'Display the token $(|m|,|c|)$'*);
                End

(*FIN INSERT 'Display token |p|, and |return| if there are problems'*);
              p := link(p);
            End;
          If p<>null Then print_esc('ETC.');
(*ETC*)
          exit:
        End;

(*FIN INSERT 'Declare the procedure called |show_token_list|'*)


(*INSERT 'Declare the procedure called |runaway|'*)(*PASCAL module 306*)
      Procedure runaway;

      Var p: pointer; {head of runaway list}
      Begin
        If scanner_status>skipping Then
          Begin
            print_nl('Runaway ');
(*Runaway...*)
            Case scanner_status Of 
              defining:
                        Begin
                          print('definition');
                          p := def_ref;
                        End;
              matching:
                        Begin
                          print('argument');
                          p := temp_head;
                        End;
              aligning:
                        Begin
                          print('preamble');
                          p := hold_head;
                        End;
              absorbing:
                         Begin
                           print('text');
                           p := def_ref;
                         End;
            End; {there are no other cases}
            print_char('?');
            print_ln;
            show_token_list(link(p),null,error_line-10);
          End;
      End;

(*FIN INSERT 'Declare the procedure called |runaway|'*)


(***PASCAL module 120***)
      Function get_avail : pointer; {single-word node allocation}

      Var p: pointer; {the new node being got}
      Begin
        p := avail; {get top location in the |avail| stack}
        If p<>null Then avail := link(avail) {and pop it off}
        Else If mem_end<mem_max Then {or go into virgin territory}
               Begin
                 incr(mem_end);
                 p := mem_end;
               End
        Else
          Begin
            decr(hi_mem_min);
            p := hi_mem_min;
            If hi_mem_min<=lo_mem_max Then
              Begin
                runaway; {if memory is exhausted, display possible runaway text}
                overflow('main memory size',mem_max+1-mem_min);
      {quit; all one-word nodes are busy}
(*TeX capacity exceeded main memory size][\quad main memory size*)
              End;
          End;
        link(p) := null; {provide an oft-desired initialization of the new node}
        stat incr(dyn_used);
        tats;{maintain statistics}
        get_avail := p;
      End;


(***PASCAL module 123***)
      Procedure flush_list(p:pointer); {makes list of single-word nodes 
  available}

      Var q,r: pointer; {list traversers}
      Begin
        If p<>null Then
          Begin
            r := p;
            Repeat
              q := r;
              r := link(r);
              stat decr(dyn_used);
              tats

            Until r=null; {now |q| is the last node on the list}
            link(q) := avail;
            avail := p;
          End;
      End;


(***PASCAL module 125***)
      Function get_node(s:integer): pointer; {variable-size node allocation}

      Label found,exit,restart;

      Var p: pointer; {the node currently under inspection}
        q: pointer; {the node physically after node |p|}
        r: integer; {the newly allocated node, or a candidate for this honor}
        t: integer; {temporary register}
      Begin
        restart: p := rover; {start at some free node in the ring}
        Repeat
(*INSERT 'Try to allocate within node |p| and its physical successors, and |goto found| if allocation was possible'*)(*PASCAL module 127*)
          q := p+node_size(p); {find the physical successor}
(*inner loop*)
          While is_empty(q) Do {merge node |p| with node |q|}
            Begin
              t := rlink(q);
              If q=rover Then rover := t;
              llink(t) := llink(q);
              rlink(llink(q)) := t;

              q := q+node_size(q);
            End;
          r := q-s;
          If r>p+1 Then
(*INSERT 'Allocate from the top of node |p| and |goto found|'*)(*PASCAL module 128*)
            Begin
              node_size(p) := r-p; {store the remaining size}
(*inner loop*)
              rover := p; {start searching here next time}
              goto found;
            End

(*FIN INSERT 'Allocate from the top of node |p| and |goto found|'*);
          If r=p Then If rlink(p)<>p Then

(*INSERT 'Allocate entire node |p| and |goto found|'*)(*PASCAL module 129*)
                        Begin
                          rover := rlink(p);
                          t := llink(p);
                          llink(rover) := t;
                          rlink(t) := rover;
                          goto found;
                        End

(*FIN INSERT 'Allocate entire node |p| and |goto found|'*);
          node_size(p) := q-p {reset the size in case it grew}

(*FIN INSERT 'Try to allocate within node |p| and its physical successors, and |goto found| if allocation was possible'*);
(*inner loop*)
          p := rlink(p); {move to the next node in the ring}
        Until p=rover; {repeat until the whole list has been traversed}
        If s=1073741824 Then
          Begin
            get_node := max_halfword;
            return;
          End;
        If lo_mem_max+2<hi_mem_min Then If lo_mem_max+2<=mem_bot+max_halfword Then

(*INSERT 'Grow more variable-size memory and |goto restart|'*)(*PASCAL module 126*)
                                          Begin
                                            If hi_mem_min-lo_mem_max>=1998 Then t := lo_mem_max+1000
                                            Else t := lo_mem_max+1+(hi_mem_min-lo_mem_max) Div 2;
  {|lo_mem_max+2<=t<hi_mem_min|}
                                            p := llink(rover);
                                            q := lo_mem_max;
                                            rlink(p) := q;
                                            llink(rover) := q;

                                            If t>mem_bot+max_halfword Then t := mem_bot+max_halfword;
                                            rlink(q) := rover;
                                            llink(q) := p;
                                            link(q) := empty_flag;
                                            node_size(q) := t-lo_mem_max;

                                            lo_mem_max := t;
                                            link(lo_mem_max) := null;
                                            info(lo_mem_max) := null;
                                            rover := q;
                                            goto restart;
                                          End

(*FIN INSERT 'Grow more variable-size memory and |goto restart|'*);
        overflow('main memory size',mem_max+1-mem_min);
  {sorry, nothing satisfactory is left}
(*TeX capacity exceeded main memory size][\quad main memory size*)
        found: link(r) := null; {this node is now nonempty}
        stat var_used := var_used+s; {maintain usage statistics}
        tats;

        get_node := r;
        exit:
      End;


(***PASCAL module 130***)
      Procedure free_node(p:pointer; s:halfword); {variable-size node 
  liberation}

      Var q: pointer; {|llink(rover)|}
      Begin
        node_size(p) := s;
        link(p) := empty_flag;
        q := llink(rover);
        llink(p) := q;
        rlink(p) := rover; {set both links}
        llink(rover) := p;
        rlink(q) := p; {insert |p| into the ring}
        stat var_used := var_used-s;
        tats;{maintain statistics}
      End;


(***PASCAL module 131***)
      init Procedure sort_avail; {sorts the available variable-size nodes 
  by location}

      Var p,q,r: pointer; {indices into |mem|}
        old_rover: pointer; {initial |rover| setting}
      Begin
        p := get_node(1073741824); {merge adjacent free areas}
        p := rlink(rover);
        rlink(rover) := max_halfword;
        old_rover := rover;
        While p<>old_rover Do
(*INSERT 'Sort \(p)|p| into the list starting at |rover| and advance |p| to |rlink(p)|'*)(*PASCAL module 132*)
          If p<rover Then
            Begin
              q := p;
              p := rlink(q);
              rlink(q) := rover;
              rover := q;
            End
          Else
            Begin
              q := rover;
              While rlink(q)<p Do
                q := rlink(q);
              r := rlink(p);
              rlink(p) := rlink(q);
              rlink(q) := p;
              p := r;
            End

(*FIN INSERT 'Sort \(p)|p| into the list starting at |rover| and advance |p| to |rlink(p)|'*);
        p := rover;
        While rlink(p)<>max_halfword Do
          Begin
            llink(rlink(p)) := p;
            p := rlink(p);
          End;
        rlink(p) := rover;
        llink(rover) := p;
      End;
      tini


(***PASCAL module 136***)
      Function new_null_box: pointer; {creates a new box node}

      Var p: pointer; {the new node}
      Begin
        p := get_node(box_node_size);

        Type (p) := hlist_node;
          subtype(p) := min_quarterword;
          width(p) := 0;
          depth(p) := 0;
          height(p) := 0;
          shift_amount(p) := 0;
          list_ptr(p) := null;
          glue_sign(p) := normal;
          glue_order(p) := normal;
          set_glue_ratio_zero(glue_set(p));
          new_null_box := p;
        End;


(***PASCAL module 139***)
        Function new_rule: pointer;

        Var p: pointer; {the new node}
        Begin
          p := get_node(rule_node_size);

          Type (p) := rule_node;
            subtype(p) := 0; {the |subtype| is not used}
            width(p) := null_flag;
            depth(p) := null_flag;
            height(p) := null_flag;
            new_rule := p;
          End;


(***PASCAL module 144***)
          Function new_ligature(f,c:quarterword; q:pointer): pointer;

          Var p: pointer; {the new node}
          Begin
            p := get_node(small_node_size);

            Type (p) := ligature_node;
              font(lig_char(p)) := f;
              character(lig_char(p)) := c;
              lig_ptr(p) := q;
              subtype(p) := 0;
              new_ligature := p;
            End;



            Function new_lig_item(c:quarterword): pointer;

            Var p: pointer; {the new node}
            Begin
              p := get_node(small_node_size);
              character(p) := c;
              lig_ptr(p) := null;
              new_lig_item := p;
            End;


(***PASCAL module 145***)
            Function new_disc: pointer; {creates an empty |disc_node|}

            Var p: pointer; {the new node}
            Begin
              p := get_node(small_node_size);

              Type (p) := disc_node;
                replace_count(p) := 0;
                pre_break(p) := null;
                post_break(p) := null;
                new_disc := p;
              End;


(***PASCAL module 147***)
              Function new_math(w:scaled;s:small_number): pointer;

              Var p: pointer; {the new node}
              Begin
                p := get_node(small_node_size);

                Type (p) := math_node;
                  subtype(p) := s;
                  width(p) := w;
                  new_math := p;
                End;


(***PASCAL module 151***)
                Function new_spec(p:pointer): pointer; {duplicates a glue specification}

                Var q: pointer; {the new spec}
                Begin
                  q := get_node(glue_spec_size);

                  mem[q] := mem[p];
                  glue_ref_count(q) := null;

                  width(q) := width(p);
                  stretch(q) := stretch(p);
                  shrink(q) := shrink(p);
                  new_spec := q;
                End;


(***PASCAL module 152***)
                Function new_param_glue(n:small_number): pointer;

                Var p: pointer; {the new node}
                  q: pointer; {the glue specification}
                Begin
                  p := get_node(small_node_size);

                  Type (p) := glue_node;
                    subtype(p) := n+1;
                    leader_ptr(p) := null;

                    q := 
(*INSERT 'Current |mem| equivalent of glue parameter number |n|'*)(*FIN INSERT 'Current |mem| equivalent of glue parameter number |n|'*)(*@>;*)(*@>;*)
                         glue_ptr(p):=q;
                    incr(glue_ref_count(q));
                    new_param_glue := p;
                  End;


(***PASCAL module 153***)
                  Function new_glue(q:pointer): pointer;

                  Var p: pointer; {the new node}
                  Begin
                    p := get_node(small_node_size);

                    Type (p) := glue_node;
                      subtype(p) := normal;
                      leader_ptr(p) := null;
                      glue_ptr(p) := q;
                      incr(glue_ref_count(q));
                      new_glue := p;
                    End;


(***PASCAL module 154***)
                    Function new_skip_param(n:small_number): pointer;

                    Var p: pointer; {the new node}
                    Begin
                      temp_ptr := new_spec(
(*INSERT 'Current |mem| equivalent of glue parameter number |n|'*)(*FIN INSERT 'Current |mem| equivalent of glue parameter number |n|'*));
                      p := new_glue(temp_ptr);
                      glue_ref_count(temp_ptr) := null;
                      subtype(p) := n+1;
                      new_skip_param := p;
                    End;


(***PASCAL module 156***)
                    Function new_kern(w:scaled): pointer;

                    Var p: pointer; {the new node}
                    Begin
                      p := get_node(small_node_size);

                      Type (p) := kern_node;
                        subtype(p) := normal;
                        width(p) := w;
                        new_kern := p;
                      End;


(***PASCAL module 158***)
                      Function new_penalty(m:integer): pointer;

                      Var p: pointer; {the new node}
                      Begin
                        p := get_node(small_node_size);

                        Type (p) := penalty_node;
                          subtype(p) := 0; {the |subtype| is not used}
                          penalty(p) := m;
                          new_penalty := p;
                        End;


(***PASCAL module 167***)
                        debug Procedure check_mem(print_locs : boolean);

                        Label done1,done2; {loop exits}

                        Var p,q: pointer; {current locations of interest in |mem|}
                          clobbered: boolean; {is something amiss?}
                        Begin
                          For p:=mem_min To lo_mem_max Do
                            free[p] := false; {you can probably 
  do this faster}
                          For p:=hi_mem_min To mem_end Do
                            free[p] := false; {ditto}

(*INSERT 'Check single-word |avail| list'*)(*PASCAL module 168*)
                          p := avail;
                          q := null;
                          clobbered := false;
                          While p<>null Do
                            Begin
                              If (p>mem_end)Or(p<hi_mem_min) Then clobbered := true
                              Else If free[p] Then clobbered := true;
                              If clobbered Then
                                Begin
                                  print_nl('AVAIL list clobbered at ');
(*AVAIL list clobbered...*)
                                  print_int(q);
                                  goto done1;
                                End;
                              free[p] := true;
                              q := p;
                              p := link(q);
                            End;
                          done1:

(*FIN INSERT 'Check single-word |avail| list'*);

(*INSERT 'Check variable-size |avail| list'*)(*PASCAL module 169*)
                          p := rover;
                          q := null;
                          clobbered := false;
                          Repeat
                            If (p>=lo_mem_max)Or(p<mem_min) Then clobbered := true
                            Else If (rlink(p)>=lo_mem_max)Or(rlink(p)<mem_min) Then clobbered := true
                            Else If  Not(is_empty(p))Or(node_size(p)<2)Or
                                    (p+node_size(p)>lo_mem_max)Or (llink(rlink(p))<>p) Then clobbered := true;
                            If clobbered Then
                              Begin
                                print_nl('Double-AVAIL list clobbered at ');
                                print_int(q);
                                goto done2;
                              End;
                            For q:=p To p+node_size(p)-1 Do {mark all locations free}
                              Begin
                                If free[q] Then
                                  Begin
                                    print_nl('Doubly free location at ');
(*Doubly free location...*)
                                    print_int(q);
                                    goto done2;
                                  End;
                                free[q] := true;
                              End;
                            q := p;
                            p := rlink(p);
                          Until p=rover;
                          done2:

(*FIN INSERT 'Check variable-size |avail| list'*);

(*INSERT 'Check flags of unavailable nodes'*)(*PASCAL module 170*)
                          p := mem_min;
                          While p<=lo_mem_max Do {node |p| should not be empty}
                            Begin
                              If is_empty(p) Then
                                Begin
                                  print_nl('Bad flag at ');
                                  print_int(p);
(*Bad flag...*)
                                End;
                              While (p<=lo_mem_max) And Not free[p] Do
                                incr(p);
                              While (p<=lo_mem_max) And free[p] Do
                                incr(p);
                            End

(*FIN INSERT 'Check flags of unavailable nodes'*);
                          If print_locs Then
(*INSERT 'Print newly busy locations'*)(*PASCAL module 171*)
                            Begin
                              print_nl('New busy locs:');
                              For p:=mem_min To lo_mem_max Do
                                If Not free[p] And ((p>was_lo_max) Or was_free[p]) Then
                                  Begin
                                    print_char(' ');
                                    print_int(p);
                                  End;
                              For p:=hi_mem_min To mem_end Do
                                If Not free[p] And
                                   ((p<was_hi_min) Or (p>was_mem_end) Or was_free[p]) Then
                                  Begin
                                    print_char(' ');
                                    print_int(p);
                                  End;
                            End

(*FIN INSERT 'Print newly busy locations'*);
                          For p:=mem_min To lo_mem_max Do
                            was_free[p] := free[p];
                          For p:=hi_mem_min To mem_end Do
                            was_free[p] := free[p];
  {|was_free:=free| might be faster}
                          was_mem_end := mem_end;
                          was_lo_max := lo_mem_max;
                          was_hi_min := hi_mem_min;
                        End;
                        gubed


(***PASCAL module 172***)
                        debug Procedure search_mem(p:pointer); {look for pointers to |p|}

                        Var q: integer; {current position being searched}
                        Begin
                          For q:=mem_min To lo_mem_max Do
                            Begin
                              If link(q)=p Then
                                Begin
                                  print_nl('LINK(');
                                  print_int(q);
                                  print_char(')');
                                End;
                              If info(q)=p Then
                                Begin
                                  print_nl('INFO(');
                                  print_int(q);
                                  print_char(')');
                                End;
                            End;
                          For q:=hi_mem_min To mem_end Do
                            Begin
                              If link(q)=p Then
                                Begin
                                  print_nl('LINK(');
                                  print_int(q);
                                  print_char(')');
                                End;
                              If info(q)=p Then
                                Begin
                                  print_nl('INFO(');
                                  print_int(q);
                                  print_char(')');
                                End;
                            End;

(*INSERT 'Search |eqtb| for equivalents equal to |p|'*)(*PASCAL module 255*)
                          For q:=active_base To box_base+255 Do
                            Begin
                              If equiv(q)=p Then
                                Begin
                                  print_nl('EQUIV(');
                                  print_int(q);
                                  print_char(')');
                                End;
                            End

(*FIN INSERT 'Search |eqtb| for equivalents equal to |p|'*);

(*INSERT 'Search |save_stack| for equivalents that point to |p|'*)(*PASCAL module 285*)
                          If save_ptr>0 Then For q:=0 To save_ptr-1 Do
                                               Begin
                                                 If equiv_field(save_stack[q])=p Then
                                                   Begin
                                                     print_nl('SAVE(');
                                                     print_int(q);
                                                     print_char(')');
                                                   End;
                                               End

(*FIN INSERT 'Search |save_stack| for equivalents that point to |p|'*);

(*INSERT 'Search |hyph_list| for pointers to |p|'*)(*PASCAL module 933*)
                          For q:=0 To hyph_size Do
                            Begin
                              If hyph_list[q]=p Then
                                Begin
                                  print_nl('HYPH(');
                                  print_int(q);
                                  print_char(')');
                                End;
                            End

(*FIN INSERT 'Search |hyph_list| for pointers to |p|'*);
                        End;
                        gubed


(***PASCAL module 174***)
                        Procedure short_display(p:integer); {prints highlights of list |p|}

                        Var n: integer; {for replacement counts}
                        Begin
                          While p>mem_min Do
                            Begin
                              If is_char_node(p) Then
                                Begin
                                  If p<=mem_end Then
                                    Begin
                                      If font(p)<>font_in_short_display Then
                                        Begin
                                          If (font(p)<font_base)Or(font(p)>font_max) Then
                                            print_char('*')
(**\relax*)
                                          Else
(*INSERT 'Print the font identifier for |font(p)|'*)(*PASCAL module 267*)
                                            print_esc(font_id_text(font(p)))

(*FIN INSERT 'Print the font identifier for |font(p)|'*);
                                          print_char(' ');
                                          font_in_short_display := font(p);
                                        End;
                                      print_ASCII(qo(character(p)));
                                    End;
                                End
                              Else
(*INSERT 'Print a short indication of the contents of node |p|'*)(*PASCAL module 175*)
                                Case Type(p) Of 
                                  hlist_node,vlist_node,ins_node,whatsit_node,mark_node,adjust_node,
                                  unset_node: print('[]');
                                  rule_node: print_char('|');
                                  glue_node: If glue_ptr(p)<>zero_glue Then print_char(' ');
                                  math_node: print_char('$');
                                  ligature_node: short_display(lig_ptr(p));
                                  disc_node:
                                             Begin
                                               short_display(pre_break(p));
                                               short_display(post_break(p));

                                               n := replace_count(p);
                                               While n>0 Do
                                                 Begin
                                                   If link(p)<>null Then p := link(p);
                                                   decr(n);
                                                 End;
                                             End;
                                  othercases do_nothing
                                  endcases

(*FIN INSERT 'Print a short indication of the contents of node |p|'*);
                                  p := link(p);
                                End;
                            End;


(***PASCAL module 176***)
                          Procedure print_font_and_char(p:integer); {prints |char_node| data}
                          Begin
                            If p>mem_end Then print_esc('CLOBBERED.')
                            Else
                              Begin
                                If (font(p)<font_base)Or(font(p)>font_max) Then print_char('*')
(**\relax*)
                                Else
(*INSERT 'Print the font identifier for |font(p)|'*)(*PASCAL module 267*)
                                  print_esc(font_id_text(font(p)))

(*FIN INSERT 'Print the font identifier for |font(p)|'*);
                                print_char(' ');
                                print_ASCII(qo(character(p)));
                              End;
                          End;



                          Procedure print_mark(p:integer); {prints token list data in braces}
                          Begin
                            print_char('{');
                            If (p<hi_mem_min)Or(p>mem_end) Then print_esc('CLOBBERED.')
                            Else show_token_list(link(p),null,max_print_line-10);
                            print_char('}');
                          End;



                          Procedure print_rule_dimen(d:scaled); {prints dimension in rule node}
                          Begin
                            If is_running(d) Then print_char('*')
                            Else print_scaled(d);
(**\relax*)
                          End;


(***PASCAL module 177***)
                          Procedure print_glue(d:scaled;order:integer;s:str_number);
  {prints a glue component}
                          Begin
                            print_scaled(d);
                            If (order<normal)Or(order>filll) Then print('foul')
                            Else If order>normal Then
                                   Begin
                                     print('fil');
                                     While order>fil Do
                                       Begin
                                         print_char('l');
                                         decr(order);
                                       End;
                                   End
                            Else If s<>0 Then print(s);
                          End;


(***PASCAL module 178***)
                          Procedure print_spec(p:integer;s:str_number);
  {prints a glue specification}
                          Begin
                            If (p<mem_min)Or(p>=lo_mem_max) Then print_char('*')
(**\relax*)
                            Else
                              Begin
                                print_scaled(width(p));
                                If s<>0 Then print(s);
                                If stretch(p)<>0 Then
                                  Begin
                                    print(' plus ');
                                    print_glue(stretch(p),stretch_order(p),s);
                                  End;
                                If shrink(p)<>0 Then
                                  Begin
                                    print(' minus ');
                                    print_glue(shrink(p),shrink_order(p),s);
                                  End;
                              End;
                          End;


(***PASCAL module 179***)

(*INSERT 'Declare procedures needed for displaying the elements of mlists'*)(*PASCAL module 691*)
                          Procedure print_fam_and_char(p:pointer); {prints family and character}
                          Begin
                            print_esc('fam');
                            print_int(fam(p));
                            print_char(' ');
                            print_ASCII(qo(character(p)));
                          End;



                          Procedure print_delimiter(p:pointer); {prints a delimiter as 24-bit hex value}

                          Var a: integer; {accumulator}
                          Begin
                            a := small_fam(p)*256+qo(small_char(p));
                            a := a*512+large_fam(p)*256+qo(large_char(p));
                            If a<0 Then print_int(a) {this should never happen}
                            Else print_hex(a);
                          End;

(*PASCAL module 692*)
                          Procedure show_info;
                          forward;
(*\2*) {|show_node_list(info(temp_ptr))|}
                          Procedure print_subsidiary_data(p:pointer;c:ASCII_code);
  {display a noad field}
                          Begin
                            If cur_length>=depth_threshold Then
                              Begin
                                If math_type(p)<>empty Then print(' []');
                              End
                            Else
                              Begin
                                append_char(c); {include |c| in the recursion history}
                                temp_ptr := p; {prepare for |show_info| if recursion is needed}
                                Case math_type(p) Of 
                                  math_char:
                                             Begin
                                               print_ln;
                                               print_current_string;
                                               print_fam_and_char(p);
                                             End;
                                  sub_box: show_info; {recursive call}
                                  sub_mlist: If info(p)=null Then
                                               Begin
                                                 print_ln;
                                                 print_current_string;
                                                 print('{}');
                                               End
                                             Else show_info; {recursive call}
                                  othercases do_nothing {|empty|}
                                  endcases;

                                  flush_char; {remove |c| from the recursion history}
                                End;
                              End;

(*PASCAL module 694*)
                            Procedure print_style(c:integer);
                            Begin
                              Case c Div 2 Of 
                                0: print_esc('displaystyle'); {|display_style=0|}
                                1: print_esc('textstyle'); {|text_style=2|}
                                2: print_esc('scriptstyle'); {|script_style=4|}
                                3: print_esc('scriptscriptstyle'); {|script_script_style=6|}
                                othercases print('Unknown style!')
                                endcases;
                              End;

(*FIN INSERT 'Declare procedures needed for displaying the elements of mlists'*);

(*INSERT 'Declare the procedure called |print_skip_param|'*)(*PASCAL module 225*)
                              Procedure print_skip_param(n:integer);
                              Begin
                                Case n Of 
                                  line_skip_code: print_esc('lineskip');
                                  baseline_skip_code: print_esc('baselineskip');
                                  par_skip_code: print_esc('parskip');
                                  above_display_skip_code: print_esc('abovedisplayskip');
                                  below_display_skip_code: print_esc('belowdisplayskip');
                                  above_display_short_skip_code: print_esc('abovedisplayshortskip');
                                  below_display_short_skip_code: print_esc('belowdisplayshortskip');
                                  left_skip_code: print_esc('leftskip');
                                  right_skip_code: print_esc('rightskip');
                                  top_skip_code: print_esc('topskip');
                                  split_top_skip_code: print_esc('splittopskip');
                                  tab_skip_code: print_esc('tabskip');
                                  space_skip_code: print_esc('spaceskip');
                                  xspace_skip_code: print_esc('xspaceskip');
                                  par_fill_skip_code: print_esc('parfillskip');
                                  thin_mu_skip_code: print_esc('thinmuskip');
                                  med_mu_skip_code: print_esc('medmuskip');
                                  thick_mu_skip_code: print_esc('thickmuskip');
                                  othercases print('[unknown glue parameter!]')
                                  endcases;
                                End;

(*FIN INSERT 'Declare the procedure called |print_skip_param|'*)


(***PASCAL module 182***)
                                Procedure show_node_list(p:integer); {prints a node list symbolically}

                                Label exit;

                                Var n: integer; {the number of items already printed at this level}
                                  g: real; {a glue ratio, as a floating point number}
                                Begin
                                  If cur_length>depth_threshold Then
                                    Begin
                                      If p>null Then print(' []');
    {indicate that there's been some truncation}
                                      return;
                                    End;
                                  n := 0;
                                  While p>mem_min Do
                                    Begin
                                      print_ln;
                                      print_current_string; {display the nesting history}
                                      If p>mem_end Then {pointer out of range}
                                        Begin
                                          print('Bad link, display aborted.');
                                          return;
(*Bad link...*)
                                        End;
                                      incr(n);
                                      If n>breadth_max Then {time to stop}
                                        Begin
                                          print('etc.');
                                          return;
(*etc*)
                                        End;

(*INSERT 'Display node |p|'*)(*PASCAL module 183*)
                                      If is_char_node(p) Then print_font_and_char(p)
                                      Else  Case Type(p) Of 
                                              hlist_node,vlist_node,unset_node:
(*INSERT 'Display box |p|'*)(*PASCAL module 184*)
                                                                                Begin
                                                                                  If Type(p)=hlist_node Then print_esc('h')
                                                                                  Else If Type(p)=vlist_node Then print_esc('v')
                                                                                  Else print_esc('unset');
                                                                                  print('box(');
                                                                                  print_scaled(height(p));
                                                                                  print_char('+');
                                                                                  print_scaled(depth(p));
                                                                                  print(')x');
                                                                                  print_scaled(width(p));
                                                                                  If Type(p)=unset_node Then

(*INSERT 'Display special fields of the unset node |p|'*)(*PASCAL module 185*)
                                                                                    Begin
                                                                                      If span_count(p)<>min_quarterword Then
                                                                                        Begin
                                                                                          print(' (');
                                                                                          print_int(qo(span_count(p))+1);
                                                                                          print(' columns)');
                                                                                        End;
                                                                                      If glue_stretch(p)<>0 Then
                                                                                        Begin
                                                                                          print(', stretch ');
                                                                                          print_glue(glue_stretch(p),glue_order(p),0);
                                                                                        End;
                                                                                      If glue_shrink(p)<>0 Then
                                                                                        Begin
                                                                                          print(', shrink ');
                                                                                          print_glue(glue_shrink(p),glue_sign(p),0);
                                                                                        End;
                                                                                    End

(*FIN INSERT 'Display special fields of the unset node |p|'*)
                                                                                  Else
                                                                                    Begin
(*INSERT 'Display the value of |glue_set(p)|'*)(*PASCAL module 186*)
                                                                                      g := float(glue_set(p));
                                                                                      If (g<>float_constant(0))And(glue_sign(p)<>normal) Then
                                                                                        Begin
                                                                                          print(', glue set ');
                                                                                          If glue_sign(p)=shrinking Then print('- ');
                                                                                          If abs(mem[p+glue_offset].int)<1048576 Then print('?.?')
                                                                                          Else If abs(g)>float_constant(20000) Then
                                                                                                 Begin
                                                                                                   If g>float_constant(0) Then print_char('>')
                                                                                                   Else print('< -');
                                                                                                   print_glue(20000*unity,glue_order(p),0);
                                                                                                 End
                                                                                          Else print_glue(round(unity*g),glue_order(p),0);
(*real multiplication*)
                                                                                        End

(*FIN INSERT 'Display the value of |glue_set(p)|'*)                                   ;
                                                                                      If shift_amount(p)<>0 Then
                                                                                        Begin
                                                                                          print(', shifted ');
                                                                                          print_scaled(shift_amount(p));
                                                                                        End;
                                                                                    End;
                                                                                  node_list_display(list_ptr(p)); {recursive call}
                                                                                End

(*FIN INSERT 'Display box |p|'*)              ;
                                              rule_node:
(*INSERT 'Display rule |p|'*)(*PASCAL module 187*)
                                                         Begin
                                                           print_esc('rule(');
                                                           print_rule_dimen(height(p));
                                                           print_char('+');
                                                           print_rule_dimen(depth(p));
                                                           print(')x');
                                                           print_rule_dimen(width(p));
                                                         End

(*FIN INSERT 'Display rule |p|'*)             ;
                                              ins_node:
(*INSERT 'Display insertion |p|'*)(*PASCAL module 188*)
                                                        Begin
                                                          print_esc('insert');
                                                          print_int(qo(subtype(p)));
                                                          print(', natural size ');
                                                          print_scaled(height(p));
                                                          print('; split(');
                                                          print_spec(split_top_ptr(p),0);
                                                          print_char(',');
                                                          print_scaled(depth(p));
                                                          print('); float cost ');
                                                          print_int(float_cost(p));
                                                          node_list_display(ins_ptr(p)); {recursive call}
                                                        End

(*FIN INSERT 'Display insertion |p|'*)        ;
                                              whatsit_node:
(*INSERT 'Display the whatsit node |p|'*)(*PASCAL module 1356*)
                                                            Case subtype(p) Of 
                                                              open_node:
                                                                         Begin
                                                                           print_write_whatsit('openout',p);
                                                                           print_char('=');
                                                                           print_file_name(open_name(p),open_area(p),open_ext(p));
                                                                         End;
                                                              write_node:
                                                                          Begin
                                                                            print_write_whatsit('write',p);
                                                                            print_mark(write_tokens(p));
                                                                          End;
                                                              close_node: print_write_whatsit('closeout',p);
                                                              special_node:
                                                                            Begin
                                                                              print_esc('special');
                                                                              print_mark(write_tokens(p));
                                                                            End;
                                                              language_node:
                                                                             Begin
                                                                               print_esc('setlanguage');
                                                                               print_int(what_lang(p));
                                                                               print(' (hyphenmin ');
                                                                               print_int(what_lhm(p));
                                                                               print_char(',');
                                                                               print_int(what_rhm(p));
                                                                               print_char(')');
                                                                             End;
                                                              othercases print('whatsit?')
                                                              endcases

(*FIN INSERT 'Display the whatsit node |p|'*)                 ;
                                                              glue_node:
(*INSERT 'Display glue |p|'*)(*PASCAL module 189*)
                                                                         If subtype(p)>=a_leaders Then
(*INSERT 'Display leaders |p|'*)(*PASCAL module 190*)
                                                                           Begin
                                                                             print_esc('');
                                                                             If subtype(p)=c_leaders Then print_char('c')
                                                                             Else If subtype(p)=x_leaders Then print_char('x');
                                                                             print('leaders ');
                                                                             print_spec(glue_ptr(p),0);
                                                                             node_list_display(leader_ptr(p)); {recursive call}
                                                                           End

(*FIN INSERT 'Display leaders |p|'*)
                                                                         Else
                                                                           Begin
                                                                             print_esc('glue');
                                                                             If subtype(p)<>normal Then
                                                                               Begin
                                                                                 print_char('(');
                                                                                 If subtype(p)<cond_math_glue Then
                                                                                   print_skip_param(subtype(p)-1)
                                                                                 Else If subtype(p)=cond_math_glue Then print_esc('nonscript')
                                                                                 Else print_esc('mskip');
                                                                                 print_char(')');
                                                                               End;
                                                                             If subtype(p)<>cond_math_glue Then
                                                                               Begin
                                                                                 print_char(' ');
                                                                                 If subtype(p)<cond_math_glue Then print_spec(glue_ptr(p),0)
                                                                                 Else print_spec(glue_ptr(p),'mu');
                                                                               End;
                                                                           End

(*FIN INSERT 'Display glue |p|'*)                             ;
                                                              kern_node:
(*INSERT 'Display kern |p|'*)(*PASCAL module 191*)
                                                                         If subtype(p)<>mu_glue Then
                                                                           Begin
                                                                             print_esc('kern');
                                                                             If subtype(p)<>normal Then print_char(' ');
                                                                             print_scaled(width(p));
                                                                             If subtype(p)=acc_kern Then print(' (for accent)');
(*for accent*)
                                                                           End
                                                                         Else
                                                                           Begin
                                                                             print_esc('mkern');
                                                                             print_scaled(width(p));
                                                                             print('mu');
                                                                           End

(*FIN INSERT 'Display kern |p|'*)                             ;
                                                              math_node:
(*INSERT 'Display math node |p|'*)(*PASCAL module 192*)
                                                                         Begin
                                                                           print_esc('math');
                                                                           If subtype(p)=before Then print('on')
                                                                           Else print('off');
                                                                           If width(p)<>0 Then
                                                                             Begin
                                                                               print(', surrounded ');
                                                                               print_scaled(width(p));
                                                                             End;
                                                                         End

(*FIN INSERT 'Display math node |p|'*)                        ;
                                                              ligature_node:
(*INSERT 'Display ligature |p|'*)(*PASCAL module 193*)
                                                                             Begin
                                                                               print_font_and_char(lig_char(p));
                                                                               print(' (ligature ');
                                                                               If subtype(p)>1 Then print_char('|');
                                                                               font_in_short_display := font(lig_char(p));
                                                                               short_display(lig_ptr(p));
                                                                               If odd(subtype(p)) Then print_char('|');
                                                                               print_char(')');
                                                                             End

(*FIN INSERT 'Display ligature |p|'*)                         ;
                                                              penalty_node:
(*INSERT 'Display penalty |p|'*)(*PASCAL module 194*)
                                                                            Begin
                                                                              print_esc('penalty ');
                                                                              print_int(penalty(p));
                                                                            End

(*FIN INSERT 'Display penalty |p|'*)                          ;
                                                              disc_node:
(*INSERT 'Display discretionary |p|'*)(*PASCAL module 195*)
                                                                         Begin
                                                                           print_esc('discretionary');
                                                                           If replace_count(p)>0 Then
                                                                             Begin
                                                                               print(' replacing ');
                                                                               print_int(replace_count(p));
                                                                             End;
                                                                           node_list_display(pre_break(p)); {recursive call}
                                                                           append_char('|');
                                                                           show_node_list(post_break(p));
                                                                           flush_char; {recursive call}
                                                                         End

(*FIN INSERT 'Display discretionary |p|'*)                    ;
                                                              mark_node:
(*INSERT 'Display mark |p|'*)(*PASCAL module 196*)
                                                                         Begin
                                                                           print_esc('mark');
                                                                           print_mark(mark_ptr(p));
                                                                         End

(*FIN INSERT 'Display mark |p|'*)                             ;
                                                              adjust_node:
(*INSERT 'Display adjustment |p|'*)(*PASCAL module 197*)
                                                                           Begin
                                                                             print_esc('vadjust');
                                                                             node_list_display(adjust_ptr(p)); {recursive call}
                                                                           End

(*FIN INSERT 'Display adjustment |p|'*)                       ;
  (*\4*)
(*INSERT 'Cases of |show_node_list| that arise in mlists only'*)(*PASCAL module 690*)
                                                              style_node: print_style(subtype(p));
                                                              choice_node:
(*INSERT 'Display choice node |p|'*)(*PASCAL module 695*)
                                                                           Begin
                                                                             print_esc('mathchoice');
                                                                             append_char('D');
                                                                             show_node_list(display_mlist(p));
                                                                             flush_char;
                                                                             append_char('T');
                                                                             show_node_list(text_mlist(p));
                                                                             flush_char;
                                                                             append_char('S');
                                                                             show_node_list(script_mlist(p));
                                                                             flush_char;
                                                                             append_char('s');
                                                                             show_node_list(script_script_mlist(p));
                                                                             flush_char;
                                                                           End

(*FIN INSERT 'Display choice node |p|'*)                      ;
                                                              ord_noad,op_noad,bin_noad,rel_noad,open_noad,close_noad,punct_noad,inner_noad,
                                                              radical_noad,over_noad,under_noad,vcenter_noad,accent_noad,
                                                              left_noad,right_noad:
(*INSERT 'Display normal noad |p|'*)(*PASCAL module 696*)
                                                                                    Begin
                                                                                      Case Type(p) Of 
                                                                                        ord_noad: print_esc('mathord');
                                                                                        op_noad: print_esc('mathop');
                                                                                        bin_noad: print_esc('mathbin');
                                                                                        rel_noad: print_esc('mathrel');
                                                                                        open_noad: print_esc('mathopen');
                                                                                        close_noad: print_esc('mathclose');
                                                                                        punct_noad: print_esc('mathpunct');
                                                                                        inner_noad: print_esc('mathinner');
                                                                                        over_noad: print_esc('overline');
                                                                                        under_noad: print_esc('underline');
                                                                                        vcenter_noad: print_esc('vcenter');
                                                                                        radical_noad:
                                                                                                      Begin
                                                                                                        print_esc('radical');
                                                                                                        print_delimiter(left_delimiter(p));
                                                                                                      End;
                                                                                        accent_noad:
                                                                                                     Begin
                                                                                                       print_esc('accent');
                                                                                                       print_fam_and_char(accent_chr(p));
                                                                                                     End;
                                                                                        left_noad:
                                                                                                   Begin
                                                                                                     print_esc('left');
                                                                                                     print_delimiter(delimiter(p));
                                                                                                   End;
                                                                                        right_noad:
                                                                                                    Begin
                                                                                                      print_esc('right');
                                                                                                      print_delimiter(delimiter(p));
                                                                                                    End;
                                                                                      End;
                                                                                      If subtype(p)<>normal Then
                                                                                        If subtype(p)=limits Then print_esc('limits')
                                                                                      Else print_esc('nolimits');
                                                                                      If Type(p)<left_noad Then print_subsidiary_data(nucleus(p),'.');
                                                                                      print_subsidiary_data(supscr(p),'^');
                                                                                      print_subsidiary_data(subscr(p),'_');
                                                                                    End

(*FIN INSERT 'Display normal noad |p|'*)                      ;
                                                              fraction_noad:
(*INSERT 'Display fraction noad |p|'*)(*PASCAL module 697*)
                                                                             Begin
                                                                               print_esc('fraction, thickness ');
                                                                               If thickness(p)=default_code Then print('= default')
                                                                               Else print_scaled(thickness(p));
                                                                               If (small_fam(left_delimiter(p))<>0)Or
                                                                                  (small_char(left_delimiter(p))<>min_quarterword)Or
                                                                                  (large_fam(left_delimiter(p))<>0)Or
                                                                                  (large_char(left_delimiter(p))<>min_quarterword) Then
                                                                                 Begin
                                                                                   print(', left-delimiter ');
                                                                                   print_delimiter(left_delimiter(p));
                                                                                 End;
                                                                               If (small_fam(right_delimiter(p))<>0)Or
                                                                                  (small_char(right_delimiter(p))<>min_quarterword)Or
                                                                                  (large_fam(right_delimiter(p))<>0)Or
                                                                                  (large_char(right_delimiter(p))<>min_quarterword) Then
                                                                                 Begin
                                                                                   print(', right-delimiter ');
                                                                                   print_delimiter(right_delimiter(p));
                                                                                 End;
                                                                               print_subsidiary_data(numerator(p),'\');
                                                                               print_subsidiary_data(denominator(p),'/');
                                                                             End

(*FIN INSERT 'Display fraction noad |p|'*)                    ;

(*FIN INSERT 'Cases of |show_node_list| that arise in mlists only'*);
                                                              othercases print('Unknown node type!')
                                                              endcases

(*FIN INSERT 'Display node |p|'*)                             ;
                                                              p := link(p);
                                                            End;
                                              exit:
                                        End;


(***PASCAL module 198***)
                                      Procedure show_box(p:pointer);
                                      Begin
(*INSERT 'Assign the values |depth_threshold:=show_box_depth| and |breadth_max:=show_box_breadth|'*)(*PASCAL module 236*)
                                        depth_threshold := show_box_depth;
                                        breadth_max := show_box_breadth

(*FIN INSERT 'Assign the values |depth_threshold:=show_box_depth| and |breadth_max:=show_box_breadth|'*);
                                        If breadth_max<=0 Then breadth_max := 5;
                                        If pool_ptr+depth_threshold>=pool_size Then
                                          depth_threshold := pool_size-pool_ptr-1;
  {now there's enough room for prefix string}
                                        show_node_list(p); {the show starts at |p|}
                                        print_ln;
                                      End;


(***PASCAL module 200***)
                                      Procedure delete_token_ref(p:pointer); {|p| points to the reference count 
  of a token list that is losing one reference}
                                      Begin
                                        If token_ref_count(p)=null Then flush_list(p)
                                        Else decr(token_ref_count(p));
                                      End;


(***PASCAL module 201***)
                                      Procedure delete_glue_ref(p:pointer); {|p| points to a glue specification}
                                      fast_delete_glue_ref(p);


(***PASCAL module 202***)
                                      Procedure flush_node_list(p:pointer); {erase list of nodes starting at |p|}

                                      Label done; {go here when node |p| has been freed}

                                      Var q: pointer; {successor to node |p|}
                                      Begin
                                        While p<>null Do
(*inner loop*)
                                          Begin
                                            q := link(p);
                                            If is_char_node(p) Then free_avail(p)
                                            Else
                                              Begin
                                                Case Type(p) Of 
                                                  hlist_node,vlist_node,unset_node:
                                                                                    Begin
                                                                                      flush_node_list(list_ptr(p));
                                                                                      free_node(p,box_node_size);
                                                                                      goto done;
                                                                                    End;
                                                  rule_node:
                                                             Begin
                                                               free_node(p,rule_node_size);
                                                               goto done;
                                                             End;
                                                  ins_node:
                                                            Begin
                                                              flush_node_list(ins_ptr(p));
                                                              delete_glue_ref(split_top_ptr(p));
                                                              free_node(p,ins_node_size);
                                                              goto done;
                                                            End;
                                                  whatsit_node:
(*INSERT 'Wipe out the whatsit node |p| and |goto done|'*)(*PASCAL module 1358*)
                                                                Begin
                                                                  Case subtype(p) Of 
                                                                    open_node: free_node(p,open_node_size);
                                                                    write_node,special_node:
                                                                                             Begin
                                                                                               delete_token_ref(write_tokens(p));
                                                                                               free_node(p,write_node_size);
                                                                                               goto done;
                                                                                             End;
                                                                    close_node,language_node: free_node(p,small_node_size);
                                                                    othercases confusion('ext3')
(*this can''t happen ext3][\quad ext3*)
                                                                    endcases;

                                                                    goto done;
                                                                  End

(*FIN INSERT 'Wipe out the whatsit node |p| and |goto done|'*)    ;
                                                                  glue_node:
                                                                             Begin
                                                                               fast_delete_glue_ref(glue_ptr(p));
                                                                               If leader_ptr(p)<>null Then flush_node_list(leader_ptr(p));
                                                                             End;
                                                                  kern_node,math_node,penalty_node: do_nothing;
                                                                  ligature_node: flush_node_list(lig_ptr(p));
                                                                  mark_node: delete_token_ref(mark_ptr(p));
                                                                  disc_node:
                                                                             Begin
                                                                               flush_node_list(pre_break(p));
                                                                               flush_node_list(post_break(p));
                                                                             End;
                                                                  adjust_node: flush_node_list(adjust_ptr(p));
    (*\4*)
(*INSERT 'Cases of |flush_node_list| that arise in mlists only'*)(*PASCAL module 698*)
                                                                  style_node:
                                                                              Begin
                                                                                free_node(p,style_node_size);
                                                                                goto done;
                                                                              End;
                                                                  choice_node:
                                                                               Begin
                                                                                 flush_node_list(display_mlist(p));
                                                                                 flush_node_list(text_mlist(p));
                                                                                 flush_node_list(script_mlist(p));
                                                                                 flush_node_list(script_script_mlist(p));
                                                                                 free_node(p,style_node_size);
                                                                                 goto done;
                                                                               End;
                                                                  ord_noad,op_noad,bin_noad,rel_noad,open_noad,close_noad,punct_noad,inner_noad,
                                                                  radical_noad,over_noad,under_noad,vcenter_noad,accent_noad:(**);

                                                                  Begin
                                                                    If math_type(nucleus(p))>=sub_box Then
                                                                      flush_node_list(info(nucleus(p)));
                                                                    If math_type(supscr(p))>=sub_box Then
                                                                      flush_node_list(info(supscr(p)));
                                                                    If math_type(subscr(p))>=sub_box Then
                                                                      flush_node_list(info(subscr(p)));
                                                                    If Type(p)=radical_noad Then free_node(p,radical_noad_size)
                                                                    Else If Type(p)=accent_noad Then free_node(p,accent_noad_size)
                                                                    Else free_node(p,noad_size);
                                                                    goto done;
                                                                  End;
                                                                  left_noad,right_noad:
                                                                                        Begin
                                                                                          free_node(p,noad_size);
                                                                                          goto done;
                                                                                        End;
                                                                  fraction_noad:
                                                                                 Begin
                                                                                   flush_node_list(info(numerator(p)));
                                                                                   flush_node_list(info(denominator(p)));
                                                                                   free_node(p,fraction_noad_size);
                                                                                   goto done;
                                                                                 End;

(*FIN INSERT 'Cases of |flush_node_list| that arise in mlists only'*);
                                                                  othercases confusion('flushing')
(*this can''t happen flushing][\quad flushing*)
                                                                  endcases;

                                                                  free_node(p,small_node_size);
                                                                  done:
                                                                End;
                                                  p := q;
                                                End;
                                              End;


(***PASCAL module 204***)
                                            Function copy_node_list(p:pointer): pointer; {makes a duplicate of the 
  node list that starts at |p| and returns a pointer to the new list}

                                            Var h: pointer; {temporary head of copied list}
                                              q: pointer; {previous position in new list}
                                              r: pointer; {current node being fabricated for new list}
                                              words: 0..5; {number of words remaining to be copied}
                                            Begin
                                              h := get_avail;
                                              q := h;
                                              While p<>null Do
                                                Begin
(*INSERT 'Make a copy of node |p| in node |r|'*)(*PASCAL module 205*)
                                                  words := 1; {this setting occurs in more branches than any other}
                                                  If is_char_node(p) Then r := get_avail
                                                  Else
(*INSERT 'Case statement to copy different types and set |words| to the number of initial words not yet copied'*)(*PASCAL module 206*)
                                                    Case Type(p) Of 
                                                      hlist_node,vlist_node,unset_node:
                                                                                        Begin
                                                                                          r := get_node(box_node_size);
                                                                                          mem[r+6] := mem[p+6];
                                                                                          mem[r+5] := mem[p+5]; {copy the last two words}
                                                                                          list_ptr(r) := copy_node_list(list_ptr(p)); {this affects |mem[r+5]|}
                                                                                          words := 5;
                                                                                        End;
                                                      rule_node:
                                                                 Begin
                                                                   r := get_node(rule_node_size);
                                                                   words := rule_node_size;
                                                                 End;
                                                      ins_node:
                                                                Begin
                                                                  r := get_node(ins_node_size);
                                                                  mem[r+4] := mem[p+4];
                                                                  add_glue_ref(split_top_ptr(p));
                                                                  ins_ptr(r) := copy_node_list(ins_ptr(p)); {this affects |mem[r+4]|}
                                                                  words := ins_node_size-1;
                                                                End;
                                                      whatsit_node:
(*INSERT 'Make a partial copy of the whatsit node |p| and make |r| point to it; set |words| to the number of initial words not yet copied'*)(*PASCAL module 1357*)
                                                                    Case subtype(p) Of 
                                                                      open_node:
                                                                                 Begin
                                                                                   r := get_node(open_node_size);
                                                                                   words := open_node_size;
                                                                                 End;
                                                                      write_node,special_node:
                                                                                               Begin
                                                                                                 r := get_node(write_node_size);
                                                                                                 add_token_ref(write_tokens(p));
                                                                                                 words := write_node_size;
                                                                                               End;
                                                                      close_node,language_node:
                                                                                                Begin
                                                                                                  r := get_node(small_node_size);
                                                                                                  words := small_node_size;
                                                                                                End;
                                                                      othercases confusion('ext2')
(*this can''t happen ext2][\quad ext2*)
                                                                      endcases

(*FIN INSERT 'Make a partial copy of the whatsit node |p| and make |r| point to it; set |words| to the number of initial words not yet copied'*);
                                                                      glue_node:
                                                                                 Begin
                                                                                   r := get_node(small_node_size);
                                                                                   add_glue_ref(glue_ptr(p));
                                                                                   glue_ptr(r) := glue_ptr(p);
                                                                                   leader_ptr(r) := copy_node_list(leader_ptr(p));
                                                                                 End;
                                                                      kern_node,math_node,penalty_node:
                                                                                                        Begin
                                                                                                          r := get_node(small_node_size);
                                                                                                          words := small_node_size;
                                                                                                        End;
                                                                      ligature_node:
                                                                                     Begin
                                                                                       r := get_node(small_node_size);
                                                                                       mem[lig_char(r)] := mem[lig_char(p)]; {copy |font| and |character|}
                                                                                       lig_ptr(r) := copy_node_list(lig_ptr(p));
                                                                                     End;
                                                                      disc_node:
                                                                                 Begin
                                                                                   r := get_node(small_node_size);
                                                                                   pre_break(r) := copy_node_list(pre_break(p));
                                                                                   post_break(r) := copy_node_list(post_break(p));
                                                                                 End;
                                                                      mark_node:
                                                                                 Begin
                                                                                   r := get_node(small_node_size);
                                                                                   add_token_ref(mark_ptr(p));
                                                                                   words := small_node_size;
                                                                                 End;
                                                                      adjust_node:
                                                                                   Begin
                                                                                     r := get_node(small_node_size);
                                                                                     adjust_ptr(r) := copy_node_list(adjust_ptr(p));
                                                                                   End; {|words=1=small_node_size-1|}
                                                                      othercases confusion('copying')
(*this can''t happen copying][\quad copying*)
                                                                      endcases

(*FIN INSERT 'Case statement to copy different types and set |words| to the number of initial words not yet copied'*);
                                                                      While words>0 Do
                                                                        Begin
                                                                          decr(words);
                                                                          mem[r+words] := mem[p+words];
                                                                        End

(*FIN INSERT 'Make a copy of node |p| in node |r|'*)                  ;
                                                                      link(q) := r;
                                                                      q := r;
                                                                      p := link(p);
                                                                    End;
                                                      link(q) := null;
                                                      q := link(h);
                                                      free_avail(h);
                                                      copy_node_list := q;
                                                    End;


(***PASCAL module 211***)
                                                  Procedure print_mode(m:integer); {prints the mode represented by |m|}
                                                  Begin
                                                    If m>0 Then
                                                      Case m Div (max_command+1) Of 
                                                        0: print('vertical');
                                                        1: print('horizontal');
                                                        2: print('display math');
                                                      End
                                                    Else If m=0 Then print('no')
                                                    Else  Case (-m) Div (max_command+1) Of 
                                                            0: print('internal vertical');
                                                            1: print('restricted horizontal');
                                                            2: print('math');
                                                      End;
                                                    print(' mode');
                                                  End;


(***PASCAL module 216***)
                                                  Procedure push_nest; {enter a new semantic level, save the old}
                                                  Begin
                                                    If nest_ptr>max_nest_stack Then
                                                      Begin
                                                        max_nest_stack := nest_ptr;
                                                        If nest_ptr=nest_size Then overflow('semantic nest size',nest_size);
(*TeX capacity exceeded semantic nest size][\quad semantic nest size*)
                                                      End;
                                                    nest[nest_ptr] := cur_list; {stack the record}
                                                    incr(nest_ptr);
                                                    head := get_avail;
                                                    tail := head;
                                                    prev_graf := 0;
                                                    mode_line := line;
                                                  End;


(***PASCAL module 217***)
                                                  Procedure pop_nest; {leave a semantic level, re-enter the old}
                                                  Begin
                                                    free_avail(head);
                                                    decr(nest_ptr);
                                                    cur_list := nest[nest_ptr];
                                                  End;


(***PASCAL module 218***)
                                                  Procedure print_totals;
                                                  forward;
(*\2*)
                                                  Procedure show_activities;

                                                  Var p: 0..nest_size; {index into |nest|}
                                                    m: -mmode..mmode; {mode}
                                                    a: memory_word; {auxiliary}
                                                    q,r: pointer; {for showing the current page}
                                                    t: integer; {ditto}
                                                  Begin
                                                    nest[nest_ptr] := cur_list; {put the top level into the array}
                                                    print_nl('');
                                                    print_ln;
                                                    For p:=nest_ptr Downto 0 Do
                                                      Begin
                                                        m := nest[p].mode_field;
                                                        a := nest[p].aux_field;
                                                        print_nl('### ');
                                                        print_mode(m);
                                                        print(' entered at line ');
                                                        print_int(abs(nest[p].ml_field));
                                                        If m=hmode Then If nest[p].pg_field <> 8585216 Then
                                                                          Begin
                                                                            print(' (language');
                                                                            print_int(nest[p].pg_field Mod 0
                                                                                      print(':hyphenmin');
                                                                            print_int(nest[p].pg_field Div 0
                                                                                      print_char(',');
                                                                            print_int((nest[p].pg_field Div 0 Mod 0
                                                                                      print_char(')');
                                                                          End;
                                                        If nest[p].ml_field<0 Then print(' (\output routine)');
                                                        If p=0 Then
                                                          Begin
(*INSERT 'Show the status of the current page'*)(*PASCAL module 986*)
                                                            If page_head<>page_tail Then
                                                              Begin
                                                                print_nl('### current page:');
                                                                If output_active Then print(' (held over for next output)');
(*held over for next output*)
                                                                show_box(link(page_head));
                                                                If page_contents>empty Then
                                                                  Begin
                                                                    print_nl('total height ');
                                                                    print_totals;
(*total_height][\.{total height}*)
                                                                    print_nl(' goal height ');
                                                                    print_scaled(page_goal);
(*goal height*)
                                                                    r := link(page_ins_head);
                                                                    While r<>page_ins_head Do
                                                                      Begin
                                                                        print_ln;
                                                                        print_esc('insert');
                                                                        t := qo(subtype(r));
                                                                        print_int(t);
                                                                        print(' adds ');
                                                                        If count(t)=1000 Then t := height(r)
                                                                        Else t := x_over_n(height(r),1000)*count(t);
                                                                        print_scaled(t);
                                                                        If Type(r)=split_up Then
                                                                          Begin
                                                                            q := page_head;
                                                                            t := 0;
                                                                            Repeat
                                                                              q := link(q);
                                                                              If (Type(q)=ins_node)And(subtype(q)=subtype(r)) Then incr(t);
                                                                            Until q=broken_ins(r);
                                                                            print(', #');
                                                                            print_int(t);
                                                                            print(' might split');
                                                                          End;
                                                                        r := link(r);
                                                                      End;
                                                                  End;
                                                              End

(*FIN INSERT 'Show the status of the current page'*)        ;
                                                            If link(contrib_head)<>null Then
                                                              print_nl('### recent contributions:');
                                                          End;
                                                        show_box(link(nest[p].head_field));

(*INSERT 'Show the auxiliary field, |a|'*)(*PASCAL module 219*)
                                                        Case abs(m) Div (max_command+1) Of 
                                                          0:
                                                             Begin
                                                               print_nl('prevdepth ');
                                                               If a.sc<=ignore_depth Then print('ignored')
                                                               Else print_scaled(a.sc);
                                                               If nest[p].pg_field<>0 Then
                                                                 Begin
                                                                   print(', prevgraf ');
                                                                   print_int(nest[p].pg_field);
                                                                   print(' line');
                                                                   If nest[p].pg_field<>1 Then print_char('s');
                                                                 End;
                                                             End;
                                                          1:
                                                             Begin
                                                               print_nl('spacefactor ');
                                                               print_int(a.hh.lh);
                                                               If m>0 Then If a.hh.rh>0 Then
                                                                             Begin
                                                                               print(', current language ');
                                                                               print_int(a.hh.rh);
                                                                             End;
                                                             End;
                                                          2: If a.int<>null Then
                                                               Begin
                                                                 print('this will be denominator of:');
                                                                 show_box(a.int);
                                                               End;
                                                        End {there are no other cases}

(*FIN INSERT 'Show the auxiliary field, |a|'*)          ;
                                                      End;
                                                  End;


(***PASCAL module 237***)
                                                  Procedure print_param(n:integer);
                                                  Begin
                                                    Case n Of 
                                                      pretolerance_code: print_esc('pretolerance');
                                                      tolerance_code: print_esc('tolerance');
                                                      line_penalty_code: print_esc('linepenalty');
                                                      hyphen_penalty_code: print_esc('hyphenpenalty');
                                                      ex_hyphen_penalty_code: print_esc('exhyphenpenalty');
                                                      club_penalty_code: print_esc('clubpenalty');
                                                      widow_penalty_code: print_esc('widowpenalty');
                                                      display_widow_penalty_code: print_esc('displaywidowpenalty');
                                                      broken_penalty_code: print_esc('brokenpenalty');
                                                      bin_op_penalty_code: print_esc('binoppenalty');
                                                      rel_penalty_code: print_esc('relpenalty');
                                                      pre_display_penalty_code: print_esc('predisplaypenalty');
                                                      post_display_penalty_code: print_esc('postdisplaypenalty');
                                                      inter_line_penalty_code: print_esc('interlinepenalty');
                                                      double_hyphen_demerits_code: print_esc('doublehyphendemerits');
                                                      final_hyphen_demerits_code: print_esc('finalhyphendemerits');
                                                      adj_demerits_code: print_esc('adjdemerits');
                                                      mag_code: print_esc('mag');
                                                      delimiter_factor_code: print_esc('delimiterfactor');
                                                      looseness_code: print_esc('looseness');
                                                      time_code: print_esc('time');
                                                      day_code: print_esc('day');
                                                      month_code: print_esc('month');
                                                      year_code: print_esc('year');
                                                      show_box_breadth_code: print_esc('showboxbreadth');
                                                      show_box_depth_code: print_esc('showboxdepth');
                                                      hbadness_code: print_esc('hbadness');
                                                      vbadness_code: print_esc('vbadness');
                                                      pausing_code: print_esc('pausing');
                                                      tracing_online_code: print_esc('tracingonline');
                                                      tracing_macros_code: print_esc('tracingmacros');
                                                      tracing_stats_code: print_esc('tracingstats');
                                                      tracing_paragraphs_code: print_esc('tracingparagraphs');
                                                      tracing_pages_code: print_esc('tracingpages');
                                                      tracing_output_code: print_esc('tracingoutput');
                                                      tracing_lost_chars_code: print_esc('tracinglostchars');
                                                      tracing_commands_code: print_esc('tracingcommands');
                                                      tracing_restores_code: print_esc('tracingrestores');
                                                      uc_hyph_code: print_esc('uchyph');
                                                      output_penalty_code: print_esc('outputpenalty');
                                                      max_dead_cycles_code: print_esc('maxdeadcycles');
                                                      hang_after_code: print_esc('hangafter');
                                                      floating_penalty_code: print_esc('floatingpenalty');
                                                      global_defs_code: print_esc('globaldefs');
                                                      cur_fam_code: print_esc('fam');
                                                      escape_char_code: print_esc('escapechar');
                                                      default_hyphen_char_code: print_esc('defaulthyphenchar');
                                                      default_skew_char_code: print_esc('defaultskewchar');
                                                      end_line_char_code: print_esc('endlinechar');
                                                      new_line_char_code: print_esc('newlinechar');
                                                      language_code: print_esc('language');
                                                      left_hyphen_min_code: print_esc('lefthyphenmin');
                                                      right_hyphen_min_code: print_esc('righthyphenmin');
                                                      holding_inserts_code: print_esc('holdinginserts');
                                                      error_context_lines_code: print_esc('errorcontextlines');
                                                      othercases print('[unknown integer parameter!]')
                                                      endcases;
                                                    End;


(***PASCAL module 241***)
                                                    Procedure fix_date_and_time;
                                                    Begin
                                                      time := 12*60; {minutes since midnight}
                                                      day := 4; {fourth day of the month}
                                                      month := 7; {seventh month of the year}
                                                      year := 1776; {Anno Domini}
                                                    End;


(***PASCAL module 245***)
                                                    Procedure begin_diagnostic; {prepare to do some tracing}
                                                    Begin
                                                      old_setting := selector;
                                                      If (tracing_online<=0)And(selector=term_and_log) Then
                                                        Begin
                                                          decr(selector);
                                                          If history=spotless Then history := warning_issued;
                                                        End;
                                                    End;



                                                    Procedure end_diagnostic(blank_line:boolean);
  {restore proper conditions after tracing}
                                                    Begin
                                                      print_nl('');
                                                      If blank_line Then print_ln;
                                                      selector := old_setting;
                                                    End;


(***PASCAL module 247***)
                                                    Procedure print_length_param(n:integer);
                                                    Begin
                                                      Case n Of 
                                                        par_indent_code: print_esc('parindent');
                                                        math_surround_code: print_esc('mathsurround');
                                                        line_skip_limit_code: print_esc('lineskiplimit');
                                                        hsize_code: print_esc('hsize');
                                                        vsize_code: print_esc('vsize');
                                                        max_depth_code: print_esc('maxdepth');
                                                        split_max_depth_code: print_esc('splitmaxdepth');
                                                        box_max_depth_code: print_esc('boxmaxdepth');
                                                        hfuzz_code: print_esc('hfuzz');
                                                        vfuzz_code: print_esc('vfuzz');
                                                        delimiter_shortfall_code: print_esc('delimitershortfall');
                                                        null_delimiter_space_code: print_esc('nulldelimiterspace');
                                                        script_space_code: print_esc('scriptspace');
                                                        pre_display_size_code: print_esc('predisplaysize');
                                                        display_width_code: print_esc('displaywidth');
                                                        display_indent_code: print_esc('displayindent');
                                                        overfull_rule_code: print_esc('overfullrule');
                                                        hang_indent_code: print_esc('hangindent');
                                                        h_offset_code: print_esc('hoffset');
                                                        v_offset_code: print_esc('voffset');
                                                        emergency_stretch_code: print_esc('emergencystretch');
                                                        othercases print('[unknown dimen parameter!]')
                                                        endcases;
                                                      End;


(***PASCAL module 252***)
(*\4*)                                                @<Declare the Procedure called |print_cmd_chr|@>;

                                                      stat Procedure show_eqtb(n:pointer);
                                                      Begin
                                                        If n<active_base Then print_char('?') {this can''t happen}
                                                        Else If n<glue_base Then
(*INSERT 'Show equivalent |n|, in region 1 or 2'*)(*PASCAL module 223*)
                                                               Begin
                                                                 sprint_cs(n);
                                                                 print_char('=');
                                                                 print_cmd_chr(eq_type(n),equiv(n));
                                                                 If eq_type(n)>=call Then
                                                                   Begin
                                                                     print_char(':');
                                                                     show_token_list(link(equiv(n)),null,32);
                                                                   End;
                                                               End

(*FIN INSERT 'Show equivalent |n|, in region 1 or 2'*)
                                                        Else If n<local_base Then
(*INSERT 'Show equivalent |n|, in region 3'*)(*PASCAL module 229*)
                                                               If n<skip_base Then
                                                                 Begin
                                                                   print_skip_param(n-glue_base);
                                                                   print_char('=');
                                                                   If n<glue_base+thin_mu_skip_code Then print_spec(equiv(n),'pt')
                                                                   Else print_spec(equiv(n),'mu');
                                                                 End
                                                        Else If n<mu_skip_base Then
                                                               Begin
                                                                 print_esc('skip');
                                                                 print_int(n-skip_base);
                                                                 print_char('=');
                                                                 print_spec(equiv(n),'pt');
                                                               End
                                                        Else
                                                          Begin
                                                            print_esc('muskip');
                                                            print_int(n-mu_skip_base);
                                                            print_char('=');
                                                            print_spec(equiv(n),'mu');
                                                          End

(*FIN INSERT 'Show equivalent |n|, in region 3'*)
                                                        Else If n<int_base Then
(*INSERT 'Show equivalent |n|, in region 4'*)(*PASCAL module 233*)
                                                               If n=par_shape_loc Then
                                                                 Begin
                                                                   print_esc('parshape');
                                                                   print_char('=');
                                                                   If par_shape_ptr=null Then print_char('0')
                                                                   Else print_int(info(par_shape_ptr));
                                                                 End
                                                        Else If n<toks_base Then
                                                               Begin
                                                                 print_cmd_chr(assign_toks,n);
                                                                 print_char('=');
                                                                 If equiv(n)<>null Then show_token_list(link(equiv(n)),null,32);
                                                               End
                                                        Else If n<box_base Then
                                                               Begin
                                                                 print_esc('toks');
                                                                 print_int(n-toks_base);
                                                                 print_char('=');
                                                                 If equiv(n)<>null Then show_token_list(link(equiv(n)),null,32);
                                                               End
                                                        Else If n<cur_font_loc Then
                                                               Begin
                                                                 print_esc('box');
                                                                 print_int(n-box_base);
                                                                 print_char('=');
                                                                 If equiv(n)=null Then print('void')
                                                                 Else
                                                                   Begin
                                                                     depth_threshold := 0;
                                                                     breadth_max := 1;
                                                                     show_node_list(equiv(n));
                                                                   End;
                                                               End
                                                        Else If n<cat_code_base Then
(*INSERT 'Show the font identifier in |eqtb[n]|'*)(*PASCAL module 234*)
                                                               Begin
                                                                 If n=cur_font_loc Then print('current font')
                                                                 Else If n<math_font_base+16 Then
                                                                        Begin
                                                                          print_esc('textfont');
                                                                          print_int(n-math_font_base);
                                                                        End
                                                                 Else If n<math_font_base+32 Then
                                                                        Begin
                                                                          print_esc('scriptfont');
                                                                          print_int(n-math_font_base-16);
                                                                        End
                                                                 Else
                                                                   Begin
                                                                     print_esc('scriptscriptfont');
                                                                     print_int(n-math_font_base-32);
                                                                   End;
                                                                 print_char('=');

                                                                 print_esc(hash[font_id_base+equiv(n)].rh);
  {that's |font_id_text(equiv(n))|}
                                                               End

(*FIN INSERT 'Show the font identifier in |eqtb[n]|'*)
                                                        Else
(*INSERT 'Show the halfword code in |eqtb[n]|'*)(*PASCAL module 235*)
                                                          If n<math_code_base Then
                                                            Begin
                                                              If n<lc_code_base Then
                                                                Begin
                                                                  print_esc('catcode');
                                                                  print_int(n-cat_code_base);
                                                                End
                                                              Else If n<uc_code_base Then
                                                                     Begin
                                                                       print_esc('lccode');
                                                                       print_int(n-lc_code_base);
                                                                     End
                                                              Else If n<sf_code_base Then
                                                                     Begin
                                                                       print_esc('uccode');
                                                                       print_int(n-uc_code_base);
                                                                     End
                                                              Else
                                                                Begin
                                                                  print_esc('sfcode');
                                                                  print_int(n-sf_code_base);
                                                                End;
                                                              print_char('=');
                                                              print_int(equiv(n));
                                                            End
                                                        Else
                                                          Begin
                                                            print_esc('mathcode');
                                                            print_int(n-math_code_base);
                                                            print_char('=');
                                                            print_int(ho(equiv(n)));
                                                          End

(*FIN INSERT 'Show the halfword code in |eqtb[n]|'*)

(*FIN INSERT 'Show equivalent |n|, in region 4'*)
                                                        Else If n<dimen_base Then
(*INSERT 'Show equivalent |n|, in region 5'*)(*PASCAL module 242*)
                                                               Begin
                                                                 If n<count_base Then print_param(n-int_base)
                                                                 Else If  n<del_code_base Then
                                                                        Begin
                                                                          print_esc('count');
                                                                          print_int(n-count_base);
                                                                        End
                                                                 Else
                                                                   Begin
                                                                     print_esc('delcode');
                                                                     print_int(n-del_code_base);
                                                                   End;
                                                                 print_char('=');
                                                                 print_int(eqtb[n].int);
                                                               End

(*FIN INSERT 'Show equivalent |n|, in region 5'*)
                                                        Else If n<=eqtb_size Then
(*INSERT 'Show equivalent |n|, in region 6'*)(*PASCAL module 251*)
                                                               Begin
                                                                 If n<scaled_base Then print_length_param(n-dimen_base)
                                                                 Else
                                                                   Begin
                                                                     print_esc('dimen');
                                                                     print_int(n-scaled_base);
                                                                   End;
                                                                 print_char('=');
                                                                 print_scaled(eqtb[n].sc);
                                                                 print('pt');
                                                               End

(*FIN INSERT 'Show equivalent |n|, in region 6'*)
                                                        Else print_char('?'); {this can''t happen either}
                                                      End;
                                                      tats


(***PASCAL module 259***)
                                                      Function id_lookup(j,l:integer): pointer; {search the hash table}

                                                      Label found; {go here if you found it}

                                                      Var h: integer; {hash code}
                                                        d: integer; {number of characters in incomplete current string}
                                                        p: pointer; {index in |hash| array}
                                                        k: pointer; {index in |buffer| array}
                                                      Begin
(*INSERT 'Compute the hash code |h|'*)(*PASCAL module 261*)
                                                        h := buffer[j];
                                                        For k:=j+1 To j+l-1 Do
                                                          Begin
                                                            h := h+h+buffer[k];
                                                            While h>=hash_prime Do
                                                              h := h-hash_prime;
                                                          End

(*FIN INSERT 'Compute the hash code |h|'*)              ;
                                                        p := h+hash_base; {we start searching here; note that |0<=h<hash_prime|}
                                                        loopbegin If text(p)>0 Then If length(text(p))=l Then
                                                                                      If str_eq_buf(text(p),j) Then goto found;
                                                        If next(p)=0 Then
                                                          Begin
                                                            If no_new_control_sequence Then
                                                              p := undefined_control_sequence
                                                            Else
(*INSERT 'Insert a new control sequence after |p|, then make |p| point to it'*)(*PASCAL module 260*)
                                                              Begin
                                                                If text(p)>0 Then
                                                                  Begin
                                                                    Repeat
                                                                      If hash_is_full Then overflow('hash size',hash_size);
(*TeX capacity exceeded hash size][\quad hash size*)
                                                                      decr(hash_used);
                                                                    Until text(hash_used)=0; {search for an empty location in |hash|}
                                                                    next(p) := hash_used;
                                                                    p := hash_used;
                                                                  End;
                                                                str_room(l);
                                                                d := cur_length;
                                                                While pool_ptr>str_start[str_ptr] Do
                                                                  Begin
                                                                    decr(pool_ptr);
                                                                    str_pool[pool_ptr+l] := str_pool[pool_ptr];
                                                                  End; {move current string up to make room for another}
                                                                For k:=j To j+l-1 Do
                                                                  append_char(buffer[k]);
                                                                text(p) := make_string;
                                                                pool_ptr := pool_ptr+d;
                                                                stat incr(cs_count);
                                                                tats;

                                                              End

(*FIN INSERT 'Insert a new control sequence after |p|, then make |p| point to it'*);
                                                            goto found;
                                                          End;
                                                        p := next(p);
                                                      End;
                                                      found: id_lookup := p;
                                                    End;


(***PASCAL module 264***)
                                                    init Procedure primitive(s:str_number;c:quarterword;o:halfword);

                                                    Var k: pool_pointer; {index into |str_pool|}
                                                      j: small_number; {index into |buffer|}
                                                      l: small_number; {length of the string}
                                                    Begin
                                                      If s<256 Then cur_val := s+single_base
                                                      Else
                                                        Begin
                                                          k := str_start[s];
                                                          l := str_start[s+1]-k;
    {we will move |s| into the (empty) |buffer|}
                                                          For j:=0 To l-1 Do
                                                            buffer[j] := so(str_pool[k+j]);
                                                          cur_val := id_lookup(0,l); {|no_new_control_sequence| is |false|}
                                                          flush_string;
                                                          text(cur_val) := s; {we don't want to have the string twice}
                                                        End;
                                                      eq_level(cur_val) := level_one;
                                                      eq_type(cur_val) := c;
                                                      equiv(cur_val) := o;
                                                    End;
                                                    tini


(***PASCAL module 274***)
                                                    Procedure new_save_level(c:group_code); {begin a new level of grouping}
                                                    Begin
                                                      check_full_save_stack;
                                                      save_type(save_ptr) := level_boundary;
                                                      save_level(save_ptr) := cur_group;
                                                      save_index(save_ptr) := cur_boundary;
                                                      If cur_level=max_quarterword Then overflow('grouping levels',
(*TeX capacity exceeded grouping levels][\quad grouping levels*)
                                                                                                 max_quarterword-min_quarterword);
  {quit if |(cur_level+1)| is too big to be stored in |eqtb|}
                                                      cur_boundary := save_ptr;
                                                      incr(cur_level);
                                                      incr(save_ptr);
                                                      cur_group := c;
                                                    End;


(***PASCAL module 275***)
                                                    Procedure eq_destroy(w:memory_word); {gets ready to forget |w|}

                                                    Var q: pointer; {|equiv| field of |w|}
                                                    Begin
                                                      Case eq_type_field(w) Of 
                                                        call,long_call,outer_call,long_outer_call: delete_token_ref(equiv_field(w));
                                                        glue_ref: delete_glue_ref(equiv_field(w));
                                                        shape_ref:
                                                                   Begin
                                                                     q := equiv_field(w); {we need to free a \.[\\parshape] block}
                                                                     If q<>null Then free_node(q,info(q)+info(q)+1);
                                                                   End; {such a block is |2n+1| words long, where |n=info(q)|}
                                                        box_ref: flush_node_list(equiv_field(w));
                                                        othercases do_nothing
                                                        endcases;
                                                      End;


(***PASCAL module 276***)
                                                      Procedure eq_save(p:pointer;l:quarterword); {saves |eqtb[p]|}
                                                      Begin
                                                        check_full_save_stack;
                                                        If l=level_zero Then save_type(save_ptr) := restore_zero
                                                        Else
                                                          Begin
                                                            save_stack[save_ptr] := eqtb[p];
                                                            incr(save_ptr);
                                                            save_type(save_ptr) := restore_old_value;
                                                          End;
                                                        save_level(save_ptr) := l;
                                                        save_index(save_ptr) := p;
                                                        incr(save_ptr);
                                                      End;


(***PASCAL module 277***)
                                                      Procedure eq_define(p:pointer;t:quarterword;e:halfword);
  {new data for |eqtb|}
                                                      Begin
                                                        If eq_level(p)=cur_level Then eq_destroy(eqtb[p])
                                                        Else If cur_level>level_one Then eq_save(p,eq_level(p));
                                                        eq_level(p) := cur_level;
                                                        eq_type(p) := t;
                                                        equiv(p) := e;
                                                      End;


(***PASCAL module 278***)
                                                      Procedure eq_word_define(p:pointer;w:integer);
                                                      Begin
                                                        If xeq_level[p]<>cur_level Then
                                                          Begin
                                                            eq_save(p,xeq_level[p]);
                                                            xeq_level[p] := cur_level;
                                                          End;
                                                        eqtb[p].int := w;
                                                      End;


(***PASCAL module 279***)
                                                      Procedure geq_define(p:pointer;t:quarterword;e:halfword);
  {global |eq_define|}
                                                      Begin
                                                        eq_destroy(eqtb[p]);
                                                        eq_level(p) := level_one;
                                                        eq_type(p) := t;
                                                        equiv(p) := e;
                                                      End;



                                                      Procedure geq_word_define(p:pointer;w:integer); {global |eq_word_define|}
                                                      Begin
                                                        eqtb[p].int := w;
                                                        xeq_level[p] := level_one;
                                                      End;


(***PASCAL module 280***)
                                                      Procedure save_for_after(t:halfword);
                                                      Begin
                                                        If cur_level>level_one Then
                                                          Begin
                                                            check_full_save_stack;
                                                            save_type(save_ptr) := insert_token;
                                                            save_level(save_ptr) := level_zero;
                                                            save_index(save_ptr) := t;
                                                            incr(save_ptr);
                                                          End;
                                                      End;


(***PASCAL module 281***)
(*\4*)                                                @<Declare the Procedure called |restore_trace|@>;

                                                      Procedure back_input;
                                                      forward;
(*\2*)
                                                      Procedure unsave; {pops the top level off the save stack}

                                                      Label done;

                                                      Var p: pointer; {position to be restored}
                                                        l: quarterword; {saved level, if in fullword regions of |eqtb|}
                                                        t: halfword; {saved value of |cur_tok|}
                                                      Begin
                                                        If cur_level>level_one Then
                                                          Begin
                                                            decr(cur_level);

(*INSERT 'Clear off top level from |save_stack|'*)(*PASCAL module 282*)
                                                            loopbegin decr(save_ptr);
                                                            If save_type(save_ptr)=level_boundary Then goto done;
                                                            p := save_index(save_ptr);
                                                            If save_type(save_ptr)=insert_token Then

(*INSERT 'Insert token |p| into \TeX''s input'*)(*PASCAL module 326*)
                                                              Begin
                                                                t := cur_tok;
                                                                cur_tok := p;
                                                                back_input;
                                                                cur_tok := t;
                                                              End

(*FIN INSERT 'Insert token |p| into \TeX''s input'*)
                                                            Else
                                                              Begin
                                                                If save_type(save_ptr)=restore_old_value Then
                                                                  Begin
                                                                    l := save_level(save_ptr);
                                                                    decr(save_ptr);
                                                                  End
                                                                Else save_stack[save_ptr] := eqtb[undefined_control_sequence];

(*INSERT 'Store \(s)|save_stack[save_ptr]| in |eqtb[p]|, unless |eqtb[p]| holds a global value'*)(*PASCAL module 283*)
                                                                If p<int_base Then
                                                                  If eq_level(p)=level_one Then
                                                                    Begin
                                                                      eq_destroy(save_stack[save_ptr]); {destroy the saved value}
                                                                      stat If tracing_restores>0 Then restore_trace(p,'retaining');
                                                                      tats;

                                                                    End
                                                                Else
                                                                  Begin
                                                                    eq_destroy(eqtb[p]); {destroy the current value}
                                                                    eqtb[p] := save_stack[save_ptr]; {restore the saved value}
                                                                    stat If tracing_restores>0 Then restore_trace(p,'restoring');
                                                                    tats;

                                                                  End
                                                                Else If xeq_level[p]<>level_one Then
                                                                       Begin
                                                                         eqtb[p] := save_stack[save_ptr];
                                                                         xeq_level[p] := l;
                                                                         stat If tracing_restores>0 Then restore_trace(p,'restoring');
                                                                         tats;

                                                                       End
                                                                Else
                                                                  Begin
                                                                    stat If tracing_restores>0 Then restore_trace(p,'retaining');
                                                                    tats;

                                                                  End

(*FIN INSERT 'Store \(s)|save_stack[save_ptr]| in |eqtb[p]|, unless |eqtb[p]| holds a global value'*);
                                                              End;
                                                          End;
                                                        done: cur_group := save_level(save_ptr);
                                                        cur_boundary := save_index(save_ptr)

(*FIN INSERT 'Clear off top level from |save_stack|'*)  ;
                                                      End
                                                      Else confusion('curlevel'); {|unsave| is not used when |cur_group=bottom_level|}
(*this can''t happen curlevel][\quad curlevel*)
                                                    End;


(***PASCAL module 288***)
                                                    Procedure prepare_mag;
                                                    Begin
                                                      If (mag_set>0)And(mag<>mag_set) Then
                                                        Begin
                                                          print_err('Incompatible magnification (');
                                                          print_int(mag);
(*Incompatible magnification*)
                                                          print(');');
                                                          print_nl(' the previous value will be retained');
                                                          help2('I can handle only one magnification ratio per job. So I''ve')

                                                          ('reverted to the magnification you used earlier on this run.');

                                                          int_error(mag_set);
                                                          geq_word_define(int_base+mag_code,mag_set); {|mag:=mag_set|}
                                                        End;
                                                      If (mag<=0)Or(mag>32768) Then
                                                        Begin
                                                          print_err('Illegal magnification has been changed to 1000');

(*Illegal magnification...*)
                                                          help1('The magnification ratio must be between 1 and 32768.');
                                                          int_error(mag);
                                                          geq_word_define(int_base+mag_code,1000);
                                                        End;
                                                      mag_set := mag;
                                                    End;


(***PASCAL module 295***)
                                                    Procedure token_show(p:pointer);
                                                    Begin
                                                      If p<>null Then show_token_list(link(p),null,10000000);
                                                    End;


(***PASCAL module 296***)
                                                    Procedure print_meaning;
                                                    Begin
                                                      print_cmd_chr(cur_cmd,cur_chr);
                                                      If cur_cmd>=call Then
                                                        Begin
                                                          print_char(':');
                                                          print_ln;
                                                          token_show(cur_chr);
                                                        End
                                                      Else If cur_cmd=top_bot_mark Then
                                                             Begin
                                                               print_char(':');
                                                               print_ln;
                                                               token_show(cur_mark[cur_chr]);
                                                             End;
                                                    End;


(***PASCAL module 299***)
                                                    Procedure show_cur_cmd_chr;
                                                    Begin
                                                      begin_diagnostic;
                                                      print_nl('{');
                                                      If mode<>shown_mode Then
                                                        Begin
                                                          print_mode(mode);
                                                          print(': ');
                                                          shown_mode := mode;
                                                        End;
                                                      print_cmd_chr(cur_cmd,cur_chr);
                                                      print_char('}');
                                                      end_diagnostic(false);
                                                    End;


(***PASCAL module 311***)
                                                    Procedure show_context; {prints where the scanner is}

                                                    Label done;

                                                    Var old_setting: 0..max_selector; {saved |selector| setting}
                                                      nn: integer; {number of contexts shown so far, less one}
                                                      bottom_line: boolean; {have we reached the final context to be shown?}

(*INSERT 'Local variables for formatting calculations'*)(*PASCAL module 315*)
                                                      i: 0..buf_size; {index into |buffer|}
                                                      j: 0..buf_size; {end of current line in |buffer|}
                                                      l: 0..half_error_line; {length of descriptive information on line 1}
                                                      m: integer; {context information gathered for line 2}
                                                      n: 0..error_line; {length of line 1}
                                                      p: integer; {starting or ending place in |trick_buf|}
                                                      q: integer; {temporary index}

(*FIN INSERT 'Local variables for formatting calculations'*)

                                                    Begin
                                                      base_ptr := input_ptr;
                                                      input_stack[base_ptr] := cur_input;
  {store current state}
                                                      nn := -1;
                                                      bottom_line := false;
                                                      loopbegin cur_input := input_stack[base_ptr]; {enter into the context}
                                                      If (state<>token_list) Then
                                                        If (name>17) Or (base_ptr=0) Then bottom_line := true;
                                                      If (base_ptr=input_ptr)Or bottom_line Or(nn<error_context_lines) Then

(*INSERT 'Display the current context'*)(*PASCAL module 312*)
                                                        Begin
                                                          If (base_ptr=input_ptr) Or (state<>token_list) Or
                                                             (token_type<>backed_up) Or (loc<>null) Then
    {we omit backed-up token lists that have already been read}
                                                            Begin
                                                              tally := 0; {get ready to count characters}
                                                              old_setting := selector;
                                                              If state<>token_list Then
                                                                Begin
(*INSERT 'Print location of current line'*)(*PASCAL module 313*)
                                                                  If name<=17 Then
                                                                    If terminal_input Then
                                                                      If base_ptr=0 Then print_nl('<*>')
                                                                  Else print_nl('<insert> ')
                                                                  Else
                                                                    Begin
                                                                      print_nl('<read ');
                                                                      If name=17 Then print_char('*')
                                                                      Else print_int(name-1);
(**\relax*)
                                                                      print_char('>');
                                                                    End
                                                                  Else
                                                                    Begin
                                                                      print_nl('l.');
                                                                      print_int(line);
                                                                    End;
                                                                  print_char(' ')

(*FIN INSERT 'Print location of current line'*)                   ;

(*INSERT 'Pseudoprint the line'*)(*PASCAL module 318*)
                                                                  begin_pseudoprint;
                                                                  If buffer[limit]=end_line_char Then j := limit
                                                                  Else j := limit+1; {determine the effective end of the line}
                                                                  If j>0 Then For i:=start To j-1 Do
                                                                                Begin
                                                                                  If i=loc Then set_trick_count;
                                                                                  print(buffer[i]);
                                                                                End

(*FIN INSERT 'Pseudoprint the line'*)                             ;
                                                                End
                                                              Else
                                                                Begin
(*INSERT 'Print type of token list'*)(*PASCAL module 314*)
                                                                  Case token_type Of 
                                                                    parameter: print_nl('<argument> ');
                                                                    u_template,v_template: print_nl('<template> ');
                                                                    backed_up: If loc=null Then print_nl('<recently read> ')
                                                                               Else print_nl('<to be read again> ');
                                                                    inserted: print_nl('<inserted text> ');
                                                                    macro:
                                                                           Begin
                                                                             print_ln;
                                                                             print_cs(name);
                                                                           End;
                                                                    output_text: print_nl('<output> ');
                                                                    every_par_text: print_nl('<everypar> ');
                                                                    every_math_text: print_nl('<everymath> ');
                                                                    every_display_text: print_nl('<everydisplay> ');
                                                                    every_hbox_text: print_nl('<everyhbox> ');
                                                                    every_vbox_text: print_nl('<everyvbox> ');
                                                                    every_job_text: print_nl('<everyjob> ');
                                                                    every_cr_text: print_nl('<everycr> ');
                                                                    mark_text: print_nl('<mark> ');
                                                                    write_text: print_nl('<write> ');
                                                                    othercases print_nl('?') {this should never happen}
                                                                    endcases

(*FIN INSERT 'Print type of token list'*)                           ;

(*INSERT 'Pseudoprint the token list'*)(*PASCAL module 319*)
                                                                    begin_pseudoprint;
                                                                    If token_type<macro Then show_token_list(start,loc,100000)
                                                                    Else show_token_list(link(start),loc,100000) {avoid reference count}

(*FIN INSERT 'Pseudoprint the token list'*)                         ;
                                                                  End;
                                                                  selector := old_setting; {stop pseudoprinting}

(*INSERT 'Print two lines using the tricky pseudoprinted information'*)(*PASCAL module 317*)
                                                                  If trick_count=1000000 Then set_trick_count;
  {|set_trick_count| must be performed}
                                                                  If tally<trick_count Then m := tally-first_count
                                                                  Else m := trick_count-first_count; {context on line 2}
                                                                  If l+first_count<=half_error_line Then
                                                                    Begin
                                                                      p := 0;
                                                                      n := l+first_count;
                                                                    End
                                                                  Else
                                                                    Begin
                                                                      print('...');
                                                                      p := l+first_count-half_error_line+3;
                                                                      n := half_error_line;
                                                                    End;
                                                                  For q:=p To first_count-1 Do
                                                                    print_char(trick_buf[q Mod error_line]);
                                                                  print_ln;
                                                                  For q:=1 To n Do
                                                                    print_char(' '); {print |n| spaces to begin line~2}
                                                                  If m+n<=error_line Then p := first_count+m
                                                                  Else p := first_count+(error_line-n-3);
                                                                  For q:=first_count To p-1 Do
                                                                    print_char(trick_buf[q Mod error_line]);
                                                                  If m+n>error_line Then print('...')

(*FIN INSERT 'Print two lines using the tricky pseudoprinted information'*);
                                                                  incr(nn);
                                                                End;
                                                            End

(*FIN INSERT 'Display the current context'*)
                                                          Else If nn=error_context_lines Then
                                                                 Begin
                                                                   print_nl('...');
                                                                   incr(nn); {omitted if |error_context_lines<0|}
                                                                 End;
                                                          If bottom_line Then goto done;
                                                          decr(base_ptr);
                                                        End;
                                                      done: cur_input := input_stack[input_ptr]; {restore original state}
                                                    End;


(***PASCAL module 323***)
                                                    Procedure begin_token_list(p:pointer;t:quarterword);
                                                    Begin
                                                      push_input;
                                                      state := token_list;
                                                      start := p;
                                                      token_type := t;
                                                      If t>=macro Then {the token list starts with a reference count}
                                                        Begin
                                                          add_token_ref(p);
                                                          If t=macro Then param_start := param_ptr
                                                          Else
                                                            Begin
                                                              loc := link(p);
                                                              If tracing_macros>1 Then
                                                                Begin
                                                                  begin_diagnostic;
                                                                  print_nl('');
                                                                  Case t Of 
                                                                    mark_text: print_esc('mark');
                                                                    write_text: print_esc('write');
                                                                    othercases print_cmd_chr(assign_toks,t-output_text+output_routine_loc)
                                                                    endcases;

                                                                    print('->');
                                                                    token_show(p);
                                                                    end_diagnostic(false);
                                                                  End;
                                                                End;
                                                            End
                                                          Else loc := p;
                                                        End;


(***PASCAL module 324***)
                                                      Procedure end_token_list; {leave a token-list input level}
                                                      Begin
                                                        If token_type>=backed_up Then {token list to be deleted}
                                                          Begin
                                                            If token_type<=inserted Then flush_list(start)
                                                            Else
                                                              Begin
                                                                delete_token_ref(start); {update reference count}
                                                                If token_type=macro Then {parameters must be flushed}
                                                                  While param_ptr>param_start Do
                                                                    Begin
                                                                      decr(param_ptr);
                                                                      flush_list(param_stack[param_ptr]);
                                                                    End;
                                                              End;
                                                          End
                                                        Else If token_type=u_template Then
                                                               If align_state>500000 Then align_state := 0
                                                        Else fatal_error('(interwoven alignment preambles are not allowed)');
(*interwoven alignment preambles...*)
                                                        pop_input;
                                                        check_interrupt;
                                                      End;


(***PASCAL module 325***)
                                                      Procedure back_input; {undoes one token of input}

                                                      Var p: pointer; {a token list of length one}
                                                      Begin
                                                        While (state=token_list)And(loc=null)And(token_type<>v_template) Do
                                                          end_token_list; {conserve stack space}
                                                        p := get_avail;
                                                        info(p) := cur_tok;
                                                        If cur_tok<right_brace_limit Then
                                                          If cur_tok<left_brace_limit Then decr(align_state)
                                                        Else incr(align_state);
                                                        push_input;
                                                        state := token_list;
                                                        start := p;
                                                        token_type := backed_up;
                                                        loc := p; {that was |back_list(p)|, without procedure overhead}
                                                      End;


(***PASCAL module 327***)
                                                      Procedure back_error; {back up one token and call |error|}
                                                      Begin
                                                        OK_to_interrupt := false;
                                                        back_input;
                                                        OK_to_interrupt := true;
                                                        error;
                                                      End;



                                                      Procedure ins_error; {back up one inserted token and call |error|}
                                                      Begin
                                                        OK_to_interrupt := false;
                                                        back_input;
                                                        token_type := inserted;
                                                        OK_to_interrupt := true;
                                                        error;
                                                      End;


(***PASCAL module 328***)
                                                      Procedure begin_file_reading;
                                                      Begin
                                                        If in_open=max_in_open Then overflow('text input levels',max_in_open);
(*TeX capacity exceeded text input levels][\quad text input levels*)
                                                        If first=buf_size Then overflow('buffer size',buf_size);
(*TeX capacity exceeded buffer size][\quad buffer size*)
                                                        incr(in_open);
                                                        push_input;
                                                        index := in_open;
                                                        line_stack[index] := line;
                                                        start := first;
                                                        state := mid_line;
                                                        name := 0; {|terminal_input| is now |true|}
                                                      End;


(***PASCAL module 329***)
                                                      Procedure end_file_reading;
                                                      Begin
                                                        first := start;
                                                        line := line_stack[index];
                                                        If name>17 Then a_close(cur_file); {forget it}
                                                        pop_input;
                                                        decr(in_open);
                                                      End;


(***PASCAL module 330***)
                                                      Procedure clear_for_error_prompt;
                                                      Begin
                                                        While (state<>token_list)And terminal_input And
                                                              (input_ptr>0)And(loc>limit) Do
                                                          end_file_reading;
                                                        print_ln;
                                                        clear_terminal;
                                                      End;


(***PASCAL module 336***)
                                                      Procedure check_outer_validity;

                                                      Var p: pointer; {points to inserted token list}
                                                        q: pointer; {auxiliary pointer}
                                                      Begin
                                                        If scanner_status<>normal Then
                                                          Begin
                                                            deletions_allowed := false;

(*INSERT 'Back up an outer control sequence so that it can be reread'*)(*PASCAL module 337*)
                                                            If cur_cs<>0 Then
                                                              Begin
                                                                If (state=token_list)Or(name<1)Or(name>17) Then
                                                                  Begin
                                                                    p := get_avail;
                                                                    info(p) := cs_token_flag+cur_cs;
                                                                    back_list(p); {prepare to read the control sequence again}
                                                                  End;
                                                                cur_cmd := spacer;
                                                                cur_chr := ' '; {replace it by a space}
                                                              End

(*FIN INSERT 'Back up an outer control sequence so that it can be reread'*);
                                                            If scanner_status>skipping Then

(*INSERT 'Tell the user what has run away and try to recover'*)(*PASCAL module 338*)
                                                              Begin
                                                                runaway; {print a definition, argument, or preamble}
                                                                If cur_cs=0 Then print_err('File ended')
(*File ended while scanning...*)
                                                                Else
                                                                  Begin
                                                                    cur_cs := 0;
                                                                    print_err('Forbidden control sequence found');
(*Forbidden control sequence...*)
                                                                  End;
                                                                print(' while scanning ');

(*INSERT 'Print either `\.{definition}'' or `\.{use}'' or `\.{preamble}'' or `\.{text}'', and insert tokens that should lead to recovery'*)(*PASCAL module 339*)
                                                                p := get_avail;
                                                                Case scanner_status Of 
                                                                  defining:
                                                                            Begin
                                                                              print('definition');
                                                                              info(p) := right_brace_token+'}';
                                                                            End;
                                                                  matching:
                                                                            Begin
                                                                              print('use');
                                                                              info(p) := par_token;
                                                                              long_state := outer_call;
                                                                            End;
                                                                  aligning:
                                                                            Begin
                                                                              print('preamble');
                                                                              info(p) := right_brace_token+'}';
                                                                              q := p;
                                                                              p := get_avail;
                                                                              link(p) := q;
                                                                              info(p) := cs_token_flag+frozen_cr;
                                                                              align_state := -1000000;
                                                                            End;
                                                                  absorbing:
                                                                             Begin
                                                                               print('text');
                                                                               info(p) := right_brace_token+'}';
                                                                             End;
                                                                End; {there are no other cases}
                                                                ins_list(p)

(*FIN INSERT 'Print either `\.{definition}'' or `\.{use}'' or `\.{preamble}'' or `\.{text}'', and insert tokens that should lead to recovery'*);
                                                                print(' of ');
                                                                sprint_cs(warning_index);
                                                                help4('I suspect you have forgotten a `}'', causing me')

                                                                ('to read past where you wanted me to stop.')

                                                                ('I''ll try to recover; but if the error is serious,')

                                                                ('you''d better type `E'' or `X'' now and fix your file.');

                                                                error;
                                                              End

(*FIN INSERT 'Tell the user what has run away and try to recover'*)
                                                            Else
                                                              Begin
                                                                print_err('Incomplete ');
                                                                print_cmd_chr(if_test,cur_if);
(*Incomplete \\if...*)
                                                                print('; all text was ignored after line ');
                                                                print_int(skip_line);
                                                                help3('A forbidden control sequence occurred in skipped text.')

                                                                ('This kind of error happens when you say `\if...'' and forget')

                                                                ('the matching `\fi''. I''ve inserted a `\fi''; this might work.');
                                                                If cur_cs<>0 Then cur_cs := 0
                                                                Else help_line[2] := 
                                                                                     'The file ended while I was skipping conditional text.';
                                                                cur_tok := cs_token_flag+frozen_fi;
                                                                ins_error;
                                                              End;
                                                            deletions_allowed := true;
                                                          End;
                                                      End;


(***PASCAL module 340***)
                                                      Procedure firm_up_the_line;
                                                      forward;


(***PASCAL module 341***)
                                                      Procedure get_next; {sets |cur_cmd|, |cur_chr|, |cur_cs| to next token}

                                                      Label restart, {go here to get the next input token}
                                                        switch, {go here to eat the next character from a file}
                                                        reswitch, {go here to digest it again}
                                                        start_cs, {go here to start looking for a control sequence}
                                                        found, {go here when a control sequence has been found}
                                                        exit; {go here when the next input token has been got}

                                                      Var k: 0..buf_size; {an index into |buffer|}
                                                        t: halfword; {a token}
                                                        cat: 0..max_char_code; {|cat_code(cur_chr)|, usually}
                                                        c,cc: ASCII_code; {constituents of a possible expanded code}
                                                        d: 2..3; {number of excess characters in an expanded code}
                                                      Begin
                                                        restart: cur_cs := 0;
                                                        If state<>token_list Then

(*INSERT 'Input from external file, |goto restart| if no input found'*)(*PASCAL module 343*)
(*inner loop*)
                                                          Begin
                                                            switch: If loc<=limit Then {current line not yet finished}
                                                                      Begin
                                                                        cur_chr := buffer[loc];
                                                                        incr(loc);
                                                                        reswitch: cur_cmd := cat_code(cur_chr);

(*INSERT 'Change state if necessary, and |goto switch| if the current character should be ignored, or |goto reswitch| if the current character changes to another'*)(*PASCAL module 344*)
                                                                        Case state+cur_cmd Of 

(*INSERT 'Cases where character is ignored'*)(*PASCAL module 345*)
                                                                          any_state_plus(ignore),skip_blanks+spacer,new_line+spacer

(*FIN INSERT 'Cases where character is ignored'*)                         : goto switch;
                                                                          any_state_plus(escape):
(*INSERT 'Scan a control sequence and set |state:=skip_blanks| or |mid_line|'*)(*PASCAL module 354*)
                                                                                                  Begin
                                                                                                    If loc>limit Then cur_cs := null_cs {|state| is irrelevant in this case}
                                                                                                    Else
                                                                                                      Begin
                                                                                                        start_cs: k := loc;
                                                                                                        cur_chr := buffer[k];
                                                                                                        cat := cat_code(cur_chr);
                                                                                                        incr(k);
                                                                                                        If cat=letter Then state := skip_blanks
                                                                                                        Else If cat=spacer Then state := skip_blanks
                                                                                                        Else state := mid_line;
                                                                                                        If (cat=letter)And(k<=limit) Then

(*INSERT 'Scan ahead in the buffer until finding a nonletter; if an expanded code is encountered, reduce it and |goto start_cs|; otherwise if a multiletter control sequence is found, adjust |cur_cs| and |loc|, and |goto found|'*)(*PASCAL module 356*)
                                                                                                          Begin
                                                                                                            Repeat
                                                                                                              cur_chr := buffer[k];
                                                                                                              cat := cat_code(cur_chr);
                                                                                                              incr(k);
                                                                                                            Until (cat<>letter)Or(k>limit);

(*INSERT 'If an expanded code is present, reduce it and |goto start_cs|'*)(*PASCAL module 355*)
                                                                                                            Begin
                                                                                                              If buffer[k]=cur_chr Then If cat=sup_mark Then If k<limit Then
                                                                                                                                                               Begin
                                                                                                                                                                 c := buffer[k+1];
                                                                                                                                                                 If c<128 Then {yes, one is indeed present}
                                                                                                                                                                   Begin
                                                                                                                                                                     d := 2;
                                                                                                                                                                     If is_hex(c) Then If k+2<=limit Then
                                                                                                                                                                                         Begin
                                                                                                                                                                                           cc := buffer[k+2];
                                                                                                                                                                                           If is_hex(cc) Then incr(d);
                                                                                                                                                                                         End;
                                                                                                                                                                     If d>2 Then
                                                                                                                                                                       Begin
                                                                                                                                                                         hex_to_cur_chr;
                                                                                                                                                                         buffer[k-1] := cur_chr;
                                                                                                                                                                       End
                                                                                                                                                                     Else If c<64 Then buffer[k-1] := c+64
                                                                                                                                                                     Else buffer[k-1] := c-64;
                                                                                                                                                                     limit := limit-d;
                                                                                                                                                                     first := first-d;
                                                                                                                                                                     While k<=limit Do
                                                                                                                                                                       Begin
                                                                                                                                                                         buffer[k] := buffer[k+d];
                                                                                                                                                                         incr(k);
                                                                                                                                                                       End;
                                                                                                                                                                     goto start_cs;
                                                                                                                                                                   End;
                                                                                                                                                               End;
                                                                                                            End

(*FIN INSERT 'If an expanded code is present, reduce it and |goto start_cs|'*)                              ;
                                                                                                            If cat<>letter Then decr(k);
  {now |k| points to first nonletter}
                                                                                                            If k>loc+1 Then {multiletter control sequence has been scanned}
                                                                                                              Begin
                                                                                                                cur_cs := id_lookup(loc,k-loc);
                                                                                                                loc := k;
                                                                                                                goto found;
                                                                                                              End;
                                                                                                          End

(*FIN INSERT 'Scan ahead in the buffer until finding a nonletter; if an expanded code is encountered, reduce it and |goto start_cs|; otherwise if a multiletter control sequence is found, adjust |cur_cs| and |loc|, and |goto found|'*)
                                                                                                        Else
(*INSERT 'If an expanded code is present, reduce it and |goto start_cs|'*)(*PASCAL module 355*)
                                                                                                          Begin
                                                                                                            If buffer[k]=cur_chr Then If cat=sup_mark Then If k<limit Then
                                                                                                                                                             Begin
                                                                                                                                                               c := buffer[k+1];
                                                                                                                                                               If c<128 Then {yes, one is indeed present}
                                                                                                                                                                 Begin
                                                                                                                                                                   d := 2;
                                                                                                                                                                   If is_hex(c) Then If k+2<=limit Then
                                                                                                                                                                                       Begin
                                                                                                                                                                                         cc := buffer[k+2];
                                                                                                                                                                                         If is_hex(cc) Then incr(d);
                                                                                                                                                                                       End;
                                                                                                                                                                   If d>2 Then
                                                                                                                                                                     Begin
                                                                                                                                                                       hex_to_cur_chr;
                                                                                                                                                                       buffer[k-1] := cur_chr;
                                                                                                                                                                     End
                                                                                                                                                                   Else If c<64 Then buffer[k-1] := c+64
                                                                                                                                                                   Else buffer[k-1] := c-64;
                                                                                                                                                                   limit := limit-d;
                                                                                                                                                                   first := first-d;
                                                                                                                                                                   While k<=limit Do
                                                                                                                                                                     Begin
                                                                                                                                                                       buffer[k] := buffer[k+d];
                                                                                                                                                                       incr(k);
                                                                                                                                                                     End;
                                                                                                                                                                   goto start_cs;
                                                                                                                                                                 End;
                                                                                                                                                             End;
                                                                                                          End

(*FIN INSERT 'If an expanded code is present, reduce it and |goto start_cs|'*)                          ;
                                                                                                        cur_cs := single_base+buffer[loc];
                                                                                                        incr(loc);
                                                                                                      End;
                                                                                                    found: cur_cmd := eq_type(cur_cs);
                                                                                                    cur_chr := equiv(cur_cs);
                                                                                                    If cur_cmd>=outer_call Then check_outer_validity;
                                                                                                  End

(*FIN INSERT 'Scan a control sequence and set |state:=skip_blanks| or |mid_line|'*);
                                                                          any_state_plus(active_char):
(*INSERT 'Process an active-character control sequence and set |state:=mid_line|'*)(*PASCAL module 353*)
                                                                                                       Begin
                                                                                                         cur_cs := cur_chr+active_base;
                                                                                                         cur_cmd := eq_type(cur_cs);
                                                                                                         cur_chr := equiv(cur_cs);
                                                                                                         state := mid_line;
                                                                                                         If cur_cmd>=outer_call Then check_outer_validity;
                                                                                                       End

(*FIN INSERT 'Process an active-character control sequence and set |state:=mid_line|'*);
                                                                          any_state_plus(sup_mark):
(*INSERT 'If this |sup_mark| starts an expanded character like~\.{\^\^A} or~\.{\^\^df}, then |goto reswitch|, otherwise set |state:=mid_line|'*)(*PASCAL module 352*)
                                                                                                    Begin
                                                                                                      If cur_chr=buffer[loc] Then If loc<limit Then
                                                                                                                                    Begin
                                                                                                                                      c := buffer[loc+1];
                                                                                                                                      If c<128 Then {yes we have an expanded char}
                                                                                                                                        Begin
                                                                                                                                          loc := loc+2;
                                                                                                                                          If is_hex(c) Then If loc<=limit Then
                                                                                                                                                              Begin
                                                                                                                                                                cc := buffer[loc];
                                                                                                                                                                If is_hex(cc) Then
                                                                                                                                                                  Begin
                                                                                                                                                                    incr(loc);
                                                                                                                                                                    hex_to_cur_chr;
                                                                                                                                                                    goto reswitch;
                                                                                                                                                                  End;
                                                                                                                                                              End;
                                                                                                                                          If c<64 Then cur_chr := c+64
                                                                                                                                          Else cur_chr := c-64;
                                                                                                                                          goto reswitch;
                                                                                                                                        End;
                                                                                                                                    End;
                                                                                                      state := mid_line;
                                                                                                    End

(*FIN INSERT 'If this |sup_mark| starts an expanded character like~\.{\^\^A} or~\.{\^\^df}, then |goto reswitch|, otherwise set |state:=mid_line|'*);
                                                                          any_state_plus(invalid_char):
(*INSERT 'Decry the invalid character and |goto restart|'*)(*PASCAL module 346*)
                                                                                                        Begin
                                                                                                          print_err('Text line contains an invalid character');
(*Text line contains...*)
                                                                                                          help2('A funny symbol that I can''t read has just been input.')

                                                                                                          ('Continue, and I''ll forget that it ever happened.');

                                                                                                          deletions_allowed := false;
                                                                                                          error;
                                                                                                          deletions_allowed := true;
                                                                                                          goto restart;
                                                                                                        End

(*FIN INSERT 'Decry the invalid character and |goto restart|'*)           ;
(*\4*)
(*INSERT 'Handle situations involving spaces, braces, changes of state'*)(*PASCAL module 347*)
                                                                          mid_line+spacer:
(*INSERT 'Enter |skip_blanks| state, emit a space'*)(*PASCAL module 349*)
                                                                                           Begin
                                                                                             state := skip_blanks;
                                                                                             cur_chr := ' ';
                                                                                           End

(*FIN INSERT 'Enter |skip_blanks| state, emit a space'*)                  ;
                                                                          mid_line+car_ret:
(*INSERT 'Finish line, emit a space'*)(*PASCAL module 348*)
                                                                                            Begin
                                                                                              loc := limit+1;
                                                                                              cur_cmd := spacer;
                                                                                              cur_chr := ' ';
                                                                                            End

(*FIN INSERT 'Finish line, emit a space'*)                                ;
                                                                          skip_blanks+car_ret,any_state_plus(comment):

(*INSERT 'Finish line, |goto switch|'*)(*PASCAL module 350*)
                                                                                                                       Begin
                                                                                                                         loc := limit+1;
                                                                                                                         goto switch;
                                                                                                                       End

(*FIN INSERT 'Finish line, |goto switch|'*)                               ;
                                                                          new_line+car_ret:
(*INSERT 'Finish line, emit a \.{\\par}'*)(*PASCAL module 351*)
                                                                                            Begin
                                                                                              loc := limit+1;
                                                                                              cur_cs := par_loc;
                                                                                              cur_cmd := eq_type(cur_cs);
                                                                                              cur_chr := equiv(cur_cs);
                                                                                              If cur_cmd>=outer_call Then check_outer_validity;
                                                                                            End

(*FIN INSERT 'Finish line, emit a \.{\\par}'*)                            ;
                                                                          mid_line+left_brace: incr(align_state);
                                                                          skip_blanks+left_brace,new_line+left_brace:
                                                                                                                      Begin
                                                                                                                        state := mid_line;
                                                                                                                        incr(align_state);
                                                                                                                      End;
                                                                          mid_line+right_brace: decr(align_state);
                                                                          skip_blanks+right_brace,new_line+right_brace:
                                                                                                                        Begin
                                                                                                                          state := mid_line;
                                                                                                                          decr(align_state);
                                                                                                                        End;
                                                                          add_delims_to(skip_blanks),add_delims_to(new_line): state := mid_line;

(*FIN INSERT 'Handle situations involving spaces, braces, changes of state'*);
                                                                          othercases do_nothing
                                                                          endcases

(*FIN INSERT 'Change state if necessary, and |goto switch| if the current character should be ignored, or |goto reswitch| if the current character changes to another'*);
                                                                        End
                                                                        Else
                                                                          Begin
                                                                            state := new_line;


(*INSERT 'Move to next line of file, or |goto restart| if there is no next line, or |return| if a \.{\\read} line has finished'*)(*PASCAL module 360*)
                                                                            If name>17 Then
(*INSERT 'Read next line of file into |buffer|, or |goto restart| if the file has ended'*)(*PASCAL module 362*)
                                                                              Begin
                                                                                incr(line);
                                                                                first := start;
                                                                                If Not force_eof Then
                                                                                  Begin
                                                                                    If input_ln(cur_file,true) Then {not end of file}
                                                                                      firm_up_the_line {this sets |limit|}
                                                                                    Else force_eof := true;
                                                                                  End;
                                                                                If force_eof Then
                                                                                  Begin
                                                                                    print_char(')');
                                                                                    decr(open_parens);
                                                                                    update_terminal; {show user that file has been read}
                                                                                    force_eof := false;
                                                                                    end_file_reading; {resume previous level}
                                                                                    check_outer_validity;
                                                                                    goto restart;
                                                                                  End;
                                                                                If end_line_char_inactive Then decr(limit)
                                                                                Else  buffer[limit] := end_line_char;
                                                                                first := limit+1;
                                                                                loc := start; {ready to read}
                                                                              End

(*FIN INSERT 'Read next line of file into |buffer|, or |goto restart| if the file has ended'*)
                                                                            Else
                                                                              Begin
                                                                                If Not terminal_input Then {\.[\\read] line has ended}
                                                                                  Begin
                                                                                    cur_cmd := 0;
                                                                                    cur_chr := 0;
                                                                                    return;
                                                                                  End;
                                                                                If input_ptr>0 Then {text was inserted during error recovery}
                                                                                  Begin
                                                                                    end_file_reading;
                                                                                    goto restart; {resume previous level}
                                                                                  End;
                                                                                If selector<log_only Then open_log_file;
                                                                                If interaction>nonstop_mode Then
                                                                                  Begin
                                                                                    If end_line_char_inactive Then incr(limit);
                                                                                    If limit=start Then {previous line was empty}
                                                                                      print_nl('(Please type a command or say `\end'')');
(*Please type...*)
                                                                                    print_ln;
                                                                                    first := start;
                                                                                    prompt_input('*'); {input on-line into |buffer|}
(**\relax*)
                                                                                    limit := last;
                                                                                    If end_line_char_inactive Then decr(limit)
                                                                                    Else  buffer[limit] := end_line_char;
                                                                                    first := limit+1;
                                                                                    loc := start;
                                                                                  End
                                                                                Else fatal_error('*** (job aborted, no legal \end found)');
(*job aborted*)
    {nonstop mode, which is intended for overnight batch processing, 
    never waits for on-line input}
                                                                              End

(*FIN INSERT 'Move to next line of file, or |goto restart| if there is no next line, or |return| if a \.{\\read} line has finished'*);
                                                                            check_interrupt;
                                                                            goto switch;
                                                                          End;
                                                                      End

(*FIN INSERT 'Input from external file, |goto restart| if no input found'*)
                                                                    Else
(*INSERT 'Input from token list, |goto restart| if end of list or if a parameter needs to be expanded'*)(*PASCAL module 357*)
                                                                      If loc<>null Then {list not exhausted}
(*inner loop*)
                                                                        Begin
                                                                          t := info(loc);
                                                                          loc := link(loc); {move to next}
                                                                          If t>=cs_token_flag Then {a control sequence token}
                                                                            Begin
                                                                              cur_cs := t-cs_token_flag;
                                                                              cur_cmd := eq_type(cur_cs);
                                                                              cur_chr := equiv(cur_cs);
                                                                              If cur_cmd>=outer_call Then
                                                                                If cur_cmd=dont_expand Then

(*INSERT 'Get the next token, suppressing expansion'*)(*PASCAL module 358*)
                                                                                  Begin
                                                                                    cur_cs := info(loc)-cs_token_flag;
                                                                                    loc := null;

                                                                                    cur_cmd := eq_type(cur_cs);
                                                                                    cur_chr := equiv(cur_cs);
                                                                                    If cur_cmd>max_command Then
                                                                                      Begin
                                                                                        cur_cmd := relax;
                                                                                        cur_chr := no_expand_flag;
                                                                                      End;
                                                                                  End

(*FIN INSERT 'Get the next token, suppressing expansion'*)
                                                                              Else check_outer_validity;
                                                                            End
                                                                          Else
                                                                            Begin
                                                                              cur_cmd := t Div 256;
                                                                              cur_chr := t Mod 256;
                                                                              Case cur_cmd Of 
                                                                                left_brace: incr(align_state);
                                                                                right_brace: decr(align_state);
                                                                                out_param:
(*INSERT 'Insert macro parameter and |goto restart|'*)(*PASCAL module 359*)
                                                                                           Begin
                                                                                             begin_token_list(param_stack[param_start+cur_chr-1],parameter);
                                                                                             goto restart;
                                                                                           End

(*FIN INSERT 'Insert macro parameter and |goto restart|'*)                      ;
                                                                                othercases do_nothing
                                                                                endcases;
                                                                              End;
                                                                            End
                                                                          Else
                                                                            Begin {we are done with this token list}
                                                                              end_token_list;
                                                                              goto restart; {resume previous level}
                                                                            End

(*FIN INSERT 'Input from token list, |goto restart| if end of list or if a parameter needs to be expanded'*);

(*INSERT 'If an alignment entry has just ended, take appropriate action'*)(*PASCAL module 342*)
                                                                          If cur_cmd<=car_ret Then If cur_cmd>=tab_mark Then If align_state=0 Then

(*INSERT 'Insert the \(v)\<v_j> template and |goto restart|'*)(*PASCAL module 789*)
                                                                                                                               Begin
                                                                                                                                 If (scanner_status=aligning) Or (cur_align=null) Then
                                                                                                                                   fatal_error('(interwoven alignment preambles are not allowed)');
(*interwoven alignment preambles...*)
                                                                                                                                 cur_cmd := extra_info(cur_align);
                                                                                                                                 extra_info(cur_align) := cur_chr;
                                                                                                                                 If cur_cmd=omit Then begin_token_list(omit_template,v_template)
                                                                                                                                 Else begin_token_list(v_part(cur_align),v_template);
                                                                                                                                 align_state := 1000000;
                                                                                                                                 goto restart;
                                                                                                                               End

(*FIN INSERT 'Insert the \(v)\<v_j> template and |goto restart|'*)

(*FIN INSERT 'If an alignment entry has just ended, take appropriate action'*);
                                                                          exit:
                                                                        End;


(***PASCAL module 363***)
                                                            Procedure firm_up_the_line;

                                                            Var k: 0..buf_size; {an index into |buffer|}
                                                            Begin
                                                              limit := last;
                                                              If pausing>0 Then If interaction>nonstop_mode Then
                                                                                  Begin
                                                                                    wake_up_terminal;
                                                                                    print_ln;
                                                                                    If start<limit Then For k:=start To limit-1 Do
                                                                                                          print(buffer[k]);
                                                                                    first := limit;
                                                                                    prompt_input('=>'); {wait for user response}
(*=>*)
                                                                                    If last>first Then
                                                                                      Begin
                                                                                        For k:=first To last-1 Do {move line down in buffer}
                                                                                          buffer[k+start-first] := buffer[k];
                                                                                        limit := start+last-first;
                                                                                      End;
                                                                                  End;
                                                            End;


(***PASCAL module 365***)
                                                            Procedure get_token; {sets |cur_cmd|, |cur_chr|, |cur_tok|}
                                                            Begin
                                                              no_new_control_sequence := false;
                                                              get_next;
                                                              no_new_control_sequence := true;
(*inner loop*)
                                                              If cur_cs=0 Then cur_tok := (cur_cmd*256)+cur_chr
                                                              Else cur_tok := cs_token_flag+cur_cs;
                                                            End;


(***PASCAL module 366***)
(*\4*)                                                      @<Declare the Procedure called |macro_call|@>;

(*\4*)
(*INSERT 'Declare the procedure called |insert_relax|'*)(*PASCAL module 379*)
                                                            Procedure insert_relax;
                                                            Begin
                                                              cur_tok := cs_token_flag+cur_cs;
                                                              back_input;
                                                              cur_tok := cs_token_flag+frozen_relax;
                                                              back_input;
                                                              token_type := inserted;
                                                            End;

(*FIN INSERT 'Declare the procedure called |insert_relax|'*);

                                                            Procedure pass_text;
                                                            forward;
(*\2*)
                                                            Procedure start_input;
                                                            forward;
(*\2*)
                                                            Procedure conditional;
                                                            forward;
(*\2*)
                                                            Procedure get_x_token;
                                                            forward;
(*\2*)
                                                            Procedure conv_toks;
                                                            forward;
(*\2*)
                                                            Procedure ins_the_toks;
                                                            forward;
(*\2*)
                                                            Procedure expand;

                                                            Var t: halfword; {token that is being ``expanded after''}
                                                              p,q,r: pointer; {for list manipulation}
                                                              j: 0..buf_size; {index into |buffer|}
                                                              cv_backup: integer; {to save the global quantity |cur_val|}
                                                              cvl_backup,radix_backup,co_backup: small_number;
  {to save |cur_val_level|, etc.}
                                                              backup_backup: pointer; {to save |link(backup_head)|}
                                                              save_scanner_status: small_number; {temporary storage of |scanner_status|}
                                                            Begin
                                                              cv_backup := cur_val;
                                                              cvl_backup := cur_val_level;
                                                              radix_backup := radix;
                                                              co_backup := cur_order;
                                                              backup_backup := link(backup_head);
                                                              If cur_cmd<call Then
(*INSERT 'Expand a nonmacro'*)(*PASCAL module 367*)
                                                                Begin
                                                                  If tracing_commands>1 Then show_cur_cmd_chr;
                                                                  Case cur_cmd Of 
                                                                    top_bot_mark:
(*INSERT 'Insert the \(a)appropriate mark text into the scanner'*)(*PASCAL module 386*)
                                                                                  Begin
                                                                                    If cur_mark[cur_chr]<>null Then
                                                                                      begin_token_list(cur_mark[cur_chr],mark_text);
                                                                                  End

(*FIN INSERT 'Insert the \(a)appropriate mark text into the scanner'*);
                                                                    expand_after:
(*INSERT 'Expand the token after the next token'*)(*PASCAL module 368*)
                                                                                  Begin
                                                                                    get_token;
                                                                                    t := cur_tok;
                                                                                    get_token;
                                                                                    If cur_cmd>max_command Then expandelse back_input;
                                                                                    cur_tok := t;
                                                                                    back_input;
                                                                                  End

(*FIN INSERT 'Expand the token after the next token'*)              ;
                                                                    no_expand:
(*INSERT 'Suppress expansion of the next token'*)(*PASCAL module 369*)
                                                                               Begin
                                                                                 save_scanner_status := scanner_status;
                                                                                 scanner_status := normal;
                                                                                 get_token;
                                                                                 scanner_status := save_scanner_status;
                                                                                 t := cur_tok;
                                                                                 back_input; {now |start| and |loc| point to the backed-up token |t|}
                                                                                 If t>=cs_token_flag Then
                                                                                   Begin
                                                                                     p := get_avail;
                                                                                     info(p) := cs_token_flag+frozen_dont_expand;
                                                                                     link(p) := loc;
                                                                                     start := p;
                                                                                     loc := p;
                                                                                   End;
                                                                               End

(*FIN INSERT 'Suppress expansion of the next token'*)               ;
                                                                    cs_name:
(*INSERT 'Manufacture a control sequence name'*)(*PASCAL module 372*)
                                                                             Begin
                                                                               r := get_avail;
                                                                               p := r; {head of the list of characters}
                                                                               Repeat
                                                                                 get_x_token;
                                                                                 If cur_cs=0 Then store_new_token(cur_tok);
                                                                               Until cur_cs<>0;
                                                                               If cur_cmd<>end_cs_name Then
(*INSERT 'Complain about missing \.{\\endcsname}'*)(*PASCAL module 373*)
                                                                                 Begin
                                                                                   print_err('Missing ');
                                                                                   print_esc('endcsname');
                                                                                   print(' inserted');
(*Missing \\endcsname...*)
                                                                                   help2('The control sequence marked <to be read again> should')

                                                                                   ('not appear between \csname and \endcsname.');
                                                                                   back_error;
                                                                                 End

(*FIN INSERT 'Complain about missing \.{\\endcsname}'*)                        ;

(*INSERT 'Look up the characters of list |r| in the hash table, and set |cur_cs|'*)(*PASCAL module 374*)
                                                                               j := first;
                                                                               p := link(r);
                                                                               While p<>null Do
                                                                                 Begin
                                                                                   If j>=max_buf_stack Then
                                                                                     Begin
                                                                                       max_buf_stack := j+1;
                                                                                       If max_buf_stack=buf_size Then
                                                                                         overflow('buffer size',buf_size);
(*TeX capacity exceeded buffer size][\quad buffer size*)
                                                                                     End;
                                                                                   buffer[j] := info(p) Mod 256;
                                                                                   incr(j);
                                                                                   p := link(p);
                                                                                 End;
                                                                               If j>first+1 Then
                                                                                 Begin
                                                                                   no_new_control_sequence := false;
                                                                                   cur_cs := id_lookup(first,j-first);
                                                                                   no_new_control_sequence := true;
                                                                                 End
                                                                               Else If j=first Then cur_cs := null_cs {the list is empty}
                                                                               Else cur_cs := single_base+buffer[first] {the list has length one}

(*FIN INSERT 'Look up the characters of list |r| in the hash table, and set |cur_cs|'*);
                                                                               flush_list(r);
                                                                               If eq_type(cur_cs)=undefined_cs Then
                                                                                 Begin
                                                                                   eq_define(cur_cs,relax,256); {N.B.: The |save_stack| might change}
                                                                                 End; {the control sequence will now match `\.[\\relax]'}
                                                                               cur_tok := cur_cs+cs_token_flag;
                                                                               back_input;
                                                                             End

(*FIN INSERT 'Manufacture a control sequence name'*)                ;
                                                                    convert: conv_toks; {this procedure is discussed in Part 27 below}
                                                                    the: ins_the_toks; {this procedure is discussed in Part 27 below}
                                                                    if_test: conditional; {this procedure is discussed in Part 28 below}
                                                                    fi_or_else:
(*INSERT 'Terminate the current conditional and skip to \.{\\fi}'*)(*PASCAL module 510*)
                                                                                If cur_chr>if_limit Then
                                                                                  If if_limit=if_code Then insert_relax {condition not yet evaluated}
                                                                                Else
                                                                                  Begin
                                                                                    print_err('Extra ');
                                                                                    print_cmd_chr(fi_or_else,cur_chr);
(*Extra \\or*)
(*Extra \\else*)
(*Extra \\fi*)
                                                                                    help1('I''m ignoring this; it doesn''t match any \if.');
                                                                                    error;
                                                                                  End
                                                                                Else
                                                                                  Begin
                                                                                    While cur_chr<>fi_code Do
                                                                                      pass_text; {skip to \.[\\fi]}

(*INSERT 'Pop the condition stack'*)(*PASCAL module 496*)
                                                                                    Begin
                                                                                      p := cond_ptr;
                                                                                      if_line := if_line_field(p);
                                                                                      cur_if := subtype(p);
                                                                                      if_limit := Type(p);
                                                                                      cond_ptr := link(p);
                                                                                      free_node(p,if_node_size);
                                                                                    End

(*FIN INSERT 'Pop the condition stack'*)                                            ;
                                                                                  End

(*FIN INSERT 'Terminate the current conditional and skip to \.{\\fi}'*);
                                                                    input:
(*INSERT 'Initiate or terminate input from a file'*)(*PASCAL module 378*)
                                                                           If cur_chr>0 Then force_eof := true
                                                                           Else If name_in_progress Then insert_relax
                                                                           Else start_input

(*FIN INSERT 'Initiate or terminate input from a file'*)            ;
                                                                    othercases
(*INSERT 'Complain about an undefined macro'*)(*PASCAL module 370*)
                                                                    Begin
                                                                      print_err('Undefined control sequence');
(*Undefined control sequence*)
                                                                      help5('The control sequence at the end of the top line')

                                                                      ('of your error message was never \def''ed. If you have')

                                                                      ('misspelled it (e.g., `\hobx''), type `I'' and the correct')

                                                                      ('spelling (e.g., `I\hbox''). Otherwise just continue,')

                                                                      ('and I''ll forget about whatever was undefined.');
                                                                      error;
                                                                    End

(*FIN INSERT 'Complain about an undefined macro'*)
                                                                    endcases;
                                                                  End

(*FIN INSERT 'Expand a nonmacro'*)
                                                                  Else If cur_cmd<end_template Then macro_call
                                                                  Else
(*INSERT 'Insert a token containing |frozen_endv|'*)(*PASCAL module 375*)
                                                                    Begin
                                                                      cur_tok := cs_token_flag+frozen_endv;
                                                                      back_input;
                                                                    End

(*FIN INSERT 'Insert a token containing |frozen_endv|'*)          ;
                                                                  cur_val := cv_backup;
                                                                  cur_val_level := cvl_backup;
                                                                  radix := radix_backup;
                                                                  cur_order := co_backup;
                                                                  link(backup_head) := backup_backup;
                                                                End;


(***PASCAL module 380***)
                                                              Procedure get_x_token; {sets |cur_cmd|, |cur_chr|, |cur_tok|, 
  and expands macros}

                                                              Label restart,done;
                                                              Begin
                                                                restart: get_next;
(*inner loop*)
                                                                If cur_cmd<=max_command Then goto done;
                                                                If cur_cmd>=call Then
                                                                  If cur_cmd<end_template Then macro_call
                                                                Else
                                                                  Begin
                                                                    cur_cs := frozen_endv;
                                                                    cur_cmd := endv;
                                                                    goto done; {|cur_chr=null_list|}
                                                                  End
                                                                Else expand;
                                                                goto restart;
                                                                done: If cur_cs=0 Then cur_tok := (cur_cmd*256)+cur_chr
                                                                      Else cur_tok := cs_token_flag+cur_cs;
                                                              End;


(***PASCAL module 381***)
                                                              Procedure x_token; {|get_x_token| without the initial |get_next|}
                                                              Begin
                                                                While cur_cmd>max_command Do
                                                                  Begin
                                                                    expand;
                                                                    get_next;
                                                                  End;
                                                                If cur_cs=0 Then cur_tok := (cur_cmd*256)+cur_chr
                                                                Else cur_tok := cs_token_flag+cur_cs;
                                                              End;


(***PASCAL module 403***)
                                                              Procedure scan_left_brace; {reads a mandatory |left_brace|}
                                                              Begin
(*INSERT 'Get the next non-blank non-relax non-call token'*)(*PASCAL module 404*)
                                                                Repeat
                                                                  get_x_token;
                                                                Until (cur_cmd<>spacer)And(cur_cmd<>relax)

(*FIN INSERT 'Get the next non-blank non-relax non-call token'*);
                                                                If cur_cmd<>left_brace Then
                                                                  Begin
                                                                    print_err('Missing { inserted');
(*Missing \[
inserted*)
                                                                    help4('A left brace was mandatory here, so I''ve put one in.')

                                                                    ('You might want to delete and/or insert some corrections')

                                                                    ('so that I will find a matching right brace soon.')

                                                                    ('(If you''re confused by all this, try typing `I}'' now.)');
                                                                    back_error;
                                                                    cur_tok := left_brace_token+'{';
                                                                    cur_cmd := left_brace;
                                                                    cur_chr := '{';
                                                                    incr(align_state);
                                                                  End;
                                                              End;


(***PASCAL module 405***)
                                                              Procedure scan_optional_equals;
                                                              Begin
(*INSERT 'Get the next non-blank non-call token'*)(*PASCAL module 406*)
                                                                Repeat
                                                                  get_x_token;
                                                                Until cur_cmd<>spacer

(*FIN INSERT 'Get the next non-blank non-call token'*)          ;
                                                                If cur_tok<>other_token+'=' Then back_input;
                                                              End;


(***PASCAL module 407***)
                                                              Function scan_keyword(s:str_number): boolean; {look for a given string}

                                                              Label exit;

                                                              Var p: pointer; {tail of the backup list}
                                                                q: pointer; {new node being added to the token list via |store_new_token|}
                                                                k: pool_pointer; {index into |str_pool|}
                                                              Begin
                                                                p := backup_head;
                                                                link(p) := null;
                                                                k := str_start[s];
                                                                While k<str_start[s+1] Do
                                                                  Begin
                                                                    get_x_token; {recursion is possible here}
(*recursion*)
                                                                    If (cur_cs=0)And
                                                                       ((cur_chr=so(str_pool[k]))Or(cur_chr=so(str_pool[k])-'a'+'A')) Then
                                                                      Begin
                                                                        store_new_token(cur_tok);
                                                                        incr(k);
                                                                      End
                                                                    Else If (cur_cmd<>spacer)Or(p<>backup_head) Then
                                                                           Begin
                                                                             back_input;
                                                                             If p<>backup_head Then back_list(link(backup_head));
                                                                             scan_keyword := false;
                                                                             return;
                                                                           End;
                                                                  End;
                                                                flush_list(link(backup_head));
                                                                scan_keyword := true;
                                                                exit:
                                                              End;


(***PASCAL module 408***)
                                                              Procedure mu_error;
                                                              Begin
                                                                print_err('Incompatible glue units');
(*Incompatible glue units*)
                                                                help1('I''m going to assume that 1mu=1pt when they''re mixed.');
                                                                error;
                                                              End;


(***PASCAL module 409***)
                                                              Procedure scan_int;
                                                              forward; {scans an integer value}
(*\4\4*)
(*INSERT 'Declare procedures that scan restricted classes of integers'*)(*PASCAL module 433*)
                                                              Procedure scan_eight_bit_int;
                                                              Begin
                                                                scan_int;
                                                                If (cur_val<0)Or(cur_val>255) Then
                                                                  Begin
                                                                    print_err('Bad register code');
(*Bad register code*)
                                                                    help2('A register number must be between 0 and 255.')

                                                                    ('I changed this one to zero.');
                                                                    int_error(cur_val);
                                                                    cur_val := 0;
                                                                  End;
                                                              End;

(*PASCAL module 434*)
                                                              Procedure scan_char_num;
                                                              Begin
                                                                scan_int;
                                                                If (cur_val<0)Or(cur_val>255) Then
                                                                  Begin
                                                                    print_err('Bad character code');
(*Bad character code*)
                                                                    help2('A character number must be between 0 and 255.')

                                                                    ('I changed this one to zero.');
                                                                    int_error(cur_val);
                                                                    cur_val := 0;
                                                                  End;
                                                              End;

(*PASCAL module 435*)
                                                              Procedure scan_four_bit_int;
                                                              Begin
                                                                scan_int;
                                                                If (cur_val<0)Or(cur_val>15) Then
                                                                  Begin
                                                                    print_err('Bad number');
(*Bad number*)
                                                                    help2('Since I expected to read a number between 0 and 15,')

                                                                    ('I changed this one to zero.');
                                                                    int_error(cur_val);
                                                                    cur_val := 0;
                                                                  End;
                                                              End;

(*PASCAL module 436*)
                                                              Procedure scan_fifteen_bit_int;
                                                              Begin
                                                                scan_int;
                                                                If (cur_val<0)Or(cur_val>32767) Then
                                                                  Begin
                                                                    print_err('Bad mathchar');
(*Bad mathchar*)
                                                                    help2('A mathchar number must be between 0 and 32767.')

                                                                    ('I changed this one to zero.');
                                                                    int_error(cur_val);
                                                                    cur_val := 0;
                                                                  End;
                                                              End;

(*PASCAL module 437*)
                                                              Procedure scan_twenty_seven_bit_int;
                                                              Begin
                                                                scan_int;
                                                                If (cur_val<0)Or(cur_val>134217727) Then
                                                                  Begin
                                                                    print_err('Bad delimiter code');
(*Bad delimiter code*)
                                                                    help2('A numeric delimiter code must be between 0 and 2^{27}-1.')

                                                                    ('I changed this one to zero.');
                                                                    int_error(cur_val);
                                                                    cur_val := 0;
                                                                  End;
                                                              End;

(*FIN INSERT 'Declare procedures that scan restricted classes of integers'*);
(*\4\4*)
(*INSERT 'Declare procedures that scan font-related stuff'*)(*PASCAL module 577*)
                                                              Procedure scan_font_ident;

                                                              Var f: internal_font_number;
                                                                m: halfword;
                                                              Begin
(*INSERT 'Get the next non-blank non-call token'*)(*PASCAL module 406*)
                                                                Repeat
                                                                  get_x_token;
                                                                Until cur_cmd<>spacer

(*FIN INSERT 'Get the next non-blank non-call token'*)          ;
                                                                If cur_cmd=def_font Then f := cur_font
                                                                Else If cur_cmd=set_font Then f := cur_chr
                                                                Else If cur_cmd=def_family Then
                                                                       Begin
                                                                         m := cur_chr;
                                                                         scan_four_bit_int;
                                                                         f := equiv(m+cur_val);
                                                                       End
                                                                Else
                                                                  Begin
                                                                    print_err('Missing font identifier');
(*Missing font identifier*)
                                                                    help2('I was looking for a control sequence whose')

                                                                    ('current meaning has been defined by \font.');
                                                                    back_error;
                                                                    f := null_font;
                                                                  End;
                                                                cur_val := f;
                                                              End;

(*PASCAL module 578*)
                                                              Procedure find_font_dimen(writing:boolean);
  {sets |cur_val| to |font_info| location}

                                                              Var f: internal_font_number;
                                                                n: integer; {the parameter number}
                                                              Begin
                                                                scan_int;
                                                                n := cur_val;
                                                                scan_font_ident;
                                                                f := cur_val;
                                                                If n<=0 Then cur_val := fmem_ptr
                                                                Else
                                                                  Begin
                                                                    If writing And(n<=space_shrink_code)And
                                                                       (n>=space_code)And(font_glue[f]<>null) Then
                                                                      Begin
                                                                        delete_glue_ref(font_glue[f]);
                                                                        font_glue[f] := null;
                                                                      End;
                                                                    If n>font_params[f] Then
                                                                      If f<font_ptr Then cur_val := fmem_ptr
                                                                    Else
(*INSERT 'Increase the number of parameters in the last font'*)(*PASCAL module 580*)
                                                                      Begin
                                                                        Repeat
                                                                          If fmem_ptr=font_mem_size Then
                                                                            overflow('font memory',font_mem_size);
(*TeX capacity exceeded font memory][\quad font memory*)
                                                                          font_info[fmem_ptr].sc := 0;
                                                                          incr(fmem_ptr);
                                                                          incr(font_params[f]);
                                                                        Until n=font_params[f];
                                                                        cur_val := fmem_ptr-1; {this equals |param_base[f]+font_params[f]|}
                                                                      End

(*FIN INSERT 'Increase the number of parameters in the last font'*)
                                                                    Else cur_val := n+param_base[f];
                                                                  End;

(*INSERT 'Issue an error message if |cur_val=fmem_ptr|'*)(*PASCAL module 579*)
                                                                If cur_val=fmem_ptr Then
                                                                  Begin
                                                                    print_err('Font ');
                                                                    print_esc(font_id_text(f));
                                                                    print(' has only ');
                                                                    print_int(font_params[f]);
                                                                    print(' fontdimen parameters');
(*Font x has only...*)
                                                                    help2('To increase the number of font parameters, you must')

                                                                    ('use \fontdimen immediately after the \font is loaded.');
                                                                    error;
                                                                  End

(*FIN INSERT 'Issue an error message if |cur_val=fmem_ptr|'*)   ;
                                                              End;

(*FIN INSERT 'Declare procedures that scan font-related stuff'*)


(***PASCAL module 413***)
                                                              Procedure scan_something_internal(level:small_number;negative:boolean);
  {fetch an internal parameter}

                                                              Var m: halfword; {|chr_code| part of the operand token}
                                                                p: 0..nest_size; {index into |nest|}
                                                              Begin
                                                                m := cur_chr;
                                                                Case cur_cmd Of 
                                                                  def_code:
(*INSERT 'Fetch a character code from some table'*)(*PASCAL module 414*)
                                                                            Begin
                                                                              scan_char_num;
                                                                              If m=math_code_base Then scanned_result(ho(math_code(cur_val)))(int_val)
                                                                              Else If m<math_code_base Then scanned_result(equiv(m+cur_val))(int_val)
                                                                              Else scanned_result(eqtb[m+cur_val].int)(int_val);
                                                                            End

(*FIN INSERT 'Fetch a character code from some table'*)           ;
                                                                  toks_register,assign_toks,def_family,set_font,def_font:
(*INSERT 'Fetch a token list or font identifier, provided that |level=tok_val|'*)(*PASCAL module 415*)
                                                                                                                          If level<>tok_val Then
                                                                                                                            Begin
                                                                                                                              print_err('Missing number, treated as zero');
(*Missing number...*)
                                                                                                                              help3('A number should have been here; I inserted `0''.')

                                                                                                                              ('(If you can''t figure out why I needed to see a number,')

                                                                                                                              ('look up `weird error'' in the index to The TeXbook.)');
(*TeXbook][\sl The \TeX book*)
                                                                                                                              back_error;
                                                                                                                              scanned_result(0)(dimen_val);
                                                                                                                            End
                                                                                                                          Else If cur_cmd<=assign_toks Then
                                                                                                                                 Begin
                                                                                                                                   If cur_cmd<assign_toks Then {|cur_cmd=toks_register|}
                                                                                                                                     Begin
                                                                                                                                       scan_eight_bit_int;
                                                                                                                                       m := toks_base+cur_val;
                                                                                                                                     End;
                                                                                                                                   scanned_result(equiv(m))(tok_val);
                                                                                                                                 End
                                                                                                                          Else
                                                                                                                            Begin
                                                                                                                              back_input;
                                                                                                                              scan_font_ident;
                                                                                                                              scanned_result(font_id_base+cur_val)(ident_val);
                                                                                                                            End

(*FIN INSERT 'Fetch a token list or font identifier, provided that |level=tok_val|'*);
                                                                  assign_int: scanned_result(eqtb[m].int)(int_val);
                                                                  assign_dimen: scanned_result(eqtb[m].sc)(dimen_val);
                                                                  assign_glue: scanned_result(equiv(m))(glue_val);
                                                                  assign_mu_glue: scanned_result(equiv(m))(mu_val);
                                                                  set_aux:
(*INSERT 'Fetch the |space_factor| or the |prev_depth|'*)(*PASCAL module 418*)
                                                                           If abs(mode)<>m Then
                                                                             Begin
                                                                               print_err('Improper ');
                                                                               print_cmd_chr(set_aux,m);
(*Improper \\spacefactor*)
(*Improper \\prevdepth*)
                                                                               help4('You can refer to \spacefactor only in horizontal mode;')

                                                                               ('you can refer to \prevdepth only in vertical mode; and')

                                                                               ('neither of these is meaningful inside \write. So')

                                                                               ('I''m forgetting what you said and using zero instead.');
                                                                               error;
                                                                               If level<>tok_val Then scanned_result(0)(dimen_val)
                                                                               Else scanned_result(0)(int_val);
                                                                             End
                                                                           Else If m=vmode Then scanned_result(prev_depth)(dimen_val)
                                                                           Else scanned_result(space_factor)(int_val)

(*FIN INSERT 'Fetch the |space_factor| or the |prev_depth|'*)     ;
                                                                  set_prev_graf:
(*INSERT 'Fetch the |prev_graf|'*)(*PASCAL module 422*)
                                                                                 If mode=0 Then scanned_result(0)(int_val) {|prev_graf=0| within \.[\\write]}
                                                                                 Else
                                                                                   Begin
                                                                                     nest[nest_ptr] := cur_list;
                                                                                     p := nest_ptr;
                                                                                     While abs(nest[p].mode_field)<>vmode Do
                                                                                       decr(p);
                                                                                     scanned_result(nest[p].pg_field)(int_val);
                                                                                   End

(*FIN INSERT 'Fetch the |prev_graf|'*)                            ;
                                                                  set_page_int:
(*INSERT 'Fetch the |dead_cycles| or the |insert_penalties|'*)(*PASCAL module 419*)
                                                                                Begin
                                                                                  If m=0 Then cur_val := dead_cycleselse cur_val:=insert_penalties;
                                                                                  cur_val_level := int_val;
                                                                                End

(*FIN INSERT 'Fetch the |dead_cycles| or the |insert_penalties|'*);
                                                                  set_page_dimen:
(*INSERT 'Fetch something on the |page_so_far|'*)(*PASCAL module 421*)
                                                                                  Begin
                                                                                    If (page_contents=empty) And (Not output_active) Then
                                                                                      If m=0 Then cur_val := max_dimenelse cur_val:=0
                                                                                    Else cur_val := page_so_far[m];
                                                                                    cur_val_level := dimen_val;
                                                                                  End

(*FIN INSERT 'Fetch something on the |page_so_far|'*)             ;
                                                                  set_shape:
(*INSERT 'Fetch the |par_shape| size'*)(*PASCAL module 423*)
                                                                             Begin
                                                                               If par_shape_ptr=null Then cur_val := 0
                                                                               Else cur_val := info(par_shape_ptr);
                                                                               cur_val_level := int_val;
                                                                             End

(*FIN INSERT 'Fetch the |par_shape| size'*)                       ;
                                                                  set_box_dimen:
(*INSERT 'Fetch a box dimension'*)(*PASCAL module 420*)
                                                                                 Begin
                                                                                   scan_eight_bit_int;
                                                                                   If box(cur_val)=null Then cur_val := 0
                                                                                   Else cur_val := mem[box(cur_val)+m].sc;
                                                                                   cur_val_level := dimen_val;
                                                                                 End

(*FIN INSERT 'Fetch a box dimension'*)                            ;
                                                                  char_given,math_given: scanned_result(cur_chr)(int_val);
                                                                  assign_font_dimen:
(*INSERT 'Fetch a font dimension'*)(*PASCAL module 425*)
                                                                                     Begin
                                                                                       find_font_dimen(false);
                                                                                       font_info[fmem_ptr].sc := 0;
                                                                                       scanned_result(font_info[cur_val].sc)(dimen_val);
                                                                                     End

(*FIN INSERT 'Fetch a font dimension'*)                           ;
                                                                  assign_font_int:
(*INSERT 'Fetch a font integer'*)(*PASCAL module 426*)
                                                                                   Begin
                                                                                     scan_font_ident;
                                                                                     If m=0 Then scanned_result(hyphen_char[cur_val])(int_val)
                                                                                     Else scanned_result(skew_char[cur_val])(int_val);
                                                                                   End

(*FIN INSERT 'Fetch a font integer'*)                             ;
                                                                  register:
(*INSERT 'Fetch a register'*)(*PASCAL module 427*)
                                                                            Begin
                                                                              scan_eight_bit_int;
                                                                              Case m Of 
                                                                                int_val: cur_val := count(cur_val);
                                                                                dimen_val: cur_val := dimen(cur_val);
                                                                                glue_val: cur_val := skip(cur_val);
                                                                                mu_val: cur_val := mu_skip(cur_val);
                                                                              End; {there are no other cases}
                                                                              cur_val_level := m;
                                                                            End

(*FIN INSERT 'Fetch a register'*)                                 ;
                                                                  last_item:
(*INSERT 'Fetch an item in the current node, if appropriate'*)(*PASCAL module 424*)
                                                                             If cur_chr>glue_val Then
                                                                               Begin
                                                                                 If cur_chr=input_line_no_code Then cur_val := line
                                                                                 Else cur_val := last_badness; {|cur_chr=badness_code|}
                                                                                 cur_val_level := int_val;
                                                                               End
                                                                             Else
                                                                               Begin
                                                                                 If cur_chr=glue_val Then cur_val := zero_glueelse cur_val:=0;
                                                                                 cur_val_level := cur_chr;
                                                                                 If Not is_char_node(tail)And(mode<>0) Then
                                                                                   Case cur_chr Of 
                                                                                     int_val: If Type(tail)=penalty_node Then cur_val := penalty(tail);
                                                                                     dimen_val: If Type(tail)=kern_node Then cur_val := width(tail);
                                                                                     glue_val: If Type(tail)=glue_node Then
                                                                                                 Begin
                                                                                                   cur_val := glue_ptr(tail);
                                                                                                   If subtype(tail)=mu_glue Then cur_val_level := mu_val;
                                                                                                 End;
                                                                                   End {there are no other cases}
                                                                                 Else If (mode=vmode)And(tail=head) Then
                                                                                        Case cur_chr Of 
                                                                                          int_val: cur_val := last_penalty;
                                                                                          dimen_val: cur_val := last_kern;
                                                                                          glue_val: If last_glue<>max_halfword Then cur_val := last_glue;
                                                                                        End; {there are no other cases}
                                                                               End

(*FIN INSERT 'Fetch an item in the current node, if appropriate'*);
                                                                  othercases
(*INSERT 'Complain that \.{\\the} can''t do this; give zero result'*)(*PASCAL module 428*)
                                                                  Begin
                                                                    print_err('You can''t use `');
                                                                    print_cmd_chr(cur_cmd,cur_chr);
(*You can''t use x after ...*)
                                                                    print(''' after ');
                                                                    print_esc('the');
                                                                    help1('I''m forgetting what you said and using zero instead.');
                                                                    error;
                                                                    If level<>tok_val Then scanned_result(0)(dimen_val)
                                                                    Else scanned_result(0)(int_val);
                                                                  End

(*FIN INSERT 'Complain that \.{\\the} can''t do this; give zero result'*)
                                                                  endcases;

                                                                  While cur_val_level>level Do
(*INSERT 'Convert \(c)|cur_val| to a lower level'*)(*PASCAL module 429*)
                                                                    Begin
                                                                      If cur_val_level=glue_val Then cur_val := width(cur_val)
                                                                      Else If cur_val_level=mu_val Then mu_error;
                                                                      decr(cur_val_level);
                                                                    End

(*FIN INSERT 'Convert \(c)|cur_val| to a lower level'*)           ;

(*INSERT 'Fix the reference count, if any, and negate |cur_val| if |negative|'*)(*PASCAL module 430*)
                                                                  If negative Then
                                                                    If cur_val_level>=glue_val Then
                                                                      Begin
                                                                        cur_val := new_spec(cur_val);

(*INSERT 'Negate all three glue components of |cur_val|'*)(*PASCAL module 431*)
                                                                        Begin
                                                                          negate(width(cur_val));
                                                                          negate(stretch(cur_val));
                                                                          negate(shrink(cur_val));
                                                                        End

(*FIN INSERT 'Negate all three glue components of |cur_val|'*)          ;
                                                                      End
                                                                  Else negate(cur_val)
                                                                  Else If (cur_val_level>=glue_val)And(cur_val_level<=mu_val) Then
                                                                         add_glue_ref(cur_val)

(*FIN INSERT 'Fix the reference count, if any, and negate |cur_val| if |negative|'*);
                                                                End;


(***PASCAL module 440***)
                                                                Procedure scan_int; {sets |cur_val| to an integer}

                                                                Label done;

                                                                Var negative: boolean; {should the answer be negated?}
                                                                  m: integer; {|(*$2^[31]$*) div radix|, the threshold of danger}
                                                                  d: small_number; {the digit just scanned}
                                                                  vacuous: boolean; {have no digits appeared?}
                                                                  OK_so_far: boolean; {has an error message been issued?}
                                                                Begin
                                                                  radix := 0;
                                                                  OK_so_far := true;


(*INSERT 'Get the next non-blank non-sign token; set |negative| appropriately'*)(*PASCAL module 441*)
                                                                  negative := false;
                                                                  Repeat
(*INSERT 'Get the next non-blank non-call token'*)(*PASCAL module 406*)
                                                                    Repeat
                                                                      get_x_token;
                                                                    Until cur_cmd<>spacer

(*FIN INSERT 'Get the next non-blank non-call token'*)              ;
                                                                    If cur_tok=other_token+'-' Then
                                                                      Begin
                                                                        negative := Not negative;
                                                                        cur_tok := other_token+'+';
                                                                      End;
                                                                  Until cur_tok<>other_token+'+'

(*FIN INSERT 'Get the next non-blank non-sign token; set |negative| appropriately'*);
                                                                  If cur_tok=alpha_token Then
(*INSERT 'Scan an alphabetic character code into |cur_val|'*)(*PASCAL module 442*)
                                                                    Begin
                                                                      get_token; {suppress macro expansion}
                                                                      If cur_tok<cs_token_flag Then
                                                                        Begin
                                                                          cur_val := cur_chr;
                                                                          If cur_cmd<=right_brace Then
                                                                            If cur_cmd=right_brace Then incr(align_state)
                                                                          Else decr(align_state);
                                                                        End
                                                                      Else If cur_tok<cs_token_flag+single_base Then
                                                                             cur_val := cur_tok-cs_token_flag-active_base
                                                                      Else cur_val := cur_tok-cs_token_flag-single_base;
                                                                      If cur_val>255 Then
                                                                        Begin
                                                                          print_err('Improper alphabetic constant');
(*Improper alphabetic constant*)
                                                                          help2('A one-character control sequence belongs after a ` mark.')

                                                                          ('So I''m essentially inserting \0 here.');
                                                                          cur_val := '0';
                                                                          back_error;
                                                                        End
                                                                      Else
(*INSERT 'Scan an optional space'*)(*PASCAL module 443*)
                                                                        Begin
                                                                          get_x_token;
                                                                          If cur_cmd<>spacer Then back_input;
                                                                        End

(*FIN INSERT 'Scan an optional space'*)                               ;
                                                                    End

(*FIN INSERT 'Scan an alphabetic character code into |cur_val|'*)
                                                                  Else If (cur_cmd>=min_internal)And(cur_cmd<=max_internal) Then
                                                                         scan_something_internal(int_val,false)
                                                                  Else
(*INSERT 'Scan a numeric constant'*)(*PASCAL module 444*)
                                                                    Begin
                                                                      radix := 10;
                                                                      m := 214748364;
                                                                      If cur_tok=octal_token Then
                                                                        Begin
                                                                          radix := 8;
                                                                          m := 268435456;
                                                                          get_x_token;
                                                                        End
                                                                      Else If cur_tok=hex_token Then
                                                                             Begin
                                                                               radix := 16;
                                                                               m := 134217728;
                                                                               get_x_token;
                                                                             End;
                                                                      vacuous := true;
                                                                      cur_val := 0;


(*INSERT 'Accumulate the constant until |cur_tok| is not a suitable digit'*)(*PASCAL module 445*)
                                                                      loop
                                                                      Begin
                                                                        If (cur_tok<zero_token+radix)And(cur_tok>=zero_token)And
                                                                           (cur_tok<=zero_token+9) Then d := cur_tok-zero_token
                                                                        Else If radix=16 Then
                                                                               If (cur_tok<=A_token+5)And(cur_tok>=A_token) Then d := cur_tok-A_token+10
                                                                        Else If (cur_tok<=other_A_token+5)And(cur_tok>=other_A_token) Then
                                                                               d := cur_tok-other_A_token+10
                                                                        Else goto done
                                                                        Else goto done;
                                                                        vacuous := false;
                                                                        If (cur_val>=m)And((cur_val>m)Or(d>7)Or(radix<>10)) Then
                                                                          Begin
                                                                            If OK_so_far Then
                                                                              Begin
                                                                                print_err('Number too big');
(*Number too big*)
                                                                                help2('I can only go up to 2147483647=''17777777777=''7FFFFFFF,')

                                                                                ('so I''m using that number instead of yours.');
                                                                                error;
                                                                                cur_val := infinity;
                                                                                OK_so_far := false;
                                                                              End;
                                                                          End
                                                                        Else cur_val := cur_val*radix+d;
                                                                        get_x_token;
                                                                      End;
                                                                      done:

(*FIN INSERT 'Accumulate the constant until |cur_tok| is not a suitable digit'*);
                                                                      If vacuous Then
(*INSERT 'Express astonishment that no number was here'*)(*PASCAL module 446*)
                                                                        Begin
                                                                          print_err('Missing number, treated as zero');
(*Missing number...*)
                                                                          help3('A number should have been here; I inserted `0''.')

                                                                          ('(If you can''t figure out why I needed to see a number,')

                                                                          ('look up `weird error'' in the index to The TeXbook.)');
(*TeXbook][\sl The \TeX book*)
                                                                          back_error;
                                                                        End

(*FIN INSERT 'Express astonishment that no number was here'*)
                                                                      Else If cur_cmd<>spacer Then back_input;
                                                                    End

(*FIN INSERT 'Scan a numeric constant'*)                          ;
                                                                  If negative Then negate(cur_val);
                                                                End;


(***PASCAL module 448***)
                                                                Procedure scan_dimen(mu,inf,shortcut:boolean);
  {sets |cur_val| to a dimension}

                                                                Label done, done1, done2, found, not_found, attach_fraction, attach_sign;

                                                                Var negative: boolean; {should the answer be negated?}
                                                                  f: integer; {numerator of a fraction whose denominator is $2^[16]$}

(*INSERT 'Local variables for dimension calculations'*)(*PASCAL module 450*)
                                                                  num,denom: 1..65536; {conversion ratio for the scanned units}
                                                                  k,kk: small_number; {number of digits in a decimal fraction}
                                                                  p,q: pointer; {top of decimal digit stack}
                                                                  v: scaled; {an internal dimension}
                                                                  save_cur_val: integer; {temporary storage of |cur_val|}

(*FIN INSERT 'Local variables for dimension calculations'*)       ;
                                                                Begin
                                                                  f := 0;
                                                                  arith_error := false;
                                                                  cur_order := normal;
                                                                  negative := false;
                                                                  If Not shortcut Then
                                                                    Begin
(*INSERT 'Get the next non-blank non-sign token; set |negative| appropriately'*)(*PASCAL module 441*)
                                                                      negative := false;
                                                                      Repeat
(*INSERT 'Get the next non-blank non-call token'*)(*PASCAL module 406*)
                                                                        Repeat
                                                                          get_x_token;
                                                                        Until cur_cmd<>spacer

(*FIN INSERT 'Get the next non-blank non-call token'*)                  ;
                                                                        If cur_tok=other_token+'-' Then
                                                                          Begin
                                                                            negative := Not negative;
                                                                            cur_tok := other_token+'+';
                                                                          End;
                                                                      Until cur_tok<>other_token+'+'

(*FIN INSERT 'Get the next non-blank non-sign token; set |negative| appropriately'*);
                                                                      If (cur_cmd>=min_internal)And(cur_cmd<=max_internal) Then

(*INSERT 'Fetch an internal dimension and |goto attach_sign|, or fetch an internal integer'*)(*PASCAL module 449*)
                                                                        If mu Then
                                                                          Begin
                                                                            scan_something_internal(mu_val,false);

(*INSERT 'Coerce glue to a dimension'*)(*PASCAL module 451*)
                                                                            If cur_val_level>=glue_val Then
                                                                              Begin
                                                                                v := width(cur_val);
                                                                                delete_glue_ref(cur_val);
                                                                                cur_val := v;
                                                                              End

(*FIN INSERT 'Coerce glue to a dimension'*)                                 ;
                                                                            If cur_val_level=mu_val Then goto attach_sign;
                                                                            If cur_val_level<>int_val Then mu_error;
                                                                          End
                                                                      Else
                                                                        Begin
                                                                          scan_something_internal(dimen_val,false);
                                                                          If cur_val_level=dimen_val Then goto attach_sign;
                                                                        End

(*FIN INSERT 'Fetch an internal dimension and |goto attach_sign|, or fetch an internal integer'*)
                                                                      Else
                                                                        Begin
                                                                          back_input;
                                                                          If cur_tok=continental_point_token Then cur_tok := point_token;
                                                                          If cur_tok<>point_token Then scan_int
                                                                          Else
                                                                            Begin
                                                                              radix := 10;
                                                                              cur_val := 0;
                                                                            End;
                                                                          If cur_tok=continental_point_token Then cur_tok := point_token;
                                                                          If (radix=10)And(cur_tok=point_token) Then
(*INSERT 'Scan decimal fraction'*)(*PASCAL module 452*)
                                                                            Begin
                                                                              k := 0;
                                                                              p := null;
                                                                              get_token; {|point_token| is being re-scanned}
                                                                              loop
                                                                              Begin
                                                                                get_x_token;
                                                                                If (cur_tok>zero_token+9)Or(cur_tok<zero_token) Then goto done1;
                                                                                If k<17 Then {digits for |k>=17| cannot affect the result}
                                                                                  Begin
                                                                                    q := get_avail;
                                                                                    link(q) := p;
                                                                                    info(q) := cur_tok-zero_token;
                                                                                    p := q;
                                                                                    incr(k);
                                                                                  End;
                                                                              End;
                                                                              done1: For kk:=k Downto 1 Do
                                                                                       Begin
                                                                                         dig[kk-1] := info(p);
                                                                                         q := p;
                                                                                         p := link(p);
                                                                                         free_avail(q);
                                                                                       End;
                                                                              f := round_decimals(k);
                                                                              If cur_cmd<>spacer Then back_input;
                                                                            End

(*FIN INSERT 'Scan decimal fraction'*)                                    ;
                                                                        End;
                                                                    End;
                                                                  If cur_val<0 Then {in this case |f=0|}
                                                                    Begin
                                                                      negative := Not negative;
                                                                      negate(cur_val);
                                                                    End;

(*INSERT 'Scan units and set |cur_val| to $x\cdot(|cur_val|+f/2^{16})$, where there are |x| sp per unit; |goto attach_sign| if the units are internal'*)(*PASCAL module 453*)
                                                                  If inf Then
(*INSERT 'Scan for \(f)\.{fil} units; |goto attach_fraction| if found'*)(*PASCAL module 454*)
                                                                    If scan_keyword('fil') Then
(*fil*)
                                                                      Begin
                                                                        cur_order := fil;
                                                                        While scan_keyword('l') Do
                                                                          Begin
                                                                            If cur_order=filll Then
                                                                              Begin
                                                                                print_err('Illegal unit of measure (');
(*Illegal unit of measure*)
                                                                                print('replaced by filll)');
                                                                                help1('I dddon''t go any higher than filll.');
                                                                                error;
                                                                              End
                                                                            Else incr(cur_order);
                                                                          End;
                                                                        goto attach_fraction;
                                                                      End

(*FIN INSERT 'Scan for \(f)\.{fil} units; |goto attach_fraction| if found'*);

(*INSERT 'Scan for \(u)units that are internal dimensions; |goto attach_sign| with |cur_val| set if found'*)(*PASCAL module 455*)
                                                                  save_cur_val := cur_val;

(*INSERT 'Get the next non-blank non-call token'*)(*PASCAL module 406*)
                                                                  Repeat
                                                                    get_x_token;
                                                                  Until cur_cmd<>spacer

(*FIN INSERT 'Get the next non-blank non-call token'*)            ;
                                                                  If (cur_cmd<min_internal)Or(cur_cmd>max_internal) Then back_input
                                                                  Else
                                                                    Begin
                                                                      If mu Then
                                                                        Begin
                                                                          scan_something_internal(mu_val,false);
(*INSERT 'Coerce glue to a dimension'*)(*PASCAL module 451*)
                                                                          If cur_val_level>=glue_val Then
                                                                            Begin
                                                                              v := width(cur_val);
                                                                              delete_glue_ref(cur_val);
                                                                              cur_val := v;
                                                                            End

(*FIN INSERT 'Coerce glue to a dimension'*)                               ;
                                                                          If cur_val_level<>mu_val Then mu_error;
                                                                        End
                                                                      Else scan_something_internal(dimen_val,false);
                                                                      v := cur_val;
                                                                      goto found;
                                                                    End;
                                                                  If mu Then goto not_found;
                                                                  If scan_keyword('em') Then v := (
(*INSERT 'The em width for |cur_font|'*)(*FIN INSERT 'The em width for |cur_font|'*)              )
(*em*)
                                                                  Else If scan_keyword('ex') Then v := (
(*INSERT 'The x-height for |cur_font|'*)(*FIN INSERT 'The x-height for |cur_font|'*)                   )
(*ex*)
                                                                  Else goto not_found;

(*INSERT 'Scan an optional space'*)(*PASCAL module 443*)
                                                                  Begin
                                                                    get_x_token;
                                                                    If cur_cmd<>spacer Then back_input;
                                                                  End

(*FIN INSERT 'Scan an optional space'*)                           ;
                                                                  found: cur_val := nx_plus_y(save_cur_val,v,xn_over_d(v,f,65536));
                                                                  goto attach_sign;
                                                                  not_found:

(*FIN INSERT 'Scan for \(u)units that are internal dimensions; |goto attach_sign| with |cur_val| set if found'*);
                                                                  If mu Then
(*INSERT 'Scan for \(m)\.{mu} units and |goto attach_fraction|'*)(*PASCAL module 456*)
                                                                    If scan_keyword('mu') Then goto attach_fraction
(*mu*)
                                                                  Else
                                                                    Begin
                                                                      print_err('Illegal unit of measure (');
                                                                      print('mu inserted)');
(*Illegal unit of measure*)
                                                                      help4('The unit of measurement in math glue must be mu.')

                                                                      ('To recover gracefully from this error, it''s best to')

                                                                      ('delete the erroneous units; e.g., type `2'' to delete')

                                                                      ('two letters. (See Chapter 27 of The TeXbook.)');
(*TeXbook][\sl The \TeX book*)
                                                                      error;
                                                                      goto attach_fraction;
                                                                    End

(*FIN INSERT 'Scan for \(m)\.{mu} units and |goto attach_fraction|'*);
                                                                  If scan_keyword('true') Then
(*INSERT 'Adjust \(f)for the magnification ratio'*)(*PASCAL module 457*)
                                                                    Begin
                                                                      prepare_mag;
                                                                      If mag<>1000 Then
                                                                        Begin
                                                                          cur_val := xn_over_d(cur_val,1000,mag);
                                                                          f := (1000*f+65536*remainder) Div mag;
                                                                          cur_val := cur_val+(f Div 65536);
                                                                          f := f Mod 65536;
                                                                        End;
                                                                    End

(*FIN INSERT 'Adjust \(f)for the magnification ratio'*)           ;
(*true*)
                                                                  If scan_keyword('pt') Then goto attach_fraction; {the easy case}
(*pt*)

(*INSERT 'Scan for \(a)all other units and adjust |cur_val| and |f| accordingly; |goto done| in the case of scaled points'*)(*PASCAL module 458*)
                                                                  If scan_keyword('in') Then set_conversion(7227)(100)
(*in*)
                                                                  Else If scan_keyword('pc') Then set_conversion(12)(1)
(*pc*)
                                                                  Else If scan_keyword('cm') Then set_conversion(7227)(254)
(*cm*)
                                                                  Else If scan_keyword('mm') Then set_conversion(7227)(2540)
(*mm*)
                                                                  Else If scan_keyword('bp') Then set_conversion(7227)(7200)
(*bp*)
                                                                  Else If scan_keyword('dd') Then set_conversion(1238)(1157)
(*dd*)
                                                                  Else If scan_keyword('cc') Then set_conversion(14856)(1157)
(*cc*)
                                                                  Else If scan_keyword('sp') Then goto done
(*sp*)
                                                                  Else
(*INSERT 'Complain about unknown unit and |goto done2|'*)(*PASCAL module 459*)
                                                                    Begin
                                                                      print_err('Illegal unit of measure (');
                                                                      print('pt inserted)');
(*Illegal unit of measure*)
                                                                      help6('Dimensions can be in units of em, ex, in, pt, pc,')

                                                                      ('cm, mm, dd, cc, bp, or sp; but yours is a new one!')

                                                                      ('I''ll assume that you meant to say pt, for printer''s points.')

                                                                      ('To recover gracefully from this error, it''s best to')

                                                                      ('delete the erroneous units; e.g., type `2'' to delete')

                                                                      ('two letters. (See Chapter 27 of The TeXbook.)');
(*TeXbook][\sl The \TeX book*)
                                                                      error;
                                                                      goto done2;
                                                                    End


(*FIN INSERT 'Complain about unknown unit and |goto done2|'*)     ;
                                                                  cur_val := xn_over_d(cur_val,num,denom);
                                                                  f := (num*f+65536*remainder) Div denom;

                                                                  cur_val := cur_val+(f Div 65536);
                                                                  f := f Mod 65536;
                                                                  done2:

(*FIN INSERT 'Scan for \(a)all other units and adjust |cur_val| and |f| accordingly; |goto done| in the case of scaled points'*);
                                                                  attach_fraction: If cur_val>=16384 Then arith_error := true
                                                                                   Else cur_val := cur_val*unity+f;
                                                                  done:

(*FIN INSERT 'Scan units and set |cur_val| to $x\cdot(|cur_val|+f/2^{16})$, where there are |x| sp per unit; |goto attach_sign| if the units are internal'*);

(*INSERT 'Scan an optional space'*)(*PASCAL module 443*)
                                                                  Begin
                                                                    get_x_token;
                                                                    If cur_cmd<>spacer Then back_input;
                                                                  End

(*FIN INSERT 'Scan an optional space'*)                           ;
                                                                  attach_sign: If arith_error Or(abs(cur_val)>=1073741824) Then

(*INSERT 'Report that this dimension is out of range'*)(*PASCAL module 460*)
                                                                                 Begin
                                                                                   print_err('Dimension too large');
(*Dimension too large*)
                                                                                   help2('I can''t work with sizes bigger than about 19 feet.')

                                                                                   ('Continue and I''ll use the largest value I can.');

                                                                                   error;
                                                                                   cur_val := max_dimen;
                                                                                   arith_error := false;
                                                                                 End

(*FIN INSERT 'Report that this dimension is out of range'*)       ;
                                                                  If negative Then negate(cur_val);
                                                                End;


(***PASCAL module 461***)
                                                                Procedure scan_glue(level:small_number);
  {sets |cur_val| to a glue spec pointer}

                                                                Label exit;

                                                                Var negative: boolean; {should the answer be negated?}
                                                                  q: pointer; {new glue specification}
                                                                  mu: boolean; {does |level=mu_val|?}
                                                                Begin
                                                                  mu := (level=mu_val);
(*INSERT 'Get the next non-blank non-sign token; set |negative| appropriately'*)(*PASCAL module 441*)
                                                                  negative := false;
                                                                  Repeat
(*INSERT 'Get the next non-blank non-call token'*)(*PASCAL module 406*)
                                                                    Repeat
                                                                      get_x_token;
                                                                    Until cur_cmd<>spacer

(*FIN INSERT 'Get the next non-blank non-call token'*)              ;
                                                                    If cur_tok=other_token+'-' Then
                                                                      Begin
                                                                        negative := Not negative;
                                                                        cur_tok := other_token+'+';
                                                                      End;
                                                                  Until cur_tok<>other_token+'+'

(*FIN INSERT 'Get the next non-blank non-sign token; set |negative| appropriately'*);
                                                                  If (cur_cmd>=min_internal)And(cur_cmd<=max_internal) Then
                                                                    Begin
                                                                      scan_something_internal(level,negative);
                                                                      If cur_val_level>=glue_val Then
                                                                        Begin
                                                                          If cur_val_level<>level Then mu_error;
                                                                          return;
                                                                        End;
                                                                      If cur_val_level=int_val Then scan_dimen(mu,false,true)
                                                                      Else If level=mu_val Then mu_error;
                                                                    End
                                                                  Else
                                                                    Begin
                                                                      back_input;
                                                                      scan_dimen(mu,false,false);
                                                                      If negative Then negate(cur_val);
                                                                    End;

(*INSERT 'Create a new glue specification whose width is |cur_val|; scan for its stretch and shrink components'*)(*PASCAL module 462*)
                                                                  q := new_spec(zero_glue);
                                                                  width(q) := cur_val;
                                                                  If scan_keyword('plus') Then
(*plus*)
                                                                    Begin
                                                                      scan_dimen(mu,true,false);
                                                                      stretch(q) := cur_val;
                                                                      stretch_order(q) := cur_order;
                                                                    End;
                                                                  If scan_keyword('minus') Then
(*minus*)
                                                                    Begin
                                                                      scan_dimen(mu,true,false);
                                                                      shrink(q) := cur_val;
                                                                      shrink_order(q) := cur_order;
                                                                    End;
                                                                  cur_val := q

(*FIN INSERT 'Create a new glue specification whose width is |cur_val|; scan for its stretch and shrink components'*);
                                                                  exit:
                                                                End;


(***PASCAL module 463***)
                                                                Function scan_rule_spec: pointer;

                                                                Label reswitch;

                                                                Var q: pointer; {the rule node being created}
                                                                Begin
                                                                  q := new_rule; {|width|, |depth|, and |height| all equal |null_flag| now}
                                                                  If cur_cmd=vrule Then width(q) := default_rule
                                                                  Else
                                                                    Begin
                                                                      height(q) := default_rule;
                                                                      depth(q) := 0;
                                                                    End;
                                                                  reswitch: If scan_keyword('width') Then
(*width*)
                                                                              Begin
                                                                                scan_normal_dimen;
                                                                                width(q) := cur_val;
                                                                                goto reswitch;
                                                                              End;
                                                                  If scan_keyword('height') Then
(*height*)
                                                                    Begin
                                                                      scan_normal_dimen;
                                                                      height(q) := cur_val;
                                                                      goto reswitch;
                                                                    End;
                                                                  If scan_keyword('depth') Then
(*depth*)
                                                                    Begin
                                                                      scan_normal_dimen;
                                                                      depth(q) := cur_val;
                                                                      goto reswitch;
                                                                    End;
                                                                  scan_rule_spec := q;
                                                                End;


(***PASCAL module 464***)
                                                                Function str_toks(b:pool_pointer): pointer;
  {changes the string |str_pool[b..pool_ptr]| to a token list}

                                                                Var p: pointer; {tail of the token list}
                                                                  q: pointer; {new node being added to the token list via |store_new_token|}
                                                                  t: halfword; {token being appended}
                                                                  k: pool_pointer; {index into |str_pool|}
                                                                Begin
                                                                  str_room(1);
                                                                  p := temp_head;
                                                                  link(p) := null;
                                                                  k := b;
                                                                  While k<pool_ptr Do
                                                                    Begin
                                                                      t := so(str_pool[k]);
                                                                      If t=' ' Then t := space_token
                                                                      Else t := other_token+t;
                                                                      fast_store_new_token(t);
                                                                      incr(k);
                                                                    End;
                                                                  pool_ptr := b;
                                                                  str_toks := p;
                                                                End;


(***PASCAL module 465***)
                                                                Function the_toks: pointer;

                                                                Var old_setting: 0..max_selector; {holds |selector| setting}
                                                                  p,q,r: pointer; {used for copying a token list}
                                                                  b: pool_pointer; {base of temporary string}
                                                                Begin
                                                                  get_x_token;
                                                                  scan_something_internal(tok_val,false);
                                                                  If cur_val_level>=ident_val Then
(*INSERT 'Copy the token list'*)(*PASCAL module 466*)
                                                                    Begin
                                                                      p := temp_head;
                                                                      link(p) := null;
                                                                      If cur_val_level=ident_val Then store_new_token(cs_token_flag+cur_val)
                                                                      Else If cur_val<>null Then
                                                                             Begin
                                                                               r := link(cur_val); {do not copy the reference count}
                                                                               While r<>null Do
                                                                                 Begin
                                                                                   fast_store_new_token(info(r));
                                                                                   r := link(r);
                                                                                 End;
                                                                             End;
                                                                      the_toks := p;
                                                                    End

(*FIN INSERT 'Copy the token list'*)
                                                                  Else
                                                                    Begin
                                                                      old_setting := selector;
                                                                      selector := new_string;
                                                                      b := pool_ptr;
                                                                      Case cur_val_level Of 
                                                                        int_val: print_int(cur_val);
                                                                        dimen_val:
                                                                                   Begin
                                                                                     print_scaled(cur_val);
                                                                                     print('pt');
                                                                                   End;
                                                                        glue_val:
                                                                                  Begin
                                                                                    print_spec(cur_val,'pt');
                                                                                    delete_glue_ref(cur_val);
                                                                                  End;
                                                                        mu_val:
                                                                                Begin
                                                                                  print_spec(cur_val,'mu');
                                                                                  delete_glue_ref(cur_val);
                                                                                End;
                                                                      End; {there are no other cases}
                                                                      selector := old_setting;
                                                                      the_toks := str_toks(b);
                                                                    End;
                                                                End;


(***PASCAL module 467***)
                                                                Procedure ins_the_toks;
                                                                Begin
                                                                  link(garbage) := the_toks;
                                                                  ins_list(link(temp_head));
                                                                End;


(***PASCAL module 470***)
                                                                Procedure conv_toks;

                                                                Var old_setting: 0..max_selector; {holds |selector| setting}
                                                                  c: number_code..job_name_code; {desired type of conversion}
                                                                  save_scanner_status: small_number; {|scanner_status| upon entry}
                                                                  b: pool_pointer; {base of temporary string}
                                                                Begin
                                                                  c := cur_chr;
(*INSERT 'Scan the argument for command |c|'*)(*PASCAL module 471*)
                                                                  Case c Of 
                                                                    number_code,roman_numeral_code: scan_int;
                                                                    string_code, meaning_code:
                                                                                               Begin
                                                                                                 save_scanner_status := scanner_status;
                                                                                                 scanner_status := normal;
                                                                                                 get_token;
                                                                                                 scanner_status := save_scanner_status;
                                                                                               End;
                                                                    font_name_code: scan_font_ident;
                                                                    job_name_code: If job_name=0 Then open_log_file;
                                                                  End {there are no other cases}

(*FIN INSERT 'Scan the argument for command |c|'*)                ;
                                                                  old_setting := selector;
                                                                  selector := new_string;
                                                                  b := pool_ptr;

(*INSERT 'Print the result of command |c|'*)(*PASCAL module 472*)
                                                                  Case c Of 
                                                                    number_code: print_int(cur_val);
                                                                    roman_numeral_code: print_roman_int(cur_val);
                                                                    string_code: If cur_cs<>0 Then sprint_cs(cur_cs)
                                                                                 Else print_char(cur_chr);
                                                                    meaning_code: print_meaning;
                                                                    font_name_code:
                                                                                    Begin
                                                                                      print(font_name[cur_val]);
                                                                                      If font_size[cur_val]<>font_dsize[cur_val] Then
                                                                                        Begin
                                                                                          print(' at ');
                                                                                          print_scaled(font_size[cur_val]);
                                                                                          print('pt');
                                                                                        End;
                                                                                    End;
                                                                    job_name_code: print(job_name);
                                                                  End {there are no other cases}

(*FIN INSERT 'Print the result of command |c|'*)                  ;
                                                                  selector := old_setting;
                                                                  link(garbage) := str_toks(b);
                                                                  ins_list(link(temp_head));
                                                                End;


(***PASCAL module 473***)
                                                                Function scan_toks(macro_def,xpand:boolean): pointer;

                                                                Label found,done,done1,done2;

                                                                Var t: halfword; {token representing the highest parameter number}
                                                                  s: halfword; {saved token}
                                                                  p: pointer; {tail of the token list being built}
                                                                  q: pointer; {new node being added to the token list via |store_new_token|}
                                                                  unbalance: halfword; {number of unmatched left braces}
                                                                  hash_brace: halfword; {possible `\.[\#\[]' 
token}
                                                                Begin
                                                                  If macro_def Then scanner_status := defining
                                                                  Else scanner_status := absorbing;
                                                                  warning_index := cur_cs;
                                                                  def_ref := get_avail;
                                                                  token_ref_count(def_ref) := null;
                                                                  p := def_ref;
                                                                  hash_brace := 0;
                                                                  t := zero_token;
                                                                  If macro_def Then
(*INSERT 'Scan and build the parameter part of the macro definition'*)(*PASCAL module 474*)
                                                                    Begin
                                                                      loop
                                                                      Begin
                                                                        get_token; {set |cur_cmd|, |cur_chr|, |cur_tok|}
                                                                        If cur_tok<right_brace_limit Then goto done1;
                                                                        If cur_cmd=mac_param Then

(*INSERT 'If the next character is a parameter number, make |cur_tok| a |match| token; but if it is a left brace, store `|left_brace|, |end_match|'', set |hash_brace|, and |goto done|'*)(*PASCAL module 476*)
                                                                          Begin
                                                                            s := match_token+cur_chr;
                                                                            get_token;
                                                                            If cur_cmd=left_brace Then
                                                                              Begin
                                                                                hash_brace := cur_tok;
                                                                                store_new_token(cur_tok);
                                                                                store_new_token(end_match_token);
                                                                                goto done;
                                                                              End;
                                                                            If t=zero_token+9 Then
                                                                              Begin
                                                                                print_err('You already have nine parameters');
(*You already have nine...*)
                                                                                help1('I''m going to ignore the # sign you just used.');
                                                                                error;
                                                                              End
                                                                            Else
                                                                              Begin
                                                                                incr(t);
                                                                                If cur_tok<>t Then
                                                                                  Begin
                                                                                    print_err('Parameters must be numbered consecutively');
(*Parameters...consecutively*)
                                                                                    help2('I''ve inserted the digit you should have used after the #.')

                                                                                    ('Type `1'' to delete what you did use.');
                                                                                    back_error;
                                                                                  End;
                                                                                cur_tok := s;
                                                                              End;
                                                                          End

(*FIN INSERT 'If the next character is a parameter number, make |cur_tok| a |match| token; but if it is a left brace, store `|left_brace|, |end_match|'', set |hash_brace|, and |goto done|'*);
                                                                        store_new_token(cur_tok);
                                                                      End;
                                                                      done1: store_new_token(end_match_token);
                                                                      If cur_cmd=right_brace Then

(*INSERT 'Express shock at the missing left brace; |goto found|'*)(*PASCAL module 475*)
                                                                        Begin
                                                                          print_err('Missing { inserted');
                                                                          incr(align_state);
(*Missing \[
inserted*)
                                                                          help2('Where was the left brace? You said something like `\def\a}'',')

                                                                          ('which I''m going to interpret as `\def\a{}''.');
                                                                          error;
                                                                          goto found;
                                                                        End

(*FIN INSERT 'Express shock at the missing left brace; |goto found|'*);
                                                                      done:
                                                                    End

(*FIN INSERT 'Scan and build the parameter part of the macro definition'*)
                                                                  Else scan_left_brace; {remove the compulsory left brace}

(*INSERT 'Scan and build the body of the token list; |goto found| when finished'*)(*PASCAL module 477*)
                                                                  unbalance := 1;
                                                                  loop
                                                                  Begin
                                                                    If xpand Then
(*INSERT 'Expand the next part of the input'*)(*PASCAL module 478*)
                                                                      Begin
                                                                        loop
                                                                        Begin
                                                                          get_next;
                                                                          If cur_cmd<=max_command Then goto done2;
                                                                          If cur_cmd<>the Then expand
                                                                          Else
                                                                            Begin
                                                                              q := the_toks;
                                                                              If link(temp_head)<>null Then
                                                                                Begin
                                                                                  link(p) := link(temp_head);
                                                                                  p := q;
                                                                                End;
                                                                            End;
                                                                        End;
                                                                        done2: x_token
                                                                      End

(*FIN INSERT 'Expand the next part of the input'*)
                                                                    Else get_token;
                                                                    If cur_tok<right_brace_limit Then
                                                                      If cur_cmd<right_brace Then incr(unbalance)
                                                                    Else
                                                                      Begin
                                                                        decr(unbalance);
                                                                        If unbalance=0 Then goto found;
                                                                      End
                                                                    Else If cur_cmd=mac_param Then
                                                                           If macro_def Then
(*INSERT 'Look for parameter number or \.{\#\#}'*)(*PASCAL module 479*)
                                                                             Begin
                                                                               s := cur_tok;
                                                                               If xpand Then get_x_token
                                                                               Else get_token;
                                                                               If cur_cmd<>mac_param Then
                                                                                 If (cur_tok<=zero_token)Or(cur_tok>t) Then
                                                                                   Begin
                                                                                     print_err('Illegal parameter number in definition of ');
(*Illegal parameter number...*)
                                                                                     sprint_cs(warning_index);
                                                                                     help3('You meant to type ## instead of #, right?')

                                                                                     ('Or maybe a } was forgotten somewhere earlier, and things')

                                                                                     ('are all screwed up? I''m going to assume that you meant ##.');
                                                                                     back_error;
                                                                                     cur_tok := s;
                                                                                   End
                                                                               Else cur_tok := out_param_token-'0'+cur_chr;
                                                                             End

(*FIN INSERT 'Look for parameter number or \.{\#\#}'*)              ;
                                                                    store_new_token(cur_tok);
                                                                  End

(*FIN INSERT 'Scan and build the body of the token list; |goto found| when finished'*);
                                                                  found: scanner_status := normal;
                                                                  If hash_brace<>0 Then store_new_token(hash_brace);
                                                                  scan_toks := p;
                                                                End;


(***PASCAL module 482***)
                                                                Procedure read_toks(n:integer;r:pointer);

                                                                Label done;

                                                                Var p: pointer; {tail of the token list}
                                                                  q: pointer; {new node being added to the token list via |store_new_token|}
                                                                  s: integer; {saved value of |align_state|}
                                                                  m: small_number; {stream number}
                                                                Begin
                                                                  scanner_status := defining;
                                                                  warning_index := r;
                                                                  def_ref := get_avail;
                                                                  token_ref_count(def_ref) := null;
                                                                  p := def_ref; {the reference count}
                                                                  store_new_token(end_match_token);
                                                                  If (n<0)Or(n>15) Then m := 16
                                                                  Else m := n;
                                                                  s := align_state;
                                                                  align_state := 1000000; {disable tab marks, etc.}
                                                                  Repeat
(*INSERT 'Input and store tokens from the next line of the file'*)(*PASCAL module 483*)
                                                                    begin_file_reading;
                                                                    name := m+1;
                                                                    If read_open[m]=closed Then
(*INSERT 'Input for \.{\\read} from the terminal'*)(*PASCAL module 484*)
                                                                      If interaction>nonstop_mode Then
                                                                        If n<0 Then prompt_input('')
                                                                    Else
                                                                      Begin
                                                                        wake_up_terminal;
                                                                        print_ln;
                                                                        sprint_cs(r);
                                                                        prompt_input('=');
                                                                        n := -1;
                                                                      End
                                                                    Else fatal_error('*** (cannot \read from terminal in nonstop modes)')
(*cannot \\read*)

(*FIN INSERT 'Input for \.{\\read} from the terminal'*)
                                                                    Else If read_open[m]=just_open Then
(*INSERT 'Input the first line of |read_file[m]|'*)(*PASCAL module 485*)
                                                                           If input_ln(read_file[m],false) Then read_open[m] := normal
                                                                    Else
                                                                      Begin
                                                                        a_close(read_file[m]);
                                                                        read_open[m] := closed;
                                                                      End

(*FIN INSERT 'Input the first line of |read_file[m]|'*)
                                                                    Else
(*INSERT 'Input the next line of |read_file[m]|'*)(*PASCAL module 486*)
                                                                      Begin
                                                                        If Not input_ln(read_file[m],true) Then
                                                                          Begin
                                                                            a_close(read_file[m]);
                                                                            read_open[m] := closed;
                                                                            If align_state<>1000000 Then
                                                                              Begin
                                                                                runaway;
                                                                                print_err('File ended within ');
                                                                                print_esc('read');
(*File ended within \\read*)
                                                                                help1('This \read has unbalanced braces.');
                                                                                align_state := 1000000;
                                                                                error;
                                                                              End;
                                                                          End;
                                                                      End

(*FIN INSERT 'Input the next line of |read_file[m]|'*)              ;
                                                                    limit := last;
                                                                    If end_line_char_inactive Then decr(limit)
                                                                    Else  buffer[limit] := end_line_char;
                                                                    first := limit+1;
                                                                    loc := start;
                                                                    state := new_line;

                                                                    loop
                                                                    Begin
                                                                      get_token;
                                                                      If cur_tok=0 Then goto done;
    {|cur_cmd=cur_chr=0| will occur at the end of the line}
                                                                      If align_state<1000000 Then {unmatched `\.\]' 
aborts the line}
                                                                        Begin
                                                                          Repeat
                                                                            get_token;
                                                                          Until cur_tok=0;
                                                                          align_state := 1000000;
                                                                          goto done;
                                                                        End;
                                                                      store_new_token(cur_tok);
                                                                    End;
                                                                    done: end_file_reading

(*FIN INSERT 'Input and store tokens from the next line of the file'*);
                                                                  Until align_state=1000000;
                                                                  cur_val := def_ref;
                                                                  scanner_status := normal;
                                                                  align_state := s;
                                                                End;


(***PASCAL module 494***)
                                                                Procedure pass_text;

                                                                Label done;

                                                                Var l: integer; {level of $\.[\\if]\ldots\.[\\fi]$ nesting}
                                                                  save_scanner_status: small_number; {|scanner_status| upon entry}
                                                                Begin
                                                                  save_scanner_status := scanner_status;
                                                                  scanner_status := skipping;
                                                                  l := 0;
                                                                  skip_line := line;
                                                                  loop
                                                                  Begin
                                                                    get_next;
                                                                    If cur_cmd=fi_or_else Then
                                                                      Begin
                                                                        If l=0 Then goto done;
                                                                        If cur_chr=fi_code Then decr(l);
                                                                      End
                                                                    Else If cur_cmd=if_test Then incr(l);
                                                                  End;
                                                                  done: scanner_status := save_scanner_status;
                                                                End;


(***PASCAL module 497***)
                                                                Procedure change_if_limit(l:small_number;p:pointer);

                                                                Label exit;

                                                                Var q: pointer;
                                                                Begin
                                                                  If p=cond_ptr Then if_limit := l {that's the easy case}
                                                                  Else
                                                                    Begin
                                                                      q := cond_ptr;
                                                                      loop
                                                                      Begin
                                                                        If q=null Then confusion('if');
(*this can''t happen if][\quad if*)
                                                                        If link(q)=p Then
                                                                          Begin

                                                                            Type (q) := l;
                                                                              return;
                                                                            End;
                                                                            q := link(q);
                                                                          End;
                                                                      End;
                                                                      exit:
                                                                    End;


(***PASCAL module 498***)
                                                                  Procedure conditional;

                                                                  Label exit,common_ending;

                                                                  Var b: boolean; {is the condition true?}
                                                                    r: '<'..'>'; {relation to be evaluated}
                                                                    m,n: integer; {to be tested against the second operand}
                                                                    p,q: pointer; {for traversing token lists in \.[\\ifx] tests}
                                                                    save_scanner_status: small_number; {|scanner_status| upon entry}
                                                                    save_cond_ptr: pointer; {|cond_ptr| corresponding to this conditional}
                                                                    this_if: small_number; {type of this conditional}
                                                                  Begin
(*INSERT 'Push the condition stack'*)(*PASCAL module 495*)
                                                                    Begin
                                                                      p := get_node(if_node_size);
                                                                      link(p) := cond_ptr;

                                                                      Type (p) := if_limit;
                                                                        subtype(p) := cur_if;
                                                                        if_line_field(p) := if_line;
                                                                        cond_ptr := p;
                                                                        cur_if := cur_chr;
                                                                        if_limit := if_code;
                                                                        if_line := line;
                                                                      End

(*FIN INSERT 'Push the condition stack'*)                             ;
                                                                      save_cond_ptr := cond_ptr;
                                                                      this_if := cur_chr;


(*INSERT 'Either process \.{\\ifcase} or set |b| to the value of a boolean condition'*)(*PASCAL module 501*)
                                                                      Case this_if Of 
                                                                        if_char_code, if_cat_code:
(*INSERT 'Test if two characters match'*)(*PASCAL module 506*)
                                                                                                   Begin
                                                                                                     get_x_token_or_active_char;
                                                                                                     If (cur_cmd>active_char)Or(cur_chr>255) Then {not a character}
                                                                                                       Begin
                                                                                                         m := relax;
                                                                                                         n := 256;
                                                                                                       End
                                                                                                     Else
                                                                                                       Begin
                                                                                                         m := cur_cmd;
                                                                                                         n := cur_chr;
                                                                                                       End;
                                                                                                     get_x_token_or_active_char;
                                                                                                     If (cur_cmd>active_char)Or(cur_chr>255) Then
                                                                                                       Begin
                                                                                                         cur_cmd := relax;
                                                                                                         cur_chr := 256;
                                                                                                       End;
                                                                                                     If this_if=if_char_code Then b := (n=cur_chr)
                                                                                                     Else b := (m=cur_cmd);
                                                                                                   End

(*FIN INSERT 'Test if two characters match'*)                           ;
                                                                        if_int_code, if_dim_code:
(*INSERT 'Test relation between integers or dimensions'*)(*PASCAL module 503*)
                                                                                                  Begin
                                                                                                    If this_if=if_int_code Then scan_intelse scan_normal_dimen;
                                                                                                    n := cur_val;
(*INSERT 'Get the next non-blank non-call token'*)(*PASCAL module 406*)
                                                                                                    Repeat
                                                                                                      get_x_token;
                                                                                                    Until cur_cmd<>spacer

(*FIN INSERT 'Get the next non-blank non-call token'*)                                              ;
                                                                                                    If (cur_tok>=other_token+'<')And(cur_tok<=other_token+'>') Then
                                                                                                      r := cur_tok-other_token
                                                                                                    Else
                                                                                                      Begin
                                                                                                        print_err('Missing = inserted for ');
(*Missing = inserted*)
                                                                                                        print_cmd_chr(if_test,this_if);
                                                                                                        help1('I was expecting to see `<'', `='', or `>''. Didn''t.');
                                                                                                        back_error;
                                                                                                        r := '=';
                                                                                                      End;
                                                                                                    If this_if=if_int_code Then scan_intelse scan_normal_dimen;
                                                                                                    Case r Of 
                                                                                                      '<': b := (n<cur_val);
                                                                                                      '=': b := (n=cur_val);
                                                                                                      '>': b := (n>cur_val);
                                                                                                    End;
                                                                                                  End

(*FIN INSERT 'Test relation between integers or dimensions'*)           ;
                                                                        if_odd_code:
(*INSERT 'Test if an integer is odd'*)(*PASCAL module 504*)
                                                                                     Begin
                                                                                       scan_int;
                                                                                       b := odd(cur_val);
                                                                                     End

(*FIN INSERT 'Test if an integer is odd'*)                              ;
                                                                        if_vmode_code: b := (abs(mode)=vmode);
                                                                        if_hmode_code: b := (abs(mode)=hmode);
                                                                        if_mmode_code: b := (abs(mode)=mmode);
                                                                        if_inner_code: b := (mode<0);
                                                                        if_void_code, if_hbox_code, if_vbox_code:
(*INSERT 'Test box register status'*)(*PASCAL module 505*)
                                                                                                                  Begin
                                                                                                                    scan_eight_bit_int;
                                                                                                                    p := box(cur_val);
                                                                                                                    If this_if=if_void_code Then b := (p=null)
                                                                                                                    Else If p=null Then b := false
                                                                                                                    Else If this_if=if_hbox_code Then b := (Type(p)=hlist_node)
                                                                                                                    Else b := (Type(p)=vlist_node);
                                                                                                                  End

(*FIN INSERT 'Test box register status'*)                               ;
                                                                        ifx_code:
(*INSERT 'Test if two tokens match'*)(*PASCAL module 507*)
                                                                                  Begin
                                                                                    save_scanner_status := scanner_status;
                                                                                    scanner_status := normal;
                                                                                    get_next;
                                                                                    n := cur_cs;
                                                                                    p := cur_cmd;
                                                                                    q := cur_chr;
                                                                                    get_next;
                                                                                    If cur_cmd<>p Then b := false
                                                                                    Else If cur_cmd<call Then b := (cur_chr=q)
                                                                                    Else
(*INSERT 'Test if two macro texts match'*)(*PASCAL module 508*)
                                                                                      Begin
                                                                                        p := link(cur_chr);
                                                                                        q := link(equiv(n)); {omit reference counts}
                                                                                        If p=q Then b := true
                                                                                        Else
                                                                                          Begin
                                                                                            While (p<>null)And(q<>null) Do
                                                                                              If info(p)<>info(q) Then p := null
                                                                                              Else
                                                                                                Begin
                                                                                                  p := link(p);
                                                                                                  q := link(q);
                                                                                                End;
                                                                                            b := ((p=null)And(q=null));
                                                                                          End;
                                                                                      End

(*FIN INSERT 'Test if two macro texts match'*)                                      ;
                                                                                    scanner_status := save_scanner_status;
                                                                                  End

(*FIN INSERT 'Test if two tokens match'*)                               ;
                                                                        if_eof_code:
                                                                                     Begin
                                                                                       scan_four_bit_int;
                                                                                       b := (read_open[cur_val]=closed);
                                                                                     End;
                                                                        if_true_code: b := true;
                                                                        if_false_code: b := false;
                                                                        if_case_code:
(*INSERT 'Select the appropriate case and |return| or |goto common_ending|'*)(*PASCAL module 509*)
                                                                                      Begin
                                                                                        scan_int;
                                                                                        n := cur_val; {|n| is the number of cases to pass}
                                                                                        If tracing_commands>1 Then
                                                                                          Begin
                                                                                            begin_diagnostic;
                                                                                            print('{case ');
                                                                                            print_int(n);
                                                                                            print_char('}');
                                                                                            end_diagnostic(false);
                                                                                          End;
                                                                                        While n<>0 Do
                                                                                          Begin
                                                                                            pass_text;
                                                                                            If cond_ptr=save_cond_ptr Then
                                                                                              If cur_chr=or_code Then decr(n)
                                                                                            Else goto common_ending
                                                                                            Else If cur_chr=fi_code Then
(*INSERT 'Pop the condition stack'*)(*PASCAL module 496*)
                                                                                                   Begin
                                                                                                     p := cond_ptr;
                                                                                                     if_line := if_line_field(p);
                                                                                                     cur_if := subtype(p);
                                                                                                     if_limit := Type(p);
                                                                                                     cond_ptr := link(p);
                                                                                                     free_node(p,if_node_size);
                                                                                                   End

(*FIN INSERT 'Pop the condition stack'*)                                                    ;
                                                                                          End;
                                                                                        change_if_limit(or_code,save_cond_ptr);
                                                                                        return; {wait for \.[\\or], \.[\\else], or \.[\\fi]}
                                                                                      End

(*FIN INSERT 'Select the appropriate case and |return| or |goto common_ending|'*);
                                                                      End {there are no other cases}

(*FIN INSERT 'Either process \.{\\ifcase} or set |b| to the value of a boolean condition'*);
                                                                      If tracing_commands>1 Then
(*INSERT 'Display the value of |b|'*)(*PASCAL module 502*)
                                                                        Begin
                                                                          begin_diagnostic;
                                                                          If b Then print('{true}')
                                                                          Else print('{false}');
                                                                          end_diagnostic(false);
                                                                        End

(*FIN INSERT 'Display the value of |b|'*)                             ;
                                                                      If b Then
                                                                        Begin
                                                                          change_if_limit(else_code,save_cond_ptr);
                                                                          return; {wait for \.[\\else] or \.[\\fi]}
                                                                        End;

(*INSERT 'Skip to \.{\\else} or \.{\\fi}, then |goto common_ending|'*)(*PASCAL module 500*)
                                                                      loop
                                                                      Begin
                                                                        pass_text;
                                                                        If cond_ptr=save_cond_ptr Then
                                                                          Begin
                                                                            If cur_chr<>or_code Then goto common_ending;
                                                                            print_err('Extra ');
                                                                            print_esc('or');
(*Extra \\or*)
                                                                            help1('I''m ignoring this; it doesn''t match any \if.');
                                                                            error;
                                                                          End
                                                                        Else If cur_chr=fi_code Then
(*INSERT 'Pop the condition stack'*)(*PASCAL module 496*)
                                                                               Begin
                                                                                 p := cond_ptr;
                                                                                 if_line := if_line_field(p);
                                                                                 cur_if := subtype(p);
                                                                                 if_limit := Type(p);
                                                                                 cond_ptr := link(p);
                                                                                 free_node(p,if_node_size);
                                                                               End

(*FIN INSERT 'Pop the condition stack'*)                                ;
                                                                      End

(*FIN INSERT 'Skip to \.{\\else} or \.{\\fi}, then |goto common_ending|'*);
                                                                      common_ending: If cur_chr=fi_code Then
(*INSERT 'Pop the condition stack'*)(*PASCAL module 496*)
                                                                                       Begin
                                                                                         p := cond_ptr;
                                                                                         if_line := if_line_field(p);
                                                                                         cur_if := subtype(p);
                                                                                         if_limit := Type(p);
                                                                                         cond_ptr := link(p);
                                                                                         free_node(p,if_node_size);
                                                                                       End

(*FIN INSERT 'Pop the condition stack'*)
                                                                                     Else if_limit := fi_code; {wait for \.[\\fi]}
                                                                      exit:
                                                                    End;


(***PASCAL module 515***)
                                                                    Procedure begin_name;
                                                                    Begin
                                                                      area_delimiter := 0;
                                                                      ext_delimiter := 0;
                                                                    End;


(***PASCAL module 516***)
                                                                    Function more_name(c:ASCII_code): boolean;
                                                                    Begin
                                                                      If c=' ' Then more_name := false
                                                                      Else
                                                                        Begin
                                                                          str_room(1);
                                                                          append_char(c); {contribute |c| to the current string}
                                                                          If (c='>')Or(c=':') Then
                                                                            Begin
                                                                              area_delimiter := cur_length;
                                                                              ext_delimiter := 0;
                                                                            End
                                                                          Else If (c='.')And(ext_delimiter=0) Then ext_delimiter := cur_length;
                                                                          more_name := true;
                                                                        End;
                                                                    End;


(***PASCAL module 517***)
                                                                    Procedure end_name;
                                                                    Begin
                                                                      If str_ptr+3>max_strings Then
                                                                        overflow('number of strings',max_strings-init_str_ptr);
(*TeX capacity exceeded number of strings][\quad number of strings*)
                                                                      If area_delimiter=0 Then cur_area := ''
                                                                      Else
                                                                        Begin
                                                                          cur_area := str_ptr;
                                                                          str_start[str_ptr+1] := str_start[str_ptr]+area_delimiter;
                                                                          incr(str_ptr);
                                                                        End;
                                                                      If ext_delimiter=0 Then
                                                                        Begin
                                                                          cur_ext := '';
                                                                          cur_name := make_string;
                                                                        End
                                                                      Else
                                                                        Begin
                                                                          cur_name := str_ptr;
                                                                          str_start[str_ptr+1] := str_start[str_ptr]+ext_delimiter-area_delimiter-1;
                                                                          incr(str_ptr);
                                                                          cur_ext := make_string;
                                                                        End;
                                                                    End;


(***PASCAL module 519***)
                                                                    Procedure pack_file_name(n,a,e:str_number);

                                                                    Var k: integer; {number of positions filled in |name_of_file|}
                                                                      c: ASCII_code; {character being packed}
                                                                      j: pool_pointer; {index into |str_pool|}
                                                                    Begin
                                                                      k := 0;
                                                                      For j:=str_start[a] To str_start[a+1]-1 Do
                                                                        append_to_name(so(str_pool[j]));
                                                                      For j:=str_start[n] To str_start[n+1]-1 Do
                                                                        append_to_name(so(str_pool[j]));
                                                                      For j:=str_start[e] To str_start[e+1]-1 Do
                                                                        append_to_name(so(str_pool[j]));
                                                                      If k<=file_name_size Then name_length := kelse name_length:=file_name_size;
                                                                      For k:=name_length+1 To file_name_size Do
                                                                        name_of_file[k] := ' ';
                                                                    End;


(***PASCAL module 523***)
                                                                    Procedure pack_buffered_name(n:small_number;a,b:integer);

                                                                    Var k: integer; {number of positions filled in |name_of_file|}
                                                                      c: ASCII_code; {character being packed}
                                                                      j: integer; {index into |buffer| or |TEX_format_default|}
                                                                    Begin
                                                                      If n+b-a+1+format_ext_length>file_name_size Then
                                                                        b := a+file_name_size-n-1-format_ext_length;
                                                                      k := 0;
                                                                      For j:=1 To n Do
                                                                        append_to_name(xord[TEX_format_default[j]]);
                                                                      For j:=a To b Do
                                                                        append_to_name(buffer[j]);
                                                                      For j:=format_default_length-format_ext_length+1 To format_default_length Do
                                                                        append_to_name(xord[TEX_format_default[j]]);
                                                                      If k<=file_name_size Then name_length := kelse name_length:=file_name_size;
                                                                      For k:=name_length+1 To file_name_size Do
                                                                        name_of_file[k] := ' ';
                                                                    End;


(***PASCAL module 525***)
                                                                    Function make_name_string: str_number;

                                                                    Var k: 1..file_name_size; {index into |name_of_file|}
                                                                    Begin
                                                                      If (pool_ptr+name_length>pool_size)Or(str_ptr=max_strings)Or
                                                                         (cur_length>0) Then
                                                                        make_name_string := '?'
                                                                      Else
                                                                        Begin
                                                                          For k:=1 To name_length Do
                                                                            append_char(xord[name_of_file[k]]);
                                                                          make_name_string := make_string;
                                                                        End;
                                                                    End;
                                                                    Function a_make_name_string(Var f:alpha_file): str_number;
                                                                    Begin
                                                                      a_make_name_string := make_name_string;
                                                                    End;
                                                                    Function b_make_name_string(Var f:byte_file): str_number;
                                                                    Begin
                                                                      b_make_name_string := make_name_string;
                                                                    End;
                                                                    Function w_make_name_string(Var f:word_file): str_number;
                                                                    Begin
                                                                      w_make_name_string := make_name_string;
                                                                    End;


(***PASCAL module 526***)
                                                                    Procedure scan_file_name;

                                                                    Label done;
                                                                    Begin
                                                                      name_in_progress := true;
                                                                      begin_name;

(*INSERT 'Get the next non-blank non-call token'*)(*PASCAL module 406*)
                                                                      Repeat
                                                                        get_x_token;
                                                                      Until cur_cmd<>spacer

(*FIN INSERT 'Get the next non-blank non-call token'*)                ;
                                                                      loopbegin If (cur_cmd>other_char)Or(cur_chr>255) Then {not a character}
                                                                                  Begin
                                                                                    back_input;
                                                                                    goto done;
                                                                                  End;
                                                                      If Not more_name(cur_chr) Then goto done;
                                                                      get_x_token;
                                                                    End;
                                                                    done: end_name;
                                                                    name_in_progress := false;
                                                                  End;


(***PASCAL module 529***)
                                                                  Procedure pack_job_name(s:str_number); {|s = '.log'|, |'.dvi'|, or 
  |format_extension|}
                                                                  Begin
                                                                    cur_area := '';
                                                                    cur_ext := s;
                                                                    cur_name := job_name;
                                                                    pack_cur_name;
                                                                  End;


(***PASCAL module 530***)
                                                                  Procedure prompt_file_name(s,e:str_number);

                                                                  Label done;

                                                                  Var k: 0..buf_size; {index into |buffer|}
                                                                  Begin
                                                                    If interaction=scroll_mode Then wake_up_terminal;
                                                                    If s='input file name' Then print_err('I can''t find file `')
(*I can''t find file x*)
                                                                    Else print_err('I can''t write on file `');
(*I can''t write on file x*)
                                                                    print_file_name(cur_name,cur_area,cur_ext);
                                                                    print('''.');
                                                                    If e='.tex' Then show_context;
                                                                    print_nl('Please type another ');
                                                                    print(s);
(*Please type...*)
                                                                    If interaction<scroll_mode Then
                                                                      fatal_error('*** (job aborted, file error in nonstop mode)');
(*job aborted, file error...*)
                                                                    clear_terminal;
                                                                    prompt_input(': ');
(*INSERT 'Scan file name in the buffer'*)(*PASCAL module 531*)
                                                                    Begin
                                                                      begin_name;
                                                                      k := first;
                                                                      While (buffer[k]=' ')And(k<last) Do
                                                                        incr(k);
                                                                      loop
                                                                      Begin
                                                                        If k=last Then goto done;
                                                                        If Not more_name(buffer[k]) Then goto done;
                                                                        incr(k);
                                                                      End;
                                                                      done: end_name;
                                                                    End

(*FIN INSERT 'Scan file name in the buffer'*)                       ;
                                                                    If cur_ext='' Then cur_ext := e;
                                                                    pack_cur_name;
                                                                  End;


(***PASCAL module 534***)
                                                                  Procedure open_log_file;

                                                                  Var old_setting: 0..max_selector; {previous |selector| setting}
                                                                    k: 0..buf_size; {index into |months| and |buffer|}
                                                                    l: 0..buf_size; {end of first input line}
                                                                    months: packed array [1..36] Of char; {abbreviations of month names}
                                                                  Begin
                                                                    old_setting := selector;
                                                                    If job_name=0 Then job_name := 'texput';
(*texput*)
                                                                    pack_job_name('.log');
                                                                    While Not a_open_out(log_file) Do
(*INSERT 'Try to get a different log file name'*)(*PASCAL module 535*)
                                                                      Begin
                                                                        selector := term_only;
                                                                        prompt_file_name('transcript file name','.log');
                                                                      End

(*FIN INSERT 'Try to get a different log file name'*)               ;
                                                                    log_name := a_make_name_string(log_file);
                                                                    selector := log_only;
                                                                    log_opened := true;

(*INSERT 'Print the banner line, including the date and time'*)(*PASCAL module 536*)
                                                                    Begin
                                                                      wlog(banner);
                                                                      slow_print(format_ident);
                                                                      print('  ');
                                                                      print_int(day);
                                                                      print_char(' ');
                                                                      months := 'JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC';
                                                                      For k:=3*month-2 To 3*month Do
                                                                        wlog(months[k]);
                                                                      print_char(' ');
                                                                      print_int(year);
                                                                      print_char(' ');
                                                                      print_two(time Div 60);
                                                                      print_char(':');
                                                                      print_two(time Mod 60);
                                                                    End

(*FIN INSERT 'Print the banner line, including the date and time'*) ;
                                                                    input_stack[input_ptr] := cur_input; {make sure bottom level is in memory}
                                                                    print_nl('**');
(****)
                                                                    l := input_stack[0].limit_field; {last position of first line}
                                                                    If buffer[l]=end_line_char Then decr(l);
                                                                    For k:=1 To l Do
                                                                      print(buffer[k]);
                                                                    print_ln; {now the transcript file contains the first line of input}
                                                                    selector := old_setting+2; {|log_only| or |term_and_log|}
                                                                  End;


(***PASCAL module 537***)
                                                                  Procedure start_input; {\TeX\ will \.[\\input] something}

                                                                  Label done;
                                                                  Begin
                                                                    scan_file_name; {set |cur_name| to desired file name}
                                                                    If cur_ext='' Then cur_ext := '.tex';
                                                                    pack_cur_name;
                                                                    loop
                                                                    Begin
                                                                      begin_file_reading; {set up |cur_file| and new level of input}
                                                                      If a_open_in(cur_file) Then goto done;
                                                                      If cur_area='' Then
                                                                        Begin
                                                                          pack_file_name(cur_name,TEX_area,cur_ext);
                                                                          If a_open_in(cur_file) Then goto done;
                                                                        End;
                                                                      end_file_reading; {remove the level that didn't work}
                                                                      prompt_file_name('input file name','.tex');
                                                                    End;
                                                                    done: name := a_make_name_string(cur_file);
                                                                    If job_name=0 Then
                                                                      Begin
                                                                        job_name := cur_name;
                                                                        open_log_file;
                                                                      End; {|open_log_file| doesn't |show_context|, so |limit| 
    and |loc| needn't be set to meaningful values yet}
                                                                    If term_offset+length(name)>max_print_line-2 Then print_ln
                                                                    Else If (term_offset>0)Or(file_offset>0) Then print_char(' ');
                                                                    print_char('(');
                                                                    incr(open_parens);
                                                                    slow_print(name);
                                                                    update_terminal;
                                                                    state := new_line;
                                                                    If name=str_ptr-1 Then {we can conserve string pool space now}
                                                                      Begin
                                                                        flush_string;
                                                                        name := cur_name;
                                                                      End;

(*INSERT 'Read the first line of the new file'*)(*PASCAL module 538*)
                                                                    Begin
                                                                      line := 1;
                                                                      If input_ln(cur_file,false) Then do_nothing;
                                                                      firm_up_the_line;
                                                                      If end_line_char_inactive Then decr(limit)
                                                                      Else  buffer[limit] := end_line_char;
                                                                      first := limit+1;
                                                                      loc := start;
                                                                    End

(*FIN INSERT 'Read the first line of the new file'*)                ;
                                                                  End;


(***PASCAL module 560***)
                                                                  Function read_font_info(u:pointer;nom,aire:str_number;
                                                                                          s:scaled): internal_font_number; {input a \.[TFM] file}

                                                                  Label done,bad_tfm,not_found;

                                                                  Var k: font_index; {index into |font_info|}
                                                                    file_opened: boolean; {was |tfm_file| successfully opened?}
                                                                    lf,lh,bc,ec,nw,nh,nd,ni,nl,nk,ne,np: halfword;
  {sizes of subfiles}
                                                                    f: internal_font_number; {the new font's number}
                                                                    g: internal_font_number; {the number to return}
                                                                    a,b,c,d: eight_bits; {byte variables}
                                                                    qw: four_quarters;
                                                                    sw: scaled; {accumulators}
                                                                    bch_label: integer; {left boundary start location, or infinity}
                                                                    bchar: 0..256; {right boundary character, or 256}
                                                                    z: scaled; {the design size or the ``at'' size}
                                                                    alpha: integer;
                                                                    beta: 1..16;
  {auxiliary quantities used in fixed-point multiplication}
                                                                  Begin
                                                                    g := null_font;


(*INSERT 'Read and check the font data; |abort| if the \.{TFM} file is malformed; if there''s no room for this font, say so and |goto done|; otherwise |incr(font_ptr)| and |goto done|'*)(*PASCAL module 562*)

(*INSERT 'Open |tfm_file| for input'*)(*PASCAL module 563*)
                                                                    file_opened := false;
                                                                    If aire='' Then pack_file_name(nom,TEX_font_area,'.tfm')
                                                                    Else pack_file_name(nom,aire,'.tfm');
                                                                    If Not b_open_in(tfm_file) Then abort;
                                                                    file_opened := true

(*FIN INSERT 'Open |tfm_file| for input'*)                          ;

(*INSERT 'Read the {\.{TFM}} size fields'*)(*PASCAL module 565*)
                                                                    Begin
                                                                      read_sixteen(lf);
                                                                      fget;
                                                                      read_sixteen(lh);
                                                                      fget;
                                                                      read_sixteen(bc);
                                                                      fget;
                                                                      read_sixteen(ec);
                                                                      If (bc>ec+1)Or(ec>255) Then abort;
                                                                      If bc>255 Then {|bc=256| and |ec=255|}
                                                                        Begin
                                                                          bc := 1;
                                                                          ec := 0;
                                                                        End;
                                                                      fget;
                                                                      read_sixteen(nw);
                                                                      fget;
                                                                      read_sixteen(nh);
                                                                      fget;
                                                                      read_sixteen(nd);
                                                                      fget;
                                                                      read_sixteen(ni);
                                                                      fget;
                                                                      read_sixteen(nl);
                                                                      fget;
                                                                      read_sixteen(nk);
                                                                      fget;
                                                                      read_sixteen(ne);
                                                                      fget;
                                                                      read_sixteen(np);
                                                                      If lf<>6+lh+(ec-bc+1)+nw+nh+nd+ni+nl+nk+ne+np Then abort;
                                                                      If (nw=0)Or(nh=0)Or(nd=0)Or(ni=0) Then abort;
                                                                    End

(*FIN INSERT 'Read the {\.{TFM}} size fields'*)                     ;

(*INSERT 'Use size fields to allocate font information'*)(*PASCAL module 566*)
                                                                    lf := lf-6-lh; {|lf| words should be loaded into |font_info|}
                                                                    If np<7 Then lf := lf+7-np; {at least seven parameters will appear}
                                                                    If (font_ptr=font_max)Or(fmem_ptr+lf>font_mem_size) Then

(*INSERT 'Apologize for not loading the font, |goto done|'*)(*PASCAL module 567*)
                                                                      Begin
                                                                        start_font_error_message;
                                                                        print(' not loaded: Not enough room left');
(*Font x=xx not loaded...*)
                                                                        help4('I''m afraid I won''t be able to make use of this font,')

                                                                        ('because my memory for character-size data is too small.')

                                                                        ('If you''re really stuck, ask a wizard to enlarge me.')

                                                                        ('Or maybe try `I\font<same font id>=<name of loaded font>''.');
                                                                        error;
                                                                        goto done;
                                                                      End

(*FIN INSERT 'Apologize for not loading the font, |goto done|'*)    ;
                                                                    f := font_ptr+1;
                                                                    char_base[f] := fmem_ptr-bc;
                                                                    width_base[f] := char_base[f]+ec+1;
                                                                    height_base[f] := width_base[f]+nw;
                                                                    depth_base[f] := height_base[f]+nh;
                                                                    italic_base[f] := depth_base[f]+nd;
                                                                    lig_kern_base[f] := italic_base[f]+ni;
                                                                    kern_base[f] := lig_kern_base[f]+nl-kern_base_offset;
                                                                    exten_base[f] := kern_base[f]+kern_base_offset+nk;
                                                                    param_base[f] := exten_base[f]+ne

(*FIN INSERT 'Use size fields to allocate font information'*)       ;

(*INSERT 'Read the {\.{TFM}} header'*)(*PASCAL module 568*)
                                                                    Begin
                                                                      If lh<2 Then abort;
                                                                      store_four_quarters(font_check[f]);
                                                                      fget;
                                                                      read_sixteen(z); {this rejects a negative design size}
                                                                      fget;
                                                                      z := z*256+fbyte;
                                                                      fget;
                                                                      z := (z*16)+(fbyte div16);
                                                                      If z<unity Then abort;
                                                                      While lh>2 Do
                                                                        Begin
                                                                          fget;
                                                                          fget;
                                                                          fget;
                                                                          fget;
                                                                          decr(lh); {ignore the rest of the header}
                                                                        End;
                                                                      font_dsize[f] := z;
                                                                      If s<>-1000 Then
                                                                        If s>=0 Then z := s
                                                                      Else z := xn_over_d(z,-s,1000);
                                                                      font_size[f] := z;
                                                                    End

(*FIN INSERT 'Read the {\.{TFM}} header'*)                          ;

(*INSERT 'Read character data'*)(*PASCAL module 569*)
                                                                    For k:=fmem_ptr To width_base[f]-1 Do
                                                                      Begin
                                                                        store_four_quarters(font_info[k].qqqq);
                                                                        If (a>=nw)Or(b Div 16>=nh)Or(b Mod 16>=nd)Or
                                                                           (c Div 4>=ni) Then abort;
                                                                        Case c Mod 4 Of 
                                                                          lig_tag: If d>=nl Then abort;
                                                                          ext_tag: If d>=ne Then abort;
                                                                          list_tag:
(*INSERT 'Check for charlist cycle'*)(*PASCAL module 570*)
                                                                                    Begin
                                                                                      check_byte_range(d);
                                                                                      While d<current_character_being_worked_on Do
                                                                                        Begin
                                                                                          qw := char_info(f)(d);
  {N.B.: not |qi(d)|, since |char_base[f]| hasn't been adjusted yet}
                                                                                          If char_tag(qw)<>list_tag Then goto not_found;
                                                                                          d := qo(rem_byte(qw)); {next character on the list}
                                                                                        End;
                                                                                      If d=current_character_being_worked_on Then abort; {yes, there's a cycle}
                                                                                      not_found:
                                                                                    End

(*FIN INSERT 'Check for charlist cycle'*)                                 ;
                                                                          othercases do_nothing {|no_tag|}
                                                                          endcases;
                                                                        End

(*FIN INSERT 'Read character data'*)                                    ;

(*INSERT 'Read box dimensions'*)(*PASCAL module 571*)
                                                                        Begin
(*INSERT 'Replace |z| by $|z|^\prime$ and compute $\alpha,\beta$'*)(*PASCAL module 572*)
                                                                          Begin
                                                                            alpha := 16;
                                                                            While z>=8388608 Do
                                                                              Begin
                                                                                z := z Div 2;
                                                                                alpha := alpha+alpha;
                                                                              End;
                                                                            beta := 256 Div alpha;
                                                                            alpha := alpha*z;
                                                                          End

(*FIN INSERT 'Replace |z| by $|z|^\prime$ and compute $\alpha,\beta$'*)   ;
                                                                          For k:=width_base[f] To lig_kern_base[f]-1 Do
                                                                            store_scaled(font_info[k].sc);
                                                                          If font_info[width_base[f]].sc<>0 Then abort; {\\[width][0] must be zero}
                                                                          If font_info[height_base[f]].sc<>0 Then abort; {\\[height][0] must be zero}
                                                                          If font_info[depth_base[f]].sc<>0 Then abort; {\\[depth][0] must be zero}
                                                                          If font_info[italic_base[f]].sc<>0 Then abort; {\\[italic][0] must be zero}
                                                                        End

(*FIN INSERT 'Read box dimensions'*)                                    ;

(*INSERT 'Read ligature/kern program'*)(*PASCAL module 573*)
                                                                        bch_label := 32767;
                                                                        bchar := 256;
                                                                        If nl>0 Then
                                                                          Begin
                                                                            For k:=lig_kern_base[f] To kern_base[f]+kern_base_offset-1 Do
                                                                              Begin
                                                                                store_four_quarters(font_info[k].qqqq);
                                                                                If a>128 Then
                                                                                  Begin
                                                                                    If 256*c+d>=nl Then abort;
                                                                                    If a=255 Then If k=lig_kern_base[f] Then bchar := b;
                                                                                  End
                                                                                Else
                                                                                  Begin
                                                                                    If b<>bchar Then check_existence(b);
                                                                                    If c<128 Then check_existence(d) {check ligature}
                                                                                    Else If 256*(c-128)+d>=nk Then abort; {check kern}
                                                                                    If a<128 Then If k-lig_kern_base[f]+a+1>=nl Then abort;
                                                                                  End;
                                                                              End;
                                                                            If a=255 Then bch_label := 256*c+d;
                                                                          End;
                                                                        For k:=kern_base[f]+kern_base_offset To exten_base[f]-1 Do
                                                                          store_scaled(font_info[k].sc);

(*FIN INSERT 'Read ligature/kern program'*)                             ;

(*INSERT 'Read extensible character recipes'*)(*PASCAL module 574*)
                                                                        For k:=exten_base[f] To param_base[f]-1 Do
                                                                          Begin
                                                                            store_four_quarters(font_info[k].qqqq);
                                                                            If a<>0 Then check_existence(a);
                                                                            If b<>0 Then check_existence(b);
                                                                            If c<>0 Then check_existence(c);
                                                                            check_existence(d);
                                                                          End

(*FIN INSERT 'Read extensible character recipes'*)                      ;

(*INSERT 'Read font parameters'*)(*PASCAL module 575*)
                                                                        Begin
                                                                          For k:=1 To np Do
                                                                            If k=1 Then {the |slant| parameter is a pure number}
                                                                              Begin
                                                                                fget;
                                                                                sw := fbyte;
                                                                                If sw>127 Then sw := sw-256;
                                                                                fget;
                                                                                sw := sw*256+fbyte;
                                                                                fget;
                                                                                sw := sw*256+fbyte;
                                                                                fget;
                                                                                font_info[param_base[f]].sc := 
                                                                                                               (sw*16)+(fbyte div16);
                                                                              End
                                                                            Else store_scaled(font_info[param_base[f]+k-1].sc);
                                                                          If eof(tfm_file) Then abort;
                                                                          For k:=np+1 To 7 Do
                                                                            font_info[param_base[f]+k-1].sc := 0;
                                                                        End

(*FIN INSERT 'Read font parameters'*)                                   ;

(*INSERT 'Make final adjustments and |goto done|'*)(*PASCAL module 576*)
                                                                        If np>=7 Then font_params[f] := npelse font_params[f]:=7;
                                                                        hyphen_char[f] := default_hyphen_char;
                                                                        skew_char[f] := default_skew_char;
                                                                        If bch_label<nl Then bchar_label[f] := bch_label+lig_kern_base[f]
                                                                        Else bchar_label[f] := non_address;
                                                                        font_bchar[f] := qi(bchar);
                                                                        font_false_bchar[f] := qi(bchar);
                                                                        If bchar<=ec Then If bchar>=bc Then
                                                                                            Begin
                                                                                              qw := char_info(f)(bchar); {N.B.: not |qi(bchar)|}
                                                                                              If char_exists(qw) Then font_false_bchar[f] := non_char;
                                                                                            End;
                                                                        font_name[f] := nom;
                                                                        font_area[f] := aire;
                                                                        font_bc[f] := bc;
                                                                        font_ec[f] := ec;
                                                                        font_glue[f] := null;
                                                                        adjust(char_base);
                                                                        adjust(width_base);
                                                                        adjust(lig_kern_base);
                                                                        adjust(kern_base);
                                                                        adjust(exten_base);
                                                                        decr(param_base[f]);
                                                                        fmem_ptr := fmem_ptr+lf;
                                                                        font_ptr := f;
                                                                        g := f;
                                                                        goto done

(*FIN INSERT 'Make final adjustments and |goto done|'*)

(*FIN INSERT 'Read and check the font data; |abort| if the \.{TFM} file is malformed; if there''s no room for this font, say so and |goto done|; otherwise |incr(font_ptr)| and |goto done|'*);
                                                                        bad_tfm:
(*INSERT 'Report that the font won''t be loaded'*)(*PASCAL module 561*)
                                                                                 start_font_error_message;
(*Font x=xx not loadable...*)
                                                                        If file_opened Then print(' not loadable: Bad metric (TFM) file')
                                                                        Else print(' not loadable: Metric (TFM) file not found');
                                                                        help5('I wasn''t able to read the size data for this font,')

                                                                        ('so I will ignore the font specification.')

                                                                        ('[Wizards can fix TFM files using TFtoPL/PLtoTF.]')

                                                                        ('You might try inserting a different font spec;')

                                                                        ('e.g., type `I\font<same font id>=<substitute font name>''.');
                                                                        error

(*FIN INSERT 'Report that the font won''t be loaded'*)                  ;
                                                                        done: If file_opened Then b_close(tfm_file);
                                                                        read_font_info := g;
                                                                      End;


(***PASCAL module 581***)
                                                                    Procedure char_warning(f:internal_font_number;c:eight_bits);
                                                                    Begin
                                                                      If tracing_lost_chars>0 Then
                                                                        Begin
                                                                          begin_diagnostic;
                                                                          print_nl('Missing character: There is no ');
(*Missing character*)
                                                                          print_ASCII(c);
                                                                          print(' in font ');
                                                                          slow_print(font_name[f]);
                                                                          print_char('!');
                                                                          end_diagnostic(false);
                                                                        End;
                                                                    End;


(***PASCAL module 582***)
                                                                    Function new_character(f:internal_font_number;c:eight_bits): pointer;

                                                                    Label exit;

                                                                    Var p: pointer; {newly allocated node}
                                                                    Begin
                                                                      If font_bc[f]<=c Then If font_ec[f]>=c Then
                                                                                              If char_exists(char_info(f)(qi(c))) Then
                                                                                                Begin
                                                                                                  p := get_avail;
                                                                                                  font(p) := f;
                                                                                                  character(p) := qi(c);
                                                                                                  new_character := p;
                                                                                                  return;
                                                                                                End;
                                                                      char_warning(f,c);
                                                                      new_character := null;
                                                                      exit:
                                                                    End;


(***PASCAL module 597***)
                                                                    Procedure write_dvi(a,b:dvi_index);

                                                                    Var k: dvi_index;
                                                                    Begin
                                                                      For k:=a To b Do
                                                                        write(dvi_file,dvi_buf[k]);
                                                                    End;


(***PASCAL module 598***)
                                                                    Procedure dvi_swap; {outputs half of the buffer}
                                                                    Begin
                                                                      If dvi_limit=dvi_buf_size Then
                                                                        Begin
                                                                          write_dvi(0,half_buf-1);
                                                                          dvi_limit := half_buf;
                                                                          dvi_offset := dvi_offset+dvi_buf_size;
                                                                          dvi_ptr := 0;
                                                                        End
                                                                      Else
                                                                        Begin
                                                                          write_dvi(half_buf,dvi_buf_size-1);
                                                                          dvi_limit := dvi_buf_size;
                                                                        End;
                                                                      dvi_gone := dvi_gone+half_buf;
                                                                    End;


(***PASCAL module 600***)
                                                                    Procedure dvi_four(x:integer);
                                                                    Begin
                                                                      If x>=0 Then dvi_out(x Div 16777216)
                                                                      Else
                                                                        Begin
                                                                          x := x+1073741824;
                                                                          x := x+1073741824;
                                                                          dvi_out((x Div 16777216) + 128);
                                                                        End;
                                                                      x := x Mod 16777216;
                                                                      dvi_out(x Div 65536);
                                                                      x := x Mod 65536;
                                                                      dvi_out(x Div 256);
                                                                      dvi_out(x Mod 256);
                                                                    End;


(***PASCAL module 601***)
                                                                    Procedure dvi_pop(l:integer);
                                                                    Begin
                                                                      If (l=dvi_offset+dvi_ptr)And(dvi_ptr>0) Then decr(dvi_ptr)
                                                                      Else dvi_out(pop);
                                                                    End;


(***PASCAL module 602***)
                                                                    Procedure dvi_font_def(f:internal_font_number);

                                                                    Var k: pool_pointer; {index into |str_pool|}
                                                                    Begin
                                                                      dvi_out(fnt_def1);
                                                                      dvi_out(f-font_base-1);

                                                                      dvi_out(qo(font_check[f].b0));
                                                                      dvi_out(qo(font_check[f].b1));
                                                                      dvi_out(qo(font_check[f].b2));
                                                                      dvi_out(qo(font_check[f].b3));

                                                                      dvi_four(font_size[f]);
                                                                      dvi_four(font_dsize[f]);

                                                                      dvi_out(length(font_area[f]));
                                                                      dvi_out(length(font_name[f]));

(*INSERT 'Output the font name whose internal number is |f|'*)(*PASCAL module 603*)
                                                                      For k:=str_start[font_area[f]] To str_start[font_area[f]+1]-1 Do
                                                                        dvi_out(so(str_pool[k]));
                                                                      For k:=str_start[font_name[f]] To str_start[font_name[f]+1]-1 Do
                                                                        dvi_out(so(str_pool[k]))

(*FIN INSERT 'Output the font name whose internal number is |f|'*)    ;
                                                                    End;


(***PASCAL module 607***)
                                                                    Procedure movement(w:scaled;o:eight_bits);

                                                                    Label exit,found,not_found,2,1;

                                                                    Var mstate: small_number; {have we seen a |y| or |z|?}
                                                                      p,q: pointer; {current and top nodes on the stack}
                                                                      k: integer; {index into |dvi_buf|, modulo |dvi_buf_size|}
                                                                    Begin
                                                                      q := get_node(movement_node_size); {new node for the top of the stack}
                                                                      width(q) := w;
                                                                      location(q) := dvi_offset+dvi_ptr;
                                                                      If o=down1 Then
                                                                        Begin
                                                                          link(q) := down_ptr;
                                                                          down_ptr := q;
                                                                        End
                                                                      Else
                                                                        Begin
                                                                          link(q) := right_ptr;
                                                                          right_ptr := q;
                                                                        End;

(*INSERT 'Look at the other stack entries until deciding what sort of \.{DVI} command to generate; |goto found| if node |p| is a ``hit'''''*)(*PASCAL module 611*)
                                                                      p := link(q);
                                                                      mstate := none_seen;
                                                                      While p<>null Do
                                                                        Begin
                                                                          If width(p)=w Then
(*INSERT 'Consider a node with matching width; |goto found| if it''s a hit'*)(*PASCAL module 612*)
                                                                            Case mstate+info(p) Of 
                                                                              none_seen+yz_OK,none_seen+y_OK,z_seen+yz_OK,z_seen+y_OK:(**);

                                                                              If location(p)<dvi_gone Then goto not_found
                                                                              Else
(*INSERT 'Change buffered instruction to |y| or |w| and |goto found|'*)(*PASCAL module 613*)
                                                                                Begin
                                                                                  k := location(p)-dvi_offset;
                                                                                  If k<0 Then k := k+dvi_buf_size;
                                                                                  dvi_buf[k] := dvi_buf[k]+y1-down1;
                                                                                  info(p) := y_here;
                                                                                  goto found;
                                                                                End

(*FIN INSERT 'Change buffered instruction to |y| or |w| and |goto found|'*)   ;
                                                                              none_seen+z_OK,y_seen+yz_OK,y_seen+z_OK:(**);

                                                                              If location(p)<dvi_gone Then goto not_found
                                                                              Else
(*INSERT 'Change buffered instruction to |z| or |x| and |goto found|'*)(*PASCAL module 614*)
                                                                                Begin
                                                                                  k := location(p)-dvi_offset;
                                                                                  If k<0 Then k := k+dvi_buf_size;
                                                                                  dvi_buf[k] := dvi_buf[k]+z1-down1;
                                                                                  info(p) := z_here;
                                                                                  goto found;
                                                                                End

(*FIN INSERT 'Change buffered instruction to |z| or |x| and |goto found|'*)   ;
                                                                              none_seen+y_here,none_seen+z_here,y_seen+z_here,z_seen+y_here: goto found;
                                                                              othercases do_nothing
                                                                              endcases

(*FIN INSERT 'Consider a node with matching width; |goto found| if it''s a hit'*)
                                                                              Else  Case mstate+info(p) Of 
                                                                                      none_seen+y_here: mstate := y_seen;
                                                                                      none_seen+z_here: mstate := z_seen;
                                                                                      y_seen+z_here,z_seen+y_here: goto not_found;
                                                                                      othercases do_nothing
                                                                                      endcases;
                                                                                      p := link(p);
                                                                                End;
                                                                              not_found:

(*FIN INSERT 'Look at the other stack entries until deciding what sort of \.{DVI} command to generate; |goto found| if node |p| is a ``hit'''''*);

(*INSERT 'Generate a |down| or |right| command for |w| and |return|'*)(*PASCAL module 610*)
                                                                              info(q) := yz_OK;
                                                                              If abs(w)>=8388608 Then
                                                                                Begin
                                                                                  dvi_out(o+3); {|down4| or |right4|}
                                                                                  dvi_four(w);
                                                                                  return;
                                                                                End;
                                                                              If abs(w)>=32768 Then
                                                                                Begin
                                                                                  dvi_out(o+2); {|down3| or |right3|}
                                                                                  If w<0 Then w := w+16777216;
                                                                                  dvi_out(w Div 65536);
                                                                                  w := w Mod 65536;
                                                                                  goto 2;
                                                                                End;
                                                                              If abs(w)>=128 Then
                                                                                Begin
                                                                                  dvi_out(o+1); {|down2| or |right2|}
                                                                                  If w<0 Then w := w+65536;
                                                                                  goto 2;
                                                                                End;
                                                                              dvi_out(o); {|down1| or |right1|}
                                                                              If w<0 Then w := w+256;
                                                                              goto 1;
                                                                              2: dvi_out(w Div 256);
                                                                              1: dvi_out(w Mod 256);
                                                                              return

(*FIN INSERT 'Generate a |down| or |right| command for |w| and |return|'*)    ;
                                                                              found:
(*INSERT 'Generate a |y0| or |z0| command in order to reuse a previous appearance of~|w|'*)(*PASCAL module 609*)
                                                                                     info(q) := info(p);
                                                                              If info(q)=y_here Then
                                                                                Begin
                                                                                  dvi_out(o+y0-down1); {|y0| or |w0|}
                                                                                  While link(q)<>p Do
                                                                                    Begin
                                                                                      q := link(q);
                                                                                      Case info(q) Of 
                                                                                        yz_OK: info(q) := z_OK;
                                                                                        y_OK: info(q) := d_fixed;
                                                                                        othercases do_nothing
                                                                                        endcases;
                                                                                      End;
                                                                                    End
                                                                                    Else
                                                                                      Begin
                                                                                        dvi_out(o+z0-down1); {|z0| or |x0|}
                                                                                        While link(q)<>p Do
                                                                                          Begin
                                                                                            q := link(q);
                                                                                            Case info(q) Of 
                                                                                              yz_OK: info(q) := y_OK;
                                                                                              z_OK: info(q) := d_fixed;
                                                                                              othercases do_nothing
                                                                                              endcases;
                                                                                            End;
                                                                                          End

(*FIN INSERT 'Generate a |y0| or |z0| command in order to reuse a previous appearance of~|w|'*);
                                                                                        exit:
                                                                                      End;


(***PASCAL module 615***)
                                                                                  Procedure prune_movements(l:integer);
  {delete movement nodes with |location>=l|}

                                                                                  Label done,exit;

                                                                                  Var p: pointer; {node being deleted}
                                                                                  Begin
                                                                                    While down_ptr<>null Do
                                                                                      Begin
                                                                                        If location(down_ptr)<l Then goto done;
                                                                                        p := down_ptr;
                                                                                        down_ptr := link(p);
                                                                                        free_node(p,movement_node_size);
                                                                                      End;
                                                                                    done: While right_ptr<>null Do
                                                                                            Begin
                                                                                              If location(right_ptr)<l Then return;
                                                                                              p := right_ptr;
                                                                                              right_ptr := link(p);
                                                                                              free_node(p,movement_node_size);
                                                                                            End;
                                                                                    exit:
                                                                                  End;


(***PASCAL module 618***)
                                                                                  Procedure vlist_out;
                                                                                  forward; {|hlist_out| and |vlist_out| are mutually 
  recursive}


(***PASCAL module 619***)
(*\4*)
(*INSERT 'Declare procedures needed in |hlist_out|, |vlist_out|'*)(*PASCAL module 1368*)
                                                                                  Procedure special_out(p:pointer);

                                                                                  Var old_setting: 0..max_selector; {holds print |selector|}
                                                                                    k: pool_pointer; {index into |str_pool|}
                                                                                  Begin
                                                                                    synch_h;
                                                                                    synch_v;

                                                                                    old_setting := selector;
                                                                                    selector := new_string;
                                                                                    show_token_list(link(write_tokens(p)),null,pool_size-pool_ptr);
                                                                                    selector := old_setting;
                                                                                    str_room(1);
                                                                                    If cur_length<256 Then
                                                                                      Begin
                                                                                        dvi_out(xxx1);
                                                                                        dvi_out(cur_length);
                                                                                      End
                                                                                    Else
                                                                                      Begin
                                                                                        dvi_out(xxx4);
                                                                                        dvi_four(cur_length);
                                                                                      End;
                                                                                    For k:=str_start[str_ptr] To pool_ptr-1 Do
                                                                                      dvi_out(so(str_pool[k]));
                                                                                    pool_ptr := str_start[str_ptr]; {erase the string}
                                                                                  End;

(*PASCAL module 1370*)
                                                                                  Procedure write_out(p:pointer);

                                                                                  Var old_setting: 0..max_selector; {holds print |selector|}
                                                                                    old_mode: integer; {saved |mode|}
                                                                                    j: small_number; {write stream number}
                                                                                    q,r: pointer; {temporary variables for list manipulation}
                                                                                  Begin
(*INSERT 'Expand macros in the token list and make |link(def_ref)| point to the result'*)(*PASCAL module 1371*)
                                                                                    q := get_avail;
                                                                                    info(q) := right_brace_token+'}';

                                                                                    r := get_avail;
                                                                                    link(q) := r;
                                                                                    info(r) := end_write_token;
                                                                                    ins_list(q);

                                                                                    begin_token_list(write_tokens(p),write_text);

                                                                                    q := get_avail;
                                                                                    info(q) := left_brace_token+'{';
                                                                                    ins_list(q);
{now we're ready to scan 
  `\.\[$\langle\,$token list$\,\rangle$\.[\] \\endwrite]'}
                                                                                    old_mode := mode;
                                                                                    mode := 0;
  {disable \.[\\prevdepth], \.[\\spacefactor], \.[\\lastskip], \.[\\prevgraf]}
                                                                                    cur_cs := write_loc;
                                                                                    q := scan_toks(false,true); {expand macros, etc.}
                                                                                    get_token;
                                                                                    If cur_tok<>end_write_token Then

(*INSERT 'Recover from an unbalanced write command'*)(*PASCAL module 1372*)
                                                                                      Begin
                                                                                        print_err('Unbalanced write command');
(*Unbalanced write...*)
                                                                                        help2('On this page there''s a \write with fewer real {''s than }''s.')

                                                                                        ('I can''t handle that very well; good luck.');
                                                                                        error;
                                                                                        Repeat
                                                                                          get_token;
                                                                                        Until cur_tok=end_write_token;
                                                                                      End

(*FIN INSERT 'Recover from an unbalanced write command'*)                           ;
                                                                                    mode := old_mode;
                                                                                    end_token_list {conserve stack space}

(*FIN INSERT 'Expand macros in the token list and make |link(def_ref)| point to the result'*);
                                                                                    old_setting := selector;
                                                                                    j := write_stream(p);
                                                                                    If write_open[j] Then selector := j
                                                                                    Else
                                                                                      Begin {write to the terminal if file isn't open}
                                                                                        If (j=17)And(selector=term_and_log) Then selector := log_only;
                                                                                        print_nl('');
                                                                                      End;
                                                                                    token_show(def_ref);
                                                                                    print_ln;
                                                                                    flush_list(def_ref);
                                                                                    selector := old_setting;
                                                                                  End;

(*PASCAL module 1373*)
                                                                                  Procedure out_what(p:pointer);

                                                                                  Var j: small_number; {write stream number}
                                                                                  Begin
                                                                                    Case subtype(p) Of 
                                                                                      open_node,write_node,close_node:
(*INSERT 'Do some work that has been queued up for \.{\\write}'*)(*PASCAL module 1374*)
                                                                                                                       If Not doing_leaders Then
                                                                                                                         Begin
                                                                                                                           j := write_stream(p);
                                                                                                                           If subtype(p)=write_node Then write_out(p)
                                                                                                                           Else
                                                                                                                             Begin
                                                                                                                               If write_open[j] Then a_close(write_file[j]);
                                                                                                                               If subtype(p)=close_node Then write_open[j] := false
                                                                                                                               Else If j<16 Then
                                                                                                                                      Begin
                                                                                                                                        cur_name := open_name(p);
                                                                                                                                        cur_area := open_area(p);
                                                                                                                                        cur_ext := open_ext(p);
                                                                                                                                        If cur_ext='' Then cur_ext := '.tex';
                                                                                                                                        pack_cur_name;
                                                                                                                                        While Not a_open_out(write_file[j]) Do
                                                                                                                                          prompt_file_name('output file name','.tex');
                                                                                                                                        write_open[j] := true;
                                                                                                                                      End;
                                                                                                                             End;
                                                                                                                         End

(*FIN INSERT 'Do some work that has been queued up for \.{\\write}'*)                 ;
                                                                                      special_node: special_out(p);
                                                                                      language_node: do_nothing;
                                                                                      othercases confusion('ext4')
(*this can''t happen ext4][\quad ext4*)
                                                                                      endcases;
                                                                                    End;

(*FIN INSERT 'Declare procedures needed in |hlist_out|, |vlist_out|'*)(*@>
*)(*@>
*)
                                                                                    Procedure hlist_out; {output an |hlist_node| box}

                                                                                    Label reswitch, move_past, fin_rule, next_p;

                                                                                    Var base_line: scaled; {the baseline coordinate for this box}
                                                                                      left_edge: scaled; {the left coordinate for this box}
                                                                                      save_h,save_v: scaled; {what |dvi_h| and |dvi_v| should pop to}
                                                                                      this_box: pointer; {pointer to containing box}
                                                                                      g_order: glue_ord; {applicable order of infinity for glue}
                                                                                      g_sign: normal..shrinking; {selects type of glue}
                                                                                      p: pointer; {current position in the hlist}
                                                                                      save_loc: integer; {\.[DVI] byte location upon entry}
                                                                                      leader_box: pointer; {the leader box being replicated}
                                                                                      leader_wd: scaled; {width of leader box being replicated}
                                                                                      lx: scaled; {extra space between leader boxes}
                                                                                      outer_doing_leaders: boolean; {were we doing leaders?}
                                                                                      edge: scaled; {left edge of sub-box, or right edge of leader space}
                                                                                      glue_temp: real; {glue value before rounding}
                                                                                      cur_glue: real; {glue seen so far}
                                                                                      cur_g: scaled; {rounded equivalent of |cur_glue| times the glue ratio}
                                                                                    Begin
                                                                                      cur_g := 0;
                                                                                      cur_glue := float_constant(0);
                                                                                      this_box := temp_ptr;
                                                                                      g_order := glue_order(this_box);
                                                                                      g_sign := glue_sign(this_box);
                                                                                      p := list_ptr(this_box);
                                                                                      incr(cur_s);
                                                                                      If cur_s>0 Then dvi_out(push);
                                                                                      If cur_s>max_push Then max_push := cur_s;
                                                                                      save_loc := dvi_offset+dvi_ptr;
                                                                                      base_line := cur_v;
                                                                                      left_edge := cur_h;
                                                                                      While p<>null Do
(*INSERT 'Output node |p| for |hlist_out| and move to the next node, maintaining the condition |cur_v=base_line|'*)(*PASCAL module 620*)
                                                                                        reswitch: If is_char_node(p) Then
                                                                                                    Begin
                                                                                                      synch_h;
                                                                                                      synch_v;
                                                                                                      Repeat
                                                                                                        f := font(p);
                                                                                                        c := character(p);
                                                                                                        If f<>dvi_f Then
(*INSERT 'Change font |dvi_f| to |f|'*)(*PASCAL module 621*)
                                                                                                          Begin
                                                                                                            If Not font_used[f] Then
                                                                                                              Begin
                                                                                                                dvi_font_def(f);
                                                                                                                font_used[f] := true;
                                                                                                              End;
                                                                                                            If f<=64+font_base Then dvi_out(f-font_base-1+fnt_num_0)
                                                                                                            Else
                                                                                                              Begin
                                                                                                                dvi_out(fnt1);
                                                                                                                dvi_out(f-font_base-1);
                                                                                                              End;
                                                                                                            dvi_f := f;
                                                                                                          End

(*FIN INSERT 'Change font |dvi_f| to |f|'*)                                                             ;
                                                                                                        If c>=qi(128) Then dvi_out(set1);
                                                                                                        dvi_out(qo(c));

                                                                                                        cur_h := cur_h+char_width(f)(char_info(f)(c));
                                                                                                        p := link(p);
                                                                                                      Until Not is_char_node(p);
                                                                                                      dvi_h := cur_h;
                                                                                                    End
                                                                                                  Else
(*INSERT 'Output the non-|char_node| |p| for |hlist_out| and move to the next node'*)(*PASCAL module 622*)
                                                                                                    Begin
                                                                                                      Case Type(p) Of 
                                                                                                        hlist_node,vlist_node:
(*INSERT 'Output a box in an hlist'*)(*PASCAL module 623*)
                                                                                                                               If list_ptr(p)=null Then cur_h := cur_h+width(p)
                                                                                                                               Else
                                                                                                                                 Begin
                                                                                                                                   save_h := dvi_h;
                                                                                                                                   save_v := dvi_v;
                                                                                                                                   cur_v := base_line+shift_amount(p); {shift the box down}
                                                                                                                                   temp_ptr := p;
                                                                                                                                   edge := cur_h;
                                                                                                                                   If Type(p)=vlist_node Then vlist_outelse hlist_out;
                                                                                                                                   dvi_h := save_h;
                                                                                                                                   dvi_v := save_v;
                                                                                                                                   cur_h := edge+width(p);
                                                                                                                                   cur_v := base_line;
                                                                                                                                 End

(*FIN INSERT 'Output a box in an hlist'*)                                                               ;
                                                                                                        rule_node:
                                                                                                                   Begin
                                                                                                                     rule_ht := height(p);
                                                                                                                     rule_dp := depth(p);
                                                                                                                     rule_wd := width(p);
                                                                                                                     goto fin_rule;
                                                                                                                   End;
                                                                                                        whatsit_node:
(*INSERT 'Output the whatsit node |p| in an hlist'*)(*PASCAL module 1367*)
                                                                                                                      out_what(p)

(*FIN INSERT 'Output the whatsit node |p| in an hlist'*)                                                ;
                                                                                                        glue_node:
(*INSERT 'Move right or output leaders'*)(*PASCAL module 625*)
                                                                                                                   Begin
                                                                                                                     g := glue_ptr(p);
                                                                                                                     rule_wd := width(g)-cur_g;
                                                                                                                     If g_sign<>normal Then
                                                                                                                       Begin
                                                                                                                         If g_sign=stretching Then
                                                                                                                           Begin
                                                                                                                             If stretch_order(g)=g_order Then
                                                                                                                               Begin
                                                                                                                                 cur_glue := cur_glue+stretch(g);
                                                                                                                                 vet_glue(float(glue_set(this_box))*cur_glue);
(*real multiplication*)
                                                                                                                                 cur_g := round(glue_temp);
                                                                                                                               End;
                                                                                                                           End
                                                                                                                         Else If shrink_order(g)=g_order Then
                                                                                                                                Begin
                                                                                                                                  cur_glue := cur_glue-shrink(g);
                                                                                                                                  vet_glue(float(glue_set(this_box))*cur_glue);
                                                                                                                                  cur_g := round(glue_temp);
                                                                                                                                End;
                                                                                                                       End;
                                                                                                                     rule_wd := rule_wd+cur_g;
                                                                                                                     If subtype(p)>=a_leaders Then

(*INSERT 'Output leaders in an hlist, |goto fin_rule| if a rule or to |next_p| if done'*)(*PASCAL module 626*)
                                                                                                                       Begin
                                                                                                                         leader_box := leader_ptr(p);
                                                                                                                         If Type(leader_box)=rule_node Then
                                                                                                                           Begin
                                                                                                                             rule_ht := height(leader_box);
                                                                                                                             rule_dp := depth(leader_box);
                                                                                                                             goto fin_rule;
                                                                                                                           End;
                                                                                                                         leader_wd := width(leader_box);
                                                                                                                         If (leader_wd>0)And(rule_wd>0) Then
                                                                                                                           Begin
                                                                                                                             rule_wd := rule_wd+10; {compensate for floating-point rounding}
                                                                                                                             edge := cur_h+rule_wd;
                                                                                                                             lx := 0;

(*INSERT 'Let |cur_h| be the position of the first box, and set |leader_wd+lx| to the spacing between corresponding parts of boxes'*)(*PASCAL module 627*)
                                                                                                                             If subtype(p)=a_leaders Then
                                                                                                                               Begin
                                                                                                                                 save_h := cur_h;
                                                                                                                                 cur_h := left_edge+leader_wd*((cur_h-left_edge)Div leader_wd);
                                                                                                                                 If cur_h<save_h Then cur_h := cur_h+leader_wd;
                                                                                                                               End
                                                                                                                             Else
                                                                                                                               Begin
                                                                                                                                 lq := rule_wd Div leader_wd; {the number of box copies}
                                                                                                                                 lr := rule_wd Mod leader_wd; {the remaining space}
                                                                                                                                 If subtype(p)=c_leaders Then cur_h := cur_h+(lr Div 2)
                                                                                                                                 Else
                                                                                                                                   Begin
                                                                                                                                     lx := lr Div (lq+1);
                                                                                                                                     cur_h := cur_h+((lr-(lq-1)*lx) Div 2);
                                                                                                                                   End;
                                                                                                                               End

(*FIN INSERT 'Let |cur_h| be the position of the first box, and set |leader_wd+lx| to the spacing between corresponding parts of boxes'*);
                                                                                                                             While cur_h+leader_wd<=edge Do

(*INSERT 'Output a leader box at |cur_h|, then advance |cur_h| by |leader_wd+lx|'*)(*PASCAL module 628*)
                                                                                                                               Begin
                                                                                                                                 cur_v := base_line+shift_amount(leader_box);
                                                                                                                                 synch_v;
                                                                                                                                 save_v := dvi_v;

                                                                                                                                 synch_h;
                                                                                                                                 save_h := dvi_h;
                                                                                                                                 temp_ptr := leader_box;
                                                                                                                                 outer_doing_leaders := doing_leaders;
                                                                                                                                 doing_leaders := true;
                                                                                                                                 If Type(leader_box)=vlist_node Then vlist_outelse hlist_out;
                                                                                                                                 doing_leaders := outer_doing_leaders;
                                                                                                                                 dvi_v := save_v;
                                                                                                                                 dvi_h := save_h;
                                                                                                                                 cur_v := base_line;
                                                                                                                                 cur_h := save_h+leader_wd+lx;
                                                                                                                               End

(*FIN INSERT 'Output a leader box at |cur_h|, then advance |cur_h| by |leader_wd+lx|'*)                                      ;
                                                                                                                             cur_h := edge-10;
                                                                                                                             goto next_p;
                                                                                                                           End;
                                                                                                                       End

(*FIN INSERT 'Output leaders in an hlist, |goto fin_rule| if a rule or to |next_p| if done'*)                        ;
                                                                                                                     goto move_past;
                                                                                                                   End

(*FIN INSERT 'Move right or output leaders'*)                                                           ;
                                                                                                        kern_node,math_node: cur_h := cur_h+width(p);
                                                                                                        ligature_node:
(*INSERT 'Make node |p| look like a |char_node| and |goto reswitch|'*)(*PASCAL module 652*)
                                                                                                                       Begin
                                                                                                                         mem[lig_trick] := mem[lig_char(p)];
                                                                                                                         link(lig_trick) := link(p);
                                                                                                                         p := lig_trick;
                                                                                                                         goto reswitch;
                                                                                                                       End

(*FIN INSERT 'Make node |p| look like a |char_node| and |goto reswitch|'*)                              ;
                                                                                                        othercases do_nothing
                                                                                                        endcases;

                                                                                                        goto next_p;
                                                                                                        fin_rule:
(*INSERT 'Output a rule in an hlist'*)(*PASCAL module 624*)
                                                                                                                  If is_running(rule_ht) Then rule_ht := height(this_box);
                                                                                                        If is_running(rule_dp) Then rule_dp := depth(this_box);
                                                                                                        rule_ht := rule_ht+rule_dp; {this is the rule thickness}
                                                                                                        If (rule_ht>0)And(rule_wd>0) Then {we don't output empty rules}
                                                                                                          Begin
                                                                                                            synch_h;
                                                                                                            cur_v := base_line+rule_dp;
                                                                                                            synch_v;
                                                                                                            dvi_out(set_rule);
                                                                                                            dvi_four(rule_ht);
                                                                                                            dvi_four(rule_wd);
                                                                                                            cur_v := base_line;
                                                                                                            dvi_h := dvi_h+rule_wd;
                                                                                                          End

(*FIN INSERT 'Output a rule in an hlist'*)                                                              ;
                                                                                                        move_past: cur_h := cur_h+rule_wd;
                                                                                                        next_p: p := link(p);
                                                                                                      End

(*FIN INSERT 'Output the non-|char_node| |p| for |hlist_out| and move to the next node'*)

(*FIN INSERT 'Output node |p| for |hlist_out| and move to the next node, maintaining the condition |cur_v=base_line|'*);
                                                                                                      prune_movements(save_loc);
                                                                                                      If cur_s>0 Then dvi_pop(save_loc);
                                                                                                      decr(cur_s);
                                                                                                    End;


(***PASCAL module 629***)
                                                                                      Procedure vlist_out; {output a |vlist_node| box}

                                                                                      Label move_past, fin_rule, next_p;

                                                                                      Var left_edge: scaled; {the left coordinate for this box}
                                                                                        top_edge: scaled; {the top coordinate for this box}
                                                                                        save_h,save_v: scaled; {what |dvi_h| and |dvi_v| should pop to}
                                                                                        this_box: pointer; {pointer to containing box}
                                                                                        g_order: glue_ord; {applicable order of infinity for glue}
                                                                                        g_sign: normal..shrinking; {selects type of glue}
                                                                                        p: pointer; {current position in the vlist}
                                                                                        save_loc: integer; {\.[DVI] byte location upon entry}
                                                                                        leader_box: pointer; {the leader box being replicated}
                                                                                        leader_ht: scaled; {height of leader box being replicated}
                                                                                        lx: scaled; {extra space between leader boxes}
                                                                                        outer_doing_leaders: boolean; {were we doing leaders?}
                                                                                        edge: scaled; {bottom boundary of leader space}
                                                                                        glue_temp: real; {glue value before rounding}
                                                                                        cur_glue: real; {glue seen so far}
                                                                                        cur_g: scaled; {rounded equivalent of |cur_glue| times the glue ratio}
                                                                                      Begin
                                                                                        cur_g := 0;
                                                                                        cur_glue := float_constant(0);
                                                                                        this_box := temp_ptr;
                                                                                        g_order := glue_order(this_box);
                                                                                        g_sign := glue_sign(this_box);
                                                                                        p := list_ptr(this_box);
                                                                                        incr(cur_s);
                                                                                        If cur_s>0 Then dvi_out(push);
                                                                                        If cur_s>max_push Then max_push := cur_s;
                                                                                        save_loc := dvi_offset+dvi_ptr;
                                                                                        left_edge := cur_h;
                                                                                        cur_v := cur_v-height(this_box);
                                                                                        top_edge := cur_v;
                                                                                        While p<>null Do
(*INSERT 'Output node |p| for |vlist_out| and move to the next node, maintaining the condition |cur_h=left_edge|'*)(*PASCAL module 630*)
                                                                                          Begin
                                                                                            If is_char_node(p) Then confusion('vlistout')
(*this can''t happen vlistout][\quad vlistout*)
                                                                                            Else
(*INSERT 'Output the non-|char_node| |p| for |vlist_out|'*)(*PASCAL module 631*)
                                                                                              Begin
                                                                                                Case Type(p) Of 
                                                                                                  hlist_node,vlist_node:
(*INSERT 'Output a box in a vlist'*)(*PASCAL module 632*)
                                                                                                                         If list_ptr(p)=null Then cur_v := cur_v+height(p)+depth(p)
                                                                                                                         Else
                                                                                                                           Begin
                                                                                                                             cur_v := cur_v+height(p);
                                                                                                                             synch_v;
                                                                                                                             save_h := dvi_h;
                                                                                                                             save_v := dvi_v;
                                                                                                                             cur_h := left_edge+shift_amount(p); {shift the box right}
                                                                                                                             temp_ptr := p;
                                                                                                                             If Type(p)=vlist_node Then vlist_outelse hlist_out;
                                                                                                                             dvi_h := save_h;
                                                                                                                             dvi_v := save_v;
                                                                                                                             cur_v := save_v+depth(p);
                                                                                                                             cur_h := left_edge;
                                                                                                                           End

(*FIN INSERT 'Output a box in a vlist'*)                                                          ;
                                                                                                  rule_node:
                                                                                                             Begin
                                                                                                               rule_ht := height(p);
                                                                                                               rule_dp := depth(p);
                                                                                                               rule_wd := width(p);
                                                                                                               goto fin_rule;
                                                                                                             End;
                                                                                                  whatsit_node:
(*INSERT 'Output the whatsit node |p| in a vlist'*)(*PASCAL module 1366*)
                                                                                                                out_what(p)

(*FIN INSERT 'Output the whatsit node |p| in a vlist'*)                                           ;
                                                                                                  glue_node:
(*INSERT 'Move down or output leaders'*)(*PASCAL module 634*)
                                                                                                             Begin
                                                                                                               g := glue_ptr(p);
                                                                                                               rule_ht := width(g)-cur_g;
                                                                                                               If g_sign<>normal Then
                                                                                                                 Begin
                                                                                                                   If g_sign=stretching Then
                                                                                                                     Begin
                                                                                                                       If stretch_order(g)=g_order Then
                                                                                                                         Begin
                                                                                                                           cur_glue := cur_glue+stretch(g);
                                                                                                                           vet_glue(float(glue_set(this_box))*cur_glue);
(*real multiplication*)
                                                                                                                           cur_g := round(glue_temp);
                                                                                                                         End;
                                                                                                                     End
                                                                                                                   Else If shrink_order(g)=g_order Then
                                                                                                                          Begin
                                                                                                                            cur_glue := cur_glue-shrink(g);
                                                                                                                            vet_glue(float(glue_set(this_box))*cur_glue);
                                                                                                                            cur_g := round(glue_temp);
                                                                                                                          End;
                                                                                                                 End;
                                                                                                               rule_ht := rule_ht+cur_g;
                                                                                                               If subtype(p)>=a_leaders Then

(*INSERT 'Output leaders in a vlist, |goto fin_rule| if a rule or to |next_p| if done'*)(*PASCAL module 635*)
                                                                                                                 Begin
                                                                                                                   leader_box := leader_ptr(p);
                                                                                                                   If Type(leader_box)=rule_node Then
                                                                                                                     Begin
                                                                                                                       rule_wd := width(leader_box);
                                                                                                                       rule_dp := 0;
                                                                                                                       goto fin_rule;
                                                                                                                     End;
                                                                                                                   leader_ht := height(leader_box)+depth(leader_box);
                                                                                                                   If (leader_ht>0)And(rule_ht>0) Then
                                                                                                                     Begin
                                                                                                                       rule_ht := rule_ht+10; {compensate for floating-point rounding}
                                                                                                                       edge := cur_v+rule_ht;
                                                                                                                       lx := 0;

(*INSERT 'Let |cur_v| be the position of the first box, and set |leader_ht+lx| to the spacing between corresponding parts of boxes'*)(*PASCAL module 636*)
                                                                                                                       If subtype(p)=a_leaders Then
                                                                                                                         Begin
                                                                                                                           save_v := cur_v;
                                                                                                                           cur_v := top_edge+leader_ht*((cur_v-top_edge)Div leader_ht);
                                                                                                                           If cur_v<save_v Then cur_v := cur_v+leader_ht;
                                                                                                                         End
                                                                                                                       Else
                                                                                                                         Begin
                                                                                                                           lq := rule_ht Div leader_ht; {the number of box copies}
                                                                                                                           lr := rule_ht Mod leader_ht; {the remaining space}
                                                                                                                           If subtype(p)=c_leaders Then cur_v := cur_v+(lr Div 2)
                                                                                                                           Else
                                                                                                                             Begin
                                                                                                                               lx := lr Div (lq+1);
                                                                                                                               cur_v := cur_v+((lr-(lq-1)*lx) Div 2);
                                                                                                                             End;
                                                                                                                         End

(*FIN INSERT 'Let |cur_v| be the position of the first box, and set |leader_ht+lx| to the spacing between corresponding parts of boxes'*);
                                                                                                                       While cur_v+leader_ht<=edge Do

(*INSERT 'Output a leader box at |cur_v|, then advance |cur_v| by |leader_ht+lx|'*)(*PASCAL module 637*)
                                                                                                                         Begin
                                                                                                                           cur_h := left_edge+shift_amount(leader_box);
                                                                                                                           synch_h;
                                                                                                                           save_h := dvi_h;

                                                                                                                           cur_v := cur_v+height(leader_box);
                                                                                                                           synch_v;
                                                                                                                           save_v := dvi_v;
                                                                                                                           temp_ptr := leader_box;
                                                                                                                           outer_doing_leaders := doing_leaders;
                                                                                                                           doing_leaders := true;
                                                                                                                           If Type(leader_box)=vlist_node Then vlist_outelse hlist_out;
                                                                                                                           doing_leaders := outer_doing_leaders;
                                                                                                                           dvi_v := save_v;
                                                                                                                           dvi_h := save_h;
                                                                                                                           cur_h := left_edge;
                                                                                                                           cur_v := save_v-height(leader_box)+leader_ht+lx;
                                                                                                                         End

(*FIN INSERT 'Output a leader box at |cur_v|, then advance |cur_v| by |leader_ht+lx|'*)                                ;
                                                                                                                       cur_v := edge-10;
                                                                                                                       goto next_p;
                                                                                                                     End;
                                                                                                                 End

(*FIN INSERT 'Output leaders in a vlist, |goto fin_rule| if a rule or to |next_p| if done'*)                   ;
                                                                                                               goto move_past;
                                                                                                             End

(*FIN INSERT 'Move down or output leaders'*)                                                      ;
                                                                                                  kern_node: cur_v := cur_v+width(p);
                                                                                                  othercases do_nothing
                                                                                                  endcases;

                                                                                                  goto next_p;
                                                                                                  fin_rule:
(*INSERT 'Output a rule in a vlist, |goto next_p|'*)(*PASCAL module 633*)
                                                                                                            If is_running(rule_wd) Then rule_wd := width(this_box);
                                                                                                  rule_ht := rule_ht+rule_dp; {this is the rule thickness}
                                                                                                  cur_v := cur_v+rule_ht;
                                                                                                  If (rule_ht>0)And(rule_wd>0) Then {we don't output empty rules}
                                                                                                    Begin
                                                                                                      synch_h;
                                                                                                      synch_v;
                                                                                                      dvi_out(put_rule);
                                                                                                      dvi_four(rule_ht);
                                                                                                      dvi_four(rule_wd);
                                                                                                    End;
                                                                                                  goto next_p

(*FIN INSERT 'Output a rule in a vlist, |goto next_p|'*)                                          ;
                                                                                                  move_past: cur_v := cur_v+rule_ht;
                                                                                                End

(*FIN INSERT 'Output the non-|char_node| |p| for |vlist_out|'*)                                 ;
                                                                                                next_p: p := link(p);
                                                                                              End

(*FIN INSERT 'Output node |p| for |vlist_out| and move to the next node, maintaining the condition |cur_h=left_edge|'*);
                                                                                            prune_movements(save_loc);
                                                                                            If cur_s>0 Then dvi_pop(save_loc);
                                                                                            decr(cur_s);
                                                                                          End;


(***PASCAL module 638***)
                                                                                        Procedure ship_out(p:pointer); {output the box |p|}

                                                                                        Label done;

                                                                                        Var page_loc: integer; {location of the current |bop|}
                                                                                          j,k: 0..9; {indices to first ten count registers}
                                                                                          s: pool_pointer; {index into |str_pool|}
                                                                                          old_setting: 0..max_selector; {saved |selector| setting}
                                                                                        Begin
                                                                                          If tracing_output>0 Then
                                                                                            Begin
                                                                                              print_nl('');
                                                                                              print_ln;
                                                                                              print('Completed box being shipped out');
(*Completed box...*)
                                                                                            End;
                                                                                          If term_offset>max_print_line-9 Then print_ln
                                                                                          Else If (term_offset>0)Or(file_offset>0) Then print_char(' ');
                                                                                          print_char('[');
                                                                                          j := 9;
                                                                                          While (count(j)=0)And(j>0) Do
                                                                                            decr(j);
                                                                                          For k:=0 To j Do
                                                                                            Begin
                                                                                              print_int(count(k));
                                                                                              If k<j Then print_char('.');
                                                                                            End;
                                                                                          update_terminal;
                                                                                          If tracing_output>0 Then
                                                                                            Begin
                                                                                              print_char(']');
                                                                                              begin_diagnostic;
                                                                                              show_box(p);
                                                                                              end_diagnostic(true);
                                                                                            End;

(*INSERT 'Ship box |p| out'*)(*PASCAL module 640*)

(*INSERT 'Update the values of |max_h| and |max_v|; but if the page is too large, |goto done|'*)(*PASCAL module 641*)
                                                                                          If (height(p)>max_dimen)Or(depth(p)>max_dimen)Or
                                                                                             (height(p)+depth(p)+v_offset>max_dimen)Or
                                                                                             (width(p)+h_offset>max_dimen) Then
                                                                                            Begin
                                                                                              print_err('Huge page cannot be shipped out');
(*Huge page...*)
                                                                                              help2('The page just created is more than 18 feet tall or')

                                                                                              ('more than 18 feet wide, so I suspect something went wrong.');
                                                                                              error;
                                                                                              If tracing_output<=0 Then
                                                                                                Begin
                                                                                                  begin_diagnostic;
                                                                                                  print_nl('The following box has been deleted:');
(*The following...deleted*)
                                                                                                  show_box(p);
                                                                                                  end_diagnostic(true);
                                                                                                End;
                                                                                              goto done;
                                                                                            End;
                                                                                          If height(p)+depth(p)+v_offset>max_v Then max_v := height(p)+depth(p)+v_offset;
                                                                                          If width(p)+h_offset>max_h Then max_h := width(p)+h_offset

(*FIN INSERT 'Update the values of |max_h| and |max_v|; but if the page is too large, |goto done|'*);

(*INSERT 'Initialize variables as |ship_out| begins'*)(*PASCAL module 617*)
                                                                                          dvi_h := 0;
                                                                                          dvi_v := 0;
                                                                                          cur_h := h_offset;
                                                                                          dvi_f := null_font;
                                                                                          ensure_dvi_open;
                                                                                          If total_pages=0 Then
                                                                                            Begin
                                                                                              dvi_out(pre);
                                                                                              dvi_out(id_byte); {output the preamble}
(*preamble of \.{DVI} file*)
                                                                                              dvi_four(25400000);
                                                                                              dvi_four(473628672); {conversion ratio for sp}
                                                                                              prepare_mag;
                                                                                              dvi_four(mag); {magnification factor is frozen}
                                                                                              old_setting := selector;
                                                                                              selector := new_string;
                                                                                              print(' TeX output ');
                                                                                              print_int(year);
                                                                                              print_char('.');
                                                                                              print_two(month);
                                                                                              print_char('.');
                                                                                              print_two(day);
                                                                                              print_char(':');
                                                                                              print_two(time Div 60);
                                                                                              print_two(time Mod 60);
                                                                                              selector := old_setting;
                                                                                              dvi_out(cur_length);
                                                                                              For s:=str_start[str_ptr] To pool_ptr-1 Do
                                                                                                dvi_out(so(str_pool[s]));
                                                                                              pool_ptr := str_start[str_ptr]; {flush the current string}
                                                                                            End

(*FIN INSERT 'Initialize variables as |ship_out| begins'*)                                ;
                                                                                          page_loc := dvi_offset+dvi_ptr;
                                                                                          dvi_out(bop);
                                                                                          For k:=0 To 9 Do
                                                                                            dvi_four(count(k));
                                                                                          dvi_four(last_bop);
                                                                                          last_bop := page_loc;
                                                                                          cur_v := height(p)+v_offset;
                                                                                          temp_ptr := p;
                                                                                          If Type(p)=vlist_node Then vlist_outelse hlist_out;
                                                                                          dvi_out(eop);
                                                                                          incr(total_pages);
                                                                                          cur_s := -1;
                                                                                          done:

(*FIN INSERT 'Ship box |p| out'*)                                                         ;
                                                                                          If tracing_output<=0 Then print_char(']');
                                                                                          dead_cycles := 0;
                                                                                          update_terminal; {progress report}

(*INSERT 'Flush the box from memory, showing statistics if requested'*)(*PASCAL module 639*)
                                                                                          stat If tracing_stats>1 Then
                                                                                                 Begin
                                                                                                   print_nl('Memory usage before: ');
(*Memory usage...*)
                                                                                                   print_int(var_used);
                                                                                                   print_char('&');
                                                                                                   print_int(dyn_used);
                                                                                                   print_char(';');
                                                                                                 End;
                                                                                          tats

                                                                                          flush_node_list(p);
                                                                                          stat If tracing_stats>1 Then
                                                                                                 Begin
                                                                                                   print(' after: ');
                                                                                                   print_int(var_used);
                                                                                                   print_char('&');
                                                                                                   print_int(dyn_used);
                                                                                                   print('; still untouched: ');
                                                                                                   print_int(hi_mem_min-lo_mem_max-1);
                                                                                                   print_ln;
                                                                                                 End;
                                                                                          tats

(*FIN INSERT 'Flush the box from memory, showing statistics if requested'*)               ;
                                                                                        End;


(***PASCAL module 645***)
                                                                                        Procedure scan_spec(c:group_code;three_codes:boolean);
  {scans a box specification and left brace}

                                                                                        Label found;

                                                                                        Var s: integer; {temporarily saved value}
                                                                                          spec_code: exactly..additional;
                                                                                        Begin
                                                                                          If three_codes Then s := saved(0);
                                                                                          If scan_keyword('to') Then spec_code := exactly
(*to*)
                                                                                          Else If scan_keyword('spread') Then spec_code := additional
(*spread*)
                                                                                          Else
                                                                                            Begin
                                                                                              spec_code := additional;
                                                                                              cur_val := 0;
                                                                                              goto found;
                                                                                            End;
                                                                                          scan_normal_dimen;
                                                                                          found: If three_codes Then
                                                                                                   Begin
                                                                                                     saved(0) := s;
                                                                                                     incr(save_ptr);
                                                                                                   End;
                                                                                          saved(0) := spec_code;
                                                                                          saved(1) := cur_val;
                                                                                          save_ptr := save_ptr+2;
                                                                                          new_save_level(c);
                                                                                          scan_left_brace;
                                                                                        End;


(***PASCAL module 649***)
                                                                                        Function hpack(p:pointer;w:scaled;m:small_number): pointer;

                                                                                        Label reswitch, common_ending, exit;

                                                                                        Var r: pointer; {the box node that will be returned}
                                                                                          q: pointer; {trails behind |p|}
                                                                                          h,d,x: scaled; {height, depth, and natural width}
                                                                                          s: scaled; {shift amount}
                                                                                          g: pointer; {points to a glue specification}
                                                                                          o: glue_ord; {order of infinity}
                                                                                          f: internal_font_number; {the font in a |char_node|}
                                                                                          i: four_quarters; {font information about a |char_node|}
                                                                                          hd: eight_bits; {height and depth indices for a character}
                                                                                        Begin
                                                                                          last_badness := 0;
                                                                                          r := get_node(box_node_size);

                                                                                          Type (r) := hlist_node;
                                                                                            subtype(r) := min_quarterword;
                                                                                            shift_amount(r) := 0;
                                                                                            q := r+list_offset;
                                                                                            link(q) := p;

                                                                                            h := 0;
(*INSERT 'Clear dimensions to zero'*)(*PASCAL module 650*)
                                                                                            d := 0;
                                                                                            x := 0;
                                                                                            total_stretch[normal] := 0;
                                                                                            total_shrink[normal] := 0;
                                                                                            total_stretch[fil] := 0;
                                                                                            total_shrink[fil] := 0;
                                                                                            total_stretch[fill] := 0;
                                                                                            total_shrink[fill] := 0;
                                                                                            total_stretch[filll] := 0;
                                                                                            total_shrink[filll] := 0

(*FIN INSERT 'Clear dimensions to zero'*)                                                   ;
                                                                                            While p<>null Do
(*INSERT 'Examine node |p| in the hlist, taking account of its effect on the dimensions of the new box, or moving it to the adjustment list; then advance |p| to the next node'*)(*PASCAL module 651*)
(*inner loop*)
                                                                                              Begin
                                                                                                reswitch: While is_char_node(p) Do

(*INSERT 'Incorporate character dimensions into the dimensions of the hbox that will contain~it, then move to the next node'*)(*PASCAL module 654*)
                                                                                                            Begin
                                                                                                              f := font(p);
                                                                                                              i := char_info(f)(character(p));
                                                                                                              hd := height_depth(i);
                                                                                                              x := x+char_width(f)(i);

                                                                                                              s := char_height(f)(hd);
                                                                                                              If s>h Then h := s;
                                                                                                              s := char_depth(f)(hd);
                                                                                                              If s>d Then d := s;
                                                                                                              p := link(p);
                                                                                                            End

(*FIN INSERT 'Incorporate character dimensions into the dimensions of the hbox that will contain~it, then move to the next node'*);
                                                                                                If p<>null Then
                                                                                                  Begin
                                                                                                    Case Type(p) Of 
                                                                                                      hlist_node,vlist_node,rule_node,unset_node:

(*INSERT 'Incorporate box dimensions into the dimensions of the hbox that will contain~it'*)(*PASCAL module 653*)
                                                                                                                                                  Begin
                                                                                                                                                    x := x+width(p);
                                                                                                                                                    If Type(p)>=rule_node Then s := 0
                                                                                                                                                    Else s := shift_amount(p);
                                                                                                                                                    If height(p)-s>h Then h := height(p)-s;
                                                                                                                                                    If depth(p)+s>d Then d := depth(p)+s;
                                                                                                                                                  End

(*FIN INSERT 'Incorporate box dimensions into the dimensions of the hbox that will contain~it'*)      ;
                                                                                                      ins_node,mark_node,adjust_node: If adjust_tail<>null Then

(*INSERT 'Transfer node |p| to the adjustment list'*)(*PASCAL module 655*)
                                                                                                                                        Begin
                                                                                                                                          While link(q)<>p Do
                                                                                                                                            q := link(q);
                                                                                                                                          If Type(p)=adjust_node Then
                                                                                                                                            Begin
                                                                                                                                              link(adjust_tail) := adjust_ptr(p);
                                                                                                                                              While link(adjust_tail)<>null Do
                                                                                                                                                adjust_tail := link(adjust_tail);
                                                                                                                                              p := link(p);
                                                                                                                                              free_node(link(q),small_node_size);
                                                                                                                                            End
                                                                                                                                          Else
                                                                                                                                            Begin
                                                                                                                                              link(adjust_tail) := p;
                                                                                                                                              adjust_tail := p;
                                                                                                                                              p := link(p);
                                                                                                                                            End;
                                                                                                                                          link(q) := p;
                                                                                                                                          p := q;
                                                                                                                                        End

(*FIN INSERT 'Transfer node |p| to the adjustment list'*)                                             ;
                                                                                                      whatsit_node:
(*INSERT 'Incorporate a whatsit node into an hbox'*)(*FIN INSERT 'Incorporate a whatsit node into an hbox'*);
                                                                                                      glue_node:
(*INSERT 'Incorporate glue into the horizontal totals'*)(*PASCAL module 656*)
                                                                                                                 Begin
                                                                                                                   g := glue_ptr(p);
                                                                                                                   x := x+width(g);

                                                                                                                   o := stretch_order(g);
                                                                                                                   total_stretch[o] := total_stretch[o]+stretch(g);
                                                                                                                   o := shrink_order(g);
                                                                                                                   total_shrink[o] := total_shrink[o]+shrink(g);
                                                                                                                   If subtype(p)>=a_leaders Then
                                                                                                                     Begin
                                                                                                                       g := leader_ptr(p);
                                                                                                                       If height(g)>h Then h := height(g);
                                                                                                                       If depth(g)>d Then d := depth(g);
                                                                                                                     End;
                                                                                                                 End

(*FIN INSERT 'Incorporate glue into the horizontal totals'*)                                          ;
                                                                                                      kern_node,math_node: x := x+width(p);
                                                                                                      ligature_node:
(*INSERT 'Make node |p| look like a |char_node| and |goto reswitch|'*)(*PASCAL module 652*)
                                                                                                                     Begin
                                                                                                                       mem[lig_trick] := mem[lig_char(p)];
                                                                                                                       link(lig_trick) := link(p);
                                                                                                                       p := lig_trick;
                                                                                                                       goto reswitch;
                                                                                                                     End

(*FIN INSERT 'Make node |p| look like a |char_node| and |goto reswitch|'*)                            ;
                                                                                                      othercases do_nothing
                                                                                                      endcases;

                                                                                                      p := link(p);
                                                                                                    End;
                                                                                                  End


(*FIN INSERT 'Examine node |p| in the hlist, taking account of its effect on the dimensions of the new box, or moving it to the adjustment list; then advance |p| to the next node'*);
                                                                                                If adjust_tail<>null Then link(adjust_tail) := null;
                                                                                                height(r) := h;
                                                                                                depth(r) := d;


(*INSERT 'Determine the value of |width(r)| and the appropriate glue setting; then |return| or |goto common_ending|'*)(*PASCAL module 657*)
                                                                                                If m=additional Then w := x+w;
                                                                                                width(r) := w;
                                                                                                x := w-x; {now |x| is the excess to be made up}
                                                                                                If x=0 Then
                                                                                                  Begin
                                                                                                    glue_sign(r) := normal;
                                                                                                    glue_order(r) := normal;
                                                                                                    set_glue_ratio_zero(glue_set(r));
                                                                                                    return;
                                                                                                  End
                                                                                                Else If x>0 Then
(*INSERT 'Determine horizontal glue stretch setting, then |return| or \hbox{|goto common_ending|}'*)(*PASCAL module 658*)
                                                                                                       Begin
(*INSERT 'Determine the stretch order'*)(*PASCAL module 659*)
                                                                                                         If total_stretch[filll]<>0 Then o := filll
                                                                                                         Else If total_stretch[fill]<>0 Then o := fill
                                                                                                         Else If total_stretch[fil]<>0 Then o := fil
                                                                                                         Else o := normal

(*FIN INSERT 'Determine the stretch order'*)                                                             ;
                                                                                                         glue_order(r) := o;
                                                                                                         glue_sign(r) := stretching;
                                                                                                         If total_stretch[o]<>0 Then glue_set(r) := unfloat(x/total_stretch[o])
(*real division*)
                                                                                                         Else
                                                                                                           Begin
                                                                                                             glue_sign(r) := normal;
                                                                                                             set_glue_ratio_zero(glue_set(r)); {there's nothing to stretch}
                                                                                                           End;
                                                                                                         If o=normal Then If list_ptr(r)<>null Then

(*INSERT 'Report an underfull hbox and |goto common_ending|, if this box is sufficiently bad'*)(*PASCAL module 660*)
                                                                                                                            Begin
                                                                                                                              last_badness := badness(x,total_stretch[normal]);
                                                                                                                              If last_badness>hbadness Then
                                                                                                                                Begin
                                                                                                                                  print_ln;
                                                                                                                                  If last_badness>100 Then print_nl('Underfull')
                                                                                                                                  Else print_nl('Loose');
                                                                                                                                  print(' \hbox (badness ');
                                                                                                                                  print_int(last_badness);
(*Underfull \\hbox...*)
(*Loose \\hbox...*)
                                                                                                                                  goto common_ending;
                                                                                                                                End;
                                                                                                                            End

(*FIN INSERT 'Report an underfull hbox and |goto common_ending|, if this box is sufficiently bad'*)      ;
                                                                                                         return;
                                                                                                       End

(*FIN INSERT 'Determine horizontal glue stretch setting, then |return| or \hbox{|goto common_ending|}'*)
                                                                                                Else
(*INSERT 'Determine horizontal glue shrink setting, then |return| or \hbox{|goto common_ending|}'*)(*PASCAL module 664*)
                                                                                                  Begin
(*INSERT 'Determine the shrink order'*)(*PASCAL module 665*)
                                                                                                    If total_shrink[filll]<>0 Then o := filll
                                                                                                    Else If total_shrink[fill]<>0 Then o := fill
                                                                                                    Else If total_shrink[fil]<>0 Then o := fil
                                                                                                    Else o := normal

(*FIN INSERT 'Determine the shrink order'*)                                                         ;
                                                                                                    glue_order(r) := o;
                                                                                                    glue_sign(r) := shrinking;
                                                                                                    If total_shrink[o]<>0 Then glue_set(r) := unfloat((-x)/total_shrink[o])
(*real division*)
                                                                                                    Else
                                                                                                      Begin
                                                                                                        glue_sign(r) := normal;
                                                                                                        set_glue_ratio_zero(glue_set(r)); {there's nothing to shrink}
                                                                                                      End;
                                                                                                    If (total_shrink[o]<-x)And(o=normal)And(list_ptr(r)<>null) Then
                                                                                                      Begin
                                                                                                        last_badness := 1000000;
                                                                                                        set_glue_ratio_one(glue_set(r)); {use the maximum shrinkage}

(*INSERT 'Report an overfull hbox and |goto common_ending|, if this box is sufficiently bad'*)(*PASCAL module 666*)
                                                                                                        If (-x-total_shrink[normal]>hfuzz)Or(hbadness<100) Then
                                                                                                          Begin
                                                                                                            If (overfull_rule>0)And(-x-total_shrink[normal]>hfuzz) Then
                                                                                                              Begin
                                                                                                                While link(q)<>null Do
                                                                                                                  q := link(q);
                                                                                                                link(q) := new_rule;
                                                                                                                width(link(q)) := overfull_rule;
                                                                                                              End;
                                                                                                            print_ln;
                                                                                                            print_nl('Overfull \hbox (');
(*Overfull \\hbox...*)
                                                                                                            print_scaled(-x-total_shrink[normal]);
                                                                                                            print('pt too wide');
                                                                                                            goto common_ending;
                                                                                                          End

(*FIN INSERT 'Report an overfull hbox and |goto common_ending|, if this box is sufficiently bad'*)      ;
                                                                                                      End
                                                                                                    Else If o=normal Then If list_ptr(r)<>null Then

(*INSERT 'Report a tight hbox and |goto common_ending|, if this box is sufficiently bad'*)(*PASCAL module 667*)
                                                                                                                            Begin
                                                                                                                              last_badness := badness(-x,total_shrink[normal]);
                                                                                                                              If last_badness>hbadness Then
                                                                                                                                Begin
                                                                                                                                  print_ln;
                                                                                                                                  print_nl('Tight \hbox (badness ');
                                                                                                                                  print_int(last_badness);
(*Tight \\hbox...*)
                                                                                                                                  goto common_ending;
                                                                                                                                End;
                                                                                                                            End

(*FIN INSERT 'Report a tight hbox and |goto common_ending|, if this box is sufficiently bad'*)      ;
                                                                                                    return;
                                                                                                  End

(*FIN INSERT 'Determine horizontal glue shrink setting, then |return| or \hbox{|goto common_ending|}'*)

(*FIN INSERT 'Determine the value of |width(r)| and the appropriate glue setting; then |return| or |goto common_ending|'*);
                                                                                                common_ending:
(*INSERT 'Finish issuing a diagnostic message for an overfull or underfull hbox'*)(*PASCAL module 663*)
                                                                                                               If output_active Then print(') has occurred while \output is active')
                                                                                                               Else
                                                                                                                 Begin
                                                                                                                   If pack_begin_line<>0 Then
                                                                                                                     Begin
                                                                                                                       If pack_begin_line>0 Then print(') in paragraph at lines ')
                                                                                                                       Else print(') in alignment at lines ');
                                                                                                                       print_int(abs(pack_begin_line));
                                                                                                                       print('--');
                                                                                                                     End
                                                                                                                   Else print(') detected at line ');
                                                                                                                   print_int(line);
                                                                                                                 End;
                                                                                                print_ln;

                                                                                                font_in_short_display := null_font;
                                                                                                short_display(list_ptr(r));
                                                                                                print_ln;

                                                                                                begin_diagnostic;
                                                                                                show_box(r);
                                                                                                end_diagnostic(true)

(*FIN INSERT 'Finish issuing a diagnostic message for an overfull or underfull hbox'*)          ;
                                                                                                exit: hpack := r;
                                                                                              End;


(***PASCAL module 668***)
                                                                                          Function vpackage(p:pointer;h:scaled;m:small_number;l:scaled):
                                                                                                                                                         pointer;

                                                                                          Label common_ending, exit;

                                                                                          Var r: pointer; {the box node that will be returned}
                                                                                            w,d,x: scaled; {width, depth, and natural height}
                                                                                            s: scaled; {shift amount}
                                                                                            g: pointer; {points to a glue specification}
                                                                                            o: glue_ord; {order of infinity}
                                                                                          Begin
                                                                                            last_badness := 0;
                                                                                            r := get_node(box_node_size);

                                                                                            Type (r) := vlist_node;
                                                                                              subtype(r) := min_quarterword;
                                                                                              shift_amount(r) := 0;
                                                                                              list_ptr(r) := p;

                                                                                              w := 0;
(*INSERT 'Clear dimensions to zero'*)(*PASCAL module 650*)
                                                                                              d := 0;
                                                                                              x := 0;
                                                                                              total_stretch[normal] := 0;
                                                                                              total_shrink[normal] := 0;
                                                                                              total_stretch[fil] := 0;
                                                                                              total_shrink[fil] := 0;
                                                                                              total_stretch[fill] := 0;
                                                                                              total_shrink[fill] := 0;
                                                                                              total_stretch[filll] := 0;
                                                                                              total_shrink[filll] := 0

(*FIN INSERT 'Clear dimensions to zero'*)                                                     ;
                                                                                              While p<>null Do
(*INSERT 'Examine node |p| in the vlist, taking account of its effect on the dimensions of the new box; then advance |p| to the next node'*)(*PASCAL module 669*)
                                                                                                Begin
                                                                                                  If is_char_node(p) Then confusion('vpack')
(*this can''t happen vpack][\quad vpack*)
                                                                                                  Else  Case Type(p) Of 
                                                                                                          hlist_node,vlist_node,rule_node,unset_node:

(*INSERT 'Incorporate box dimensions into the dimensions of the vbox that will contain~it'*)(*PASCAL module 670*)
                                                                                                                                                      Begin
                                                                                                                                                        x := x+d+height(p);
                                                                                                                                                        d := depth(p);
                                                                                                                                                        If Type(p)>=rule_node Then s := 0
                                                                                                                                                        Else s := shift_amount(p);
                                                                                                                                                        If width(p)+s>w Then w := width(p)+s;
                                                                                                                                                      End

(*FIN INSERT 'Incorporate box dimensions into the dimensions of the vbox that will contain~it'*)          ;
                                                                                                          whatsit_node:
(*INSERT 'Incorporate a whatsit node into a vbox'*)(*FIN INSERT 'Incorporate a whatsit node into a vbox'*);
                                                                                                          glue_node:
(*INSERT 'Incorporate glue into the vertical totals'*)(*PASCAL module 671*)
                                                                                                                     Begin
                                                                                                                       x := x+d;
                                                                                                                       d := 0;

                                                                                                                       g := glue_ptr(p);
                                                                                                                       x := x+width(g);

                                                                                                                       o := stretch_order(g);
                                                                                                                       total_stretch[o] := total_stretch[o]+stretch(g);
                                                                                                                       o := shrink_order(g);
                                                                                                                       total_shrink[o] := total_shrink[o]+shrink(g);
                                                                                                                       If subtype(p)>=a_leaders Then
                                                                                                                         Begin
                                                                                                                           g := leader_ptr(p);
                                                                                                                           If width(g)>w Then w := width(g);
                                                                                                                         End;
                                                                                                                     End

(*FIN INSERT 'Incorporate glue into the vertical totals'*)                                                ;
                                                                                                          kern_node:
                                                                                                                     Begin
                                                                                                                       x := x+d+width(p);
                                                                                                                       d := 0;
                                                                                                                     End;
                                                                                                          othercases do_nothing
                                                                                                          endcases;
                                                                                                          p := link(p);
                                                                                                    End

(*FIN INSERT 'Examine node |p| in the vlist, taking account of its effect on the dimensions of the new box; then advance |p| to the next node'*);
                                                                                                  width(r) := w;
                                                                                                  If d>l Then
                                                                                                    Begin
                                                                                                      x := x+d-l;
                                                                                                      depth(r) := l;
                                                                                                    End
                                                                                                  Else depth(r) := d;

(*INSERT 'Determine the value of |height(r)| and the appropriate glue setting; then |return| or |goto common_ending|'*)(*PASCAL module 672*)
                                                                                                  If m=additional Then h := x+h;
                                                                                                  height(r) := h;
                                                                                                  x := h-x; {now |x| is the excess to be made up}
                                                                                                  If x=0 Then
                                                                                                    Begin
                                                                                                      glue_sign(r) := normal;
                                                                                                      glue_order(r) := normal;
                                                                                                      set_glue_ratio_zero(glue_set(r));
                                                                                                      return;
                                                                                                    End
                                                                                                  Else If x>0 Then
(*INSERT 'Determine vertical glue stretch setting, then |return| or \hbox{|goto common_ending|}'*)(*PASCAL module 673*)
                                                                                                         Begin
(*INSERT 'Determine the stretch order'*)(*PASCAL module 659*)
                                                                                                           If total_stretch[filll]<>0 Then o := filll
                                                                                                           Else If total_stretch[fill]<>0 Then o := fill
                                                                                                           Else If total_stretch[fil]<>0 Then o := fil
                                                                                                           Else o := normal

(*FIN INSERT 'Determine the stretch order'*)                                                               ;
                                                                                                           glue_order(r) := o;
                                                                                                           glue_sign(r) := stretching;
                                                                                                           If total_stretch[o]<>0 Then glue_set(r) := unfloat(x/total_stretch[o])
(*real division*)
                                                                                                           Else
                                                                                                             Begin
                                                                                                               glue_sign(r) := normal;
                                                                                                               set_glue_ratio_zero(glue_set(r)); {there's nothing to stretch}
                                                                                                             End;
                                                                                                           If o=normal Then If list_ptr(r)<>null Then

(*INSERT 'Report an underfull vbox and |goto common_ending|, if this box is sufficiently bad'*)(*PASCAL module 674*)
                                                                                                                              Begin
                                                                                                                                last_badness := badness(x,total_stretch[normal]);
                                                                                                                                If last_badness>vbadness Then
                                                                                                                                  Begin
                                                                                                                                    print_ln;
                                                                                                                                    If last_badness>100 Then print_nl('Underfull')
                                                                                                                                    Else print_nl('Loose');
                                                                                                                                    print(' \vbox (badness ');
                                                                                                                                    print_int(last_badness);
(*Underfull \\vbox...*)
(*Loose \\vbox...*)
                                                                                                                                    goto common_ending;
                                                                                                                                  End;
                                                                                                                              End

(*FIN INSERT 'Report an underfull vbox and |goto common_ending|, if this box is sufficiently bad'*)        ;
                                                                                                           return;
                                                                                                         End

(*FIN INSERT 'Determine vertical glue stretch setting, then |return| or \hbox{|goto common_ending|}'*)
                                                                                                  Else
(*INSERT 'Determine vertical glue shrink setting, then |return| or \hbox{|goto common_ending|}'*)(*PASCAL module 676*)
                                                                                                    Begin
(*INSERT 'Determine the shrink order'*)(*PASCAL module 665*)
                                                                                                      If total_shrink[filll]<>0 Then o := filll
                                                                                                      Else If total_shrink[fill]<>0 Then o := fill
                                                                                                      Else If total_shrink[fil]<>0 Then o := fil
                                                                                                      Else o := normal

(*FIN INSERT 'Determine the shrink order'*)                                                           ;
                                                                                                      glue_order(r) := o;
                                                                                                      glue_sign(r) := shrinking;
                                                                                                      If total_shrink[o]<>0 Then glue_set(r) := unfloat((-x)/total_shrink[o])
(*real division*)
                                                                                                      Else
                                                                                                        Begin
                                                                                                          glue_sign(r) := normal;
                                                                                                          set_glue_ratio_zero(glue_set(r)); {there's nothing to shrink}
                                                                                                        End;
                                                                                                      If (total_shrink[o]<-x)And(o=normal)And(list_ptr(r)<>null) Then
                                                                                                        Begin
                                                                                                          last_badness := 1000000;
                                                                                                          set_glue_ratio_one(glue_set(r)); {use the maximum shrinkage}

(*INSERT 'Report an overfull vbox and |goto common_ending|, if this box is sufficiently bad'*)(*PASCAL module 677*)
                                                                                                          If (-x-total_shrink[normal]>vfuzz)Or(vbadness<100) Then
                                                                                                            Begin
                                                                                                              print_ln;
                                                                                                              print_nl('Overfull \vbox (');
(*Overfull \\vbox...*)
                                                                                                              print_scaled(-x-total_shrink[normal]);
                                                                                                              print('pt too high');
                                                                                                              goto common_ending;
                                                                                                            End

(*FIN INSERT 'Report an overfull vbox and |goto common_ending|, if this box is sufficiently bad'*)        ;
                                                                                                        End
                                                                                                      Else If o=normal Then If list_ptr(r)<>null Then

(*INSERT 'Report a tight vbox and |goto common_ending|, if this box is sufficiently bad'*)(*PASCAL module 678*)
                                                                                                                              Begin
                                                                                                                                last_badness := badness(-x,total_shrink[normal]);
                                                                                                                                If last_badness>vbadness Then
                                                                                                                                  Begin
                                                                                                                                    print_ln;
                                                                                                                                    print_nl('Tight \vbox (badness ');
                                                                                                                                    print_int(last_badness);
(*Tight \\vbox...*)
                                                                                                                                    goto common_ending;
                                                                                                                                  End;
                                                                                                                              End

(*FIN INSERT 'Report a tight vbox and |goto common_ending|, if this box is sufficiently bad'*)        ;
                                                                                                      return;
                                                                                                    End

(*FIN INSERT 'Determine vertical glue shrink setting, then |return| or \hbox{|goto common_ending|}'*)

(*FIN INSERT 'Determine the value of |height(r)| and the appropriate glue setting; then |return| or |goto common_ending|'*);
                                                                                                  common_ending:
(*INSERT 'Finish issuing a diagnostic message for an overfull or underfull vbox'*)(*PASCAL module 675*)
                                                                                                                 If output_active Then print(') has occurred while \output is active')
                                                                                                                 Else
                                                                                                                   Begin
                                                                                                                     If pack_begin_line<>0 Then {it's actually negative}
                                                                                                                       Begin
                                                                                                                         print(') in alignment at lines ');
                                                                                                                         print_int(abs(pack_begin_line));
                                                                                                                         print('--');
                                                                                                                       End
                                                                                                                     Else print(') detected at line ');
                                                                                                                     print_int(line);
                                                                                                                     print_ln;

                                                                                                                   End;
                                                                                                  begin_diagnostic;
                                                                                                  show_box(r);
                                                                                                  end_diagnostic(true)

(*FIN INSERT 'Finish issuing a diagnostic message for an overfull or underfull vbox'*)            ;
                                                                                                  exit: vpackage := r;
                                                                                                End;


(***PASCAL module 679***)
                                                                                            Procedure append_to_vlist(b:pointer);

                                                                                            Var d: scaled; {deficiency of space between baselines}
                                                                                              p: pointer; {a new glue node}
                                                                                            Begin
                                                                                              If prev_depth>ignore_depth Then
                                                                                                Begin
                                                                                                  d := width(baseline_skip)-prev_depth-height(b);
                                                                                                  If d<line_skip_limit Then p := new_param_glue(line_skip_code)
                                                                                                  Else
                                                                                                    Begin
                                                                                                      p := new_skip_param(baseline_skip_code);
                                                                                                      width(temp_ptr) := d; {|temp_ptr=glue_ptr(p)|}
                                                                                                    End;
                                                                                                  link(tail) := p;
                                                                                                  tail := p;
                                                                                                End;
                                                                                              link(tail) := b;
                                                                                              tail := b;
                                                                                              prev_depth := depth(b);
                                                                                            End;


(***PASCAL module 686***)
                                                                                            Function new_noad: pointer;

                                                                                            Var p: pointer;
                                                                                            Begin
                                                                                              p := get_node(noad_size);

                                                                                              Type (p) := ord_noad;
                                                                                                subtype(p) := normal;
                                                                                                mem[nucleus(p)].hh := empty_field;
                                                                                                mem[subscr(p)].hh := empty_field;
                                                                                                mem[supscr(p)].hh := empty_field;
                                                                                                new_noad := p;
                                                                                              End;


(***PASCAL module 688***)
                                                                                              Function new_style(s:small_number): pointer; {create a style node}

                                                                                              Var p: pointer; {the new node}
                                                                                              Begin
                                                                                                p := get_node(style_node_size);

                                                                                                Type (p) := style_node;
                                                                                                  subtype(p) := s;
                                                                                                  width(p) := 0;
                                                                                                  depth(p) := 0; {the |width| and |depth| are not used}
                                                                                                  new_style := p;
                                                                                                End;


(***PASCAL module 689***)
                                                                                                Function new_choice: pointer; {create a choice node}

                                                                                                Var p: pointer; {the new node}
                                                                                                Begin
                                                                                                  p := get_node(style_node_size);

                                                                                                  Type (p) := choice_node;
                                                                                                    subtype(p) := 0; {the |subtype| is not used}
                                                                                                    display_mlist(p) := null;
                                                                                                    text_mlist(p) := null;
                                                                                                    script_mlist(p) := null;
                                                                                                    script_script_mlist(p) := null;
                                                                                                    new_choice := p;
                                                                                                  End;


(***PASCAL module 693***)
                                                                                                  Procedure show_info; {the reader will kindly forgive this}
                                                                                                  Begin
                                                                                                    show_node_list(info(temp_ptr));
                                                                                                  End;


(***PASCAL module 704***)
                                                                                                  Function fraction_rule(t:scaled): pointer;
  {construct the bar for a fraction}

                                                                                                  Var p: pointer; {the new node}
                                                                                                  Begin
                                                                                                    p := new_rule;
                                                                                                    height(p) := t;
                                                                                                    depth(p) := 0;
                                                                                                    fraction_rule := p;
                                                                                                  End;


(***PASCAL module 705***)
                                                                                                  Function overbar(b:pointer;k,t:scaled): pointer;

                                                                                                  Var p,q: pointer; {nodes being constructed}
                                                                                                  Begin
                                                                                                    p := new_kern(k);
                                                                                                    link(p) := b;
                                                                                                    q := fraction_rule(t);
                                                                                                    link(q) := p;
                                                                                                    p := new_kern(t);
                                                                                                    link(p) := q;
                                                                                                    overbar := vpack(p,natural);
                                                                                                  End;


(***PASCAL module 706***)
(*\4*)                                                                                            @<Declare subprocedures For |var_delimiter|@>
                                                                                                                              Function var_delimiter(d:pointer;s:small_number;v:scaled):pointer;
                                                                                                                              Label found,continue;
                                                                                                                              Var b:pointer; {the box that will be constructed}
                                                                                                                              f,g: internal_font_number; {best-so-far and tentative font codes}
                                                                                                                              c,x,y: quarterword; {best-so-far and tentative character codes}
                                                                                                                              m,n: integer; {the number of extensible pieces}
                                                                                                                              u: scaled; {height-plus-depth of a tentative character}
                                                                                                                              w: scaled; {largest height-plus-depth so far}
                                                                                                                              q: four_quarters; {character info}
                                                                                                                              hd: eight_bits; {height-depth byte}
                                                                                                                              r: four_quarters; {extensible pieces}
                                                                                                                              z: small_number; {runs through font family members}
                                                                                                                              large_attempt: boolean; {are we trying the ``large'' variant?}
                                                                                                                              Begin f:=null_font; w:=0; large_attempt:=false;
                                                                                                                              z:=small_fam(d); x:=small_char(d);
                                                                                                                              loop  Begin
(*INSERT 'Look at the variants of |(z,x)|; set |f| and |c| whenever a better character is found; |goto found| as soon as a large enough variant is encountered'*)(*PASCAL module 707*)
                                                                                                                              If (z<>0)Or(x<>min_quarterword) Then
                                                                                                                              Begin z:=z+s+16;
                                                                                                                              Repeat z:=z-16; g:=fam_fnt(z);
                                                                                                                              If g<>null_font Then

(*INSERT 'Look at the list of characters starting with |x| in font |g|; set |f| and |c| whenever a better character is found; |goto found| as soon as a large enough variant is encountered'*)(*PASCAL module 708*)
                                                                                                                              Begin y:=x;
                                                                                                                              If (qo(y)>=font_bc[g])And(qo(y)<=font_ec[g]) Then
                                                                                                                              Begin continue: q:=char_info(g)(y);
                                                                                                                              If char_exists(q) Then
                                                                                                                              Begin If char_tag(q)=ext_tag Then
                                                                                                                              Begin f:=g; c:=y; Goto found;
                                                                                                                              End;
                                                                                                                              hd:=height_depth(q);
                                                                                                                              u:=char_height(g)(hd)+char_depth(g)(hd);
                                                                                                                              If u>w Then
                                                                                                                              Begin f:=g; c:=y; w:=u;
                                                                                                                              If u>=v Then Goto found;
                                                                                                                              End;
                                                                                                                              If char_tag(q)=list_tag Then
                                                                                                                              Begin y:=rem_byte(q); Goto continue;
                                                                                                                              End;
                                                                                                                              End;
                                                                                                                              End;
                                                                                                                              End

(*FIN INSERT 'Look at the list of characters starting with |x| in font |g|; set |f| and |c| whenever a better character is found; |goto found| as soon as a large enough variant is encountered'*);
                                                                                                                              Until z<16;
                                                                                                                              End

(*FIN INSERT 'Look at the variants of |(z,x)|; set |f| and |c| whenever a better character is found; |goto found| as soon as a large enough variant is encountered'*);
                                                                                                                              If large_attempt Then Goto found; {there were none large enough}
                                                                                                                              large_attempt:=true; z:=large_fam(d); x:=large_char(d);
                                                                                                                              End;
                                                                                                                              found: If f<>null_font Then

(*INSERT 'Make variable |b| point to a box for |(f,c)|'*)(*PASCAL module 710*)
                                                                                                                              If char_tag(q)=ext_tag Then

(*INSERT 'Construct an extensible character in a new box |b|, using recipe |rem_byte(q)| and font |f|'*)(*PASCAL module 713*)
                                                                                                                              Begin b:=new_null_box;
                                                                                                                              Type(b):=vlist_node;
                                                                                                                              r:=font_info[exten_base[f]+rem_byte(q)].qqqq;


(*INSERT 'Compute the minimum suitable height, |w|, and the corresponding number of extension steps, |n|; also set |width(b)|'*)(*PASCAL module 714*)
                                                                                                                              c:=ext_rep(r); u:=height_plus_depth(f,c);
                                                                                                                              w:=0; q:=char_info(f)(c); width(b):=char_width(f)(q)+char_italic(f)(q);

                                                                                                                              c:=ext_bot(r);If c<>min_quarterword Then w:=w+height_plus_depth(f,c);
                                                                                                                              c:=ext_mid(r);If c<>min_quarterword Then w:=w+height_plus_depth(f,c);
                                                                                                                              c:=ext_top(r);If c<>min_quarterword Then w:=w+height_plus_depth(f,c);
                                                                                                                              n:=0;
                                                                                                                              If u>0 Then While w<v Do
                                                                                                                            Begin
                                                                                                                              w := w+u;
                                                                                                                              incr(n);
                                                                                                                              If ext_mid(r)<>min_quarterword Then w := w+u;
                                                                                                                            End

(*FIN INSERT 'Compute the minimum suitable height, |w|, and the corresponding number of extension steps, |n|; also set |width(b)|'*);
                                                                                                  c := ext_bot(r);
                                                                                                  If c<>min_quarterword Then stack_into_box(b,f,c);
                                                                                                  c := ext_rep(r);
                                                                                                  For m:=1 To n Do
                                                                                                    stack_into_box(b,f,c);
                                                                                                  c := ext_mid(r);
                                                                                                  If c<>min_quarterword Then
                                                                                                    Begin
                                                                                                      stack_into_box(b,f,c);
                                                                                                      c := ext_rep(r);
                                                                                                      For m:=1 To n Do
                                                                                                        stack_into_box(b,f,c);
                                                                                                    End;
                                                                                                  c := ext_top(r);
                                                                                                  If c<>min_quarterword Then stack_into_box(b,f,c);
                                                                                                  depth(b) := w-height(b);
                                                                                                End

(*FIN INSERT 'Construct an extensible character in a new box |b|, using recipe |rem_byte(q)| and font |f|'*)
                                                                                                Else b := char_box(f,c)

(*FIN INSERT 'Make variable |b| point to a box for |(f,c)|'*)
                                                                                                Else
                                                                                                  Begin
                                                                                                    b := new_null_box;
                                                                                                    width(b) := null_delimiter_space; {use this width if no delimiter was found}
                                                                                                  End;
                                                                                                shift_amount(b) := half(height(b)-depth(b)) - axis_height(s);
                                                                                                var_delimiter := b;
                                                                                              End;


(***PASCAL module 715***)
                                                                                              Function rebox(b:pointer;w:scaled): pointer;

                                                                                              Var p: pointer; {temporary register for list manipulation}
                                                                                                f: internal_font_number; {font in a one-character box}
                                                                                                v: scaled; {width of a character without italic correction}
                                                                                              Begin
                                                                                                If (width(b)<>w)And(list_ptr(b)<>null) Then
                                                                                                  Begin
                                                                                                    If Type(b)=vlist_node Then b := hpack(b,natural);
                                                                                                    p := list_ptr(b);
                                                                                                    If (is_char_node(p))And(link(p)=null) Then
                                                                                                      Begin
                                                                                                        f := font(p);
                                                                                                        v := char_width(f)(char_info(f)(character(p)));
                                                                                                        If v<>width(b) Then link(p) := new_kern(width(b)-v);
                                                                                                      End;
                                                                                                    free_node(b,box_node_size);
                                                                                                    b := new_glue(ss_glue);
                                                                                                    link(b) := p;
                                                                                                    While link(p)<>null Do
                                                                                                      p := link(p);
                                                                                                    link(p) := new_glue(ss_glue);
                                                                                                    rebox := hpack(b,w,exactly);
                                                                                                  End
                                                                                                Else
                                                                                                  Begin
                                                                                                    width(b) := w;
                                                                                                    rebox := b;
                                                                                                  End;
                                                                                              End;


(***PASCAL module 716***)
                                                                                              Function math_glue(g:pointer;m:scaled): pointer;

                                                                                              Var p: pointer; {the new glue specification}
                                                                                                n: integer; {integer part of |m|}
                                                                                                f: scaled; {fraction part of |m|}
                                                                                              Begin
                                                                                                n := x_over_n(m,65536);
                                                                                                f := remainder;

                                                                                                If f<0 Then
                                                                                                  Begin
                                                                                                    decr(n);
                                                                                                    f := f+65536;
                                                                                                  End;
                                                                                                p := get_node(glue_spec_size);
                                                                                                width(p) := mu_mult(width(g)); {convert \.[mu] to \.[pt]}
                                                                                                stretch_order(p) := stretch_order(g);
                                                                                                If stretch_order(p)=normal Then stretch(p) := mu_mult(stretch(g))
                                                                                                Else stretch(p) := stretch(g);
                                                                                                shrink_order(p) := shrink_order(g);
                                                                                                If shrink_order(p)=normal Then shrink(p) := mu_mult(shrink(g))
                                                                                                Else shrink(p) := shrink(g);
                                                                                                math_glue := p;
                                                                                              End;


(***PASCAL module 717***)
                                                                                              Procedure math_kern(p:pointer;m:scaled);

                                                                                              Var n: integer; {integer part of |m|}
                                                                                                f: scaled; {fraction part of |m|}
                                                                                              Begin
                                                                                                If subtype(p)=mu_glue Then
                                                                                                  Begin
                                                                                                    n := x_over_n(m,65536);
                                                                                                    f := remainder;

                                                                                                    If f<0 Then
                                                                                                      Begin
                                                                                                        decr(n);
                                                                                                        f := f+65536;
                                                                                                      End;
                                                                                                    width(p) := mu_mult(width(p));
                                                                                                    subtype(p) := explicit;
                                                                                                  End;
                                                                                              End;


(***PASCAL module 718***)
                                                                                              Procedure flush_math;
                                                                                              Begin
                                                                                                flush_node_list(link(head));
                                                                                                flush_node_list(incompleat_noad);
                                                                                                link(head) := null;
                                                                                                tail := head;
                                                                                                incompleat_noad := null;
                                                                                              End;


(***PASCAL module 720***)
                                                                                              Procedure mlist_to_hlist;
                                                                                              forward;
(*\2*)

                                                                                              Function clean_box(p:pointer;s:small_number): pointer;

                                                                                              Label found;

                                                                                              Var q: pointer; {beginning of a list to be boxed}
                                                                                                save_style: small_number; {|cur_style| to be restored}
                                                                                                x: pointer; {box to be returned}
                                                                                                r: pointer; {temporary pointer}
                                                                                              Begin
                                                                                                Case math_type(p) Of 
                                                                                                  math_char:
                                                                                                             Begin
                                                                                                               cur_mlist := new_noad;
                                                                                                               mem[nucleus(cur_mlist)] := mem[p];
                                                                                                             End;
                                                                                                  sub_box:
                                                                                                           Begin
                                                                                                             q := info(p);
                                                                                                             goto found;
                                                                                                           End;
                                                                                                  sub_mlist: cur_mlist := info(p);
                                                                                                  othercases
                                                                                                  Begin
                                                                                                    q := new_null_box;
                                                                                                    goto found;
                                                                                                  End
                                                                                                  endcases;

                                                                                                  save_style := cur_style;
                                                                                                  cur_style := s;
                                                                                                  mlist_penalties := false;

                                                                                                  mlist_to_hlist;
                                                                                                  q := link(temp_head); {recursive call}
                                                                                                  cur_style := save_style; {restore the style}

(*INSERT 'Set up the values of |cur_size| and |cur_mu|, based on |cur_style|'*)(*PASCAL module 703*)
                                                                                                  Begin
                                                                                                    If cur_style<script_style Then cur_size := text_size
                                                                                                    Else cur_size := 16*((cur_style-text_style) Div 2);
                                                                                                    cur_mu := x_over_n(math_quad(cur_size),18);
                                                                                                  End

(*FIN INSERT 'Set up the values of |cur_size| and |cur_mu|, based on |cur_style|'*)               ;
                                                                                                  found: If is_char_node(q)Or(q=null) Then x := hpack(q,natural)
                                                                                                         Else If (link(q)=null)And(Type(q)<=vlist_node)And(shift_amount(q)=0) Then
                                                                                                                x := q {it's already clean}
                                                                                                         Else x := hpack(q,natural);

(*INSERT 'Simplify a trivial box'*)(*PASCAL module 721*)
                                                                                                  q := list_ptr(x);
                                                                                                  If is_char_node(q) Then
                                                                                                    Begin
                                                                                                      r := link(q);
                                                                                                      If r<>null Then If link(r)=null Then If Not is_char_node(r) Then
                                                                                                                                             If Type(r)=kern_node Then {unneeded italic correction}
                                                                                                                                               Begin
                                                                                                                                                 free_node(r,small_node_size);
                                                                                                                                                 link(q) := null;
                                                                                                                                               End;
                                                                                                    End

(*FIN INSERT 'Simplify a trivial box'*)                                                           ;
                                                                                                  clean_box := x;
                                                                                                End;


(***PASCAL module 722***)
                                                                                                Procedure fetch(a:pointer); {unpack the |math_char| field |a|}
                                                                                                Begin
                                                                                                  cur_c := character(a);
                                                                                                  cur_f := fam_fnt(fam(a)+cur_size);
                                                                                                  If cur_f=null_font Then

(*INSERT 'Complain about an undefined family and set |cur_i| null'*)(*PASCAL module 723*)
                                                                                                    Begin
                                                                                                      print_err('');
                                                                                                      print_size(cur_size);
                                                                                                      print_char(' ');
                                                                                                      print_int(fam(a));
                                                                                                      print(' is undefined (character ');
                                                                                                      print_ASCII(qo(cur_c));
                                                                                                      print_char(')');
                                                                                                      help4('Somewhere in the math formula just ended, you used the')

                                                                                                      ('stated character from an undefined font family. For example,')

                                                                                                      ('plain TeX doesn''t allow \it or \sl in subscripts. Proceed,')

                                                                                                      ('and I''ll try to forget that I needed that character.');
                                                                                                      error;
                                                                                                      cur_i := null_character;
                                                                                                      math_type(a) := empty;
                                                                                                    End

(*FIN INSERT 'Complain about an undefined family and set |cur_i| null'*)
                                                                                                  Else
                                                                                                    Begin
                                                                                                      If (qo(cur_c)>=font_bc[cur_f])And(qo(cur_c)<=font_ec[cur_f]) Then
                                                                                                        cur_i := char_info(cur_f)(cur_c)
                                                                                                      Else cur_i := null_character;
                                                                                                      If Not(char_exists(cur_i)) Then
                                                                                                        Begin
                                                                                                          char_warning(cur_f,qo(cur_c));
                                                                                                          math_type(a) := empty;
                                                                                                        End;
                                                                                                    End;
                                                                                                End;


(***PASCAL module 726***)
(*\4*)                                                                                          @<Declare math construction procedures@>
                                                                                                Procedure mlist_to_hlist;

                                                                                                Label reswitch, check_dimensions, done_with_noad, done_with_node, delete_q,
                                                                                                  done;

                                                                                                Var mlist: pointer; {beginning of the given list}
                                                                                                  penalties: boolean; {should penalty nodes be inserted?}
                                                                                                  style: small_number; {the given style}
                                                                                                  save_style: small_number; {holds |cur_style| during recursion}
                                                                                                  q: pointer; {runs through the mlist}
                                                                                                  r: pointer; {the most recent noad preceding |q|}
                                                                                                  r_type: small_number; {the |type| of noad |r|, or |op_noad| if |r=null|}
                                                                                                  t: small_number; {the effective |type| of noad |q| during the second pass}
                                                                                                  p,x,y,z: pointer; {temporary registers for list construction}
                                                                                                  pen: integer; {a penalty to be inserted}
                                                                                                  s: small_number; {the size of a noad to be deleted}
                                                                                                  max_h,max_d: scaled; {maximum height and depth of the list translated so far}
                                                                                                  delta: scaled; {offset between subscript and superscript}
                                                                                                Begin
                                                                                                  mlist := cur_mlist;
                                                                                                  penalties := mlist_penalties;
                                                                                                  style := cur_style; {tuck global parameters away as local variables}
                                                                                                  q := mlist;
                                                                                                  r := null;
                                                                                                  r_type := op_noad;
                                                                                                  max_h := 0;
                                                                                                  max_d := 0;

(*INSERT 'Set up the values of |cur_size| and |cur_mu|, based on |cur_style|'*)(*PASCAL module 703*)
                                                                                                  Begin
                                                                                                    If cur_style<script_style Then cur_size := text_size
                                                                                                    Else cur_size := 16*((cur_style-text_style) Div 2);
                                                                                                    cur_mu := x_over_n(math_quad(cur_size),18);
                                                                                                  End

(*FIN INSERT 'Set up the values of |cur_size| and |cur_mu|, based on |cur_style|'*)               ;
                                                                                                  While q<>null Do
(*INSERT 'Process node-or-noad |q| as much as possible in preparation for the second pass of |mlist_to_hlist|, then move to the next item in the mlist'*)(*PASCAL module 727*)
                                                                                                    Begin
(*INSERT 'Do first-pass processing based on |type(q)|; |goto done_with_noad| if a noad has been fully processed, |goto check_dimensions| if it has been translated into |new_hlist(q)|, or |goto done_with_node| if a node has been fully processed'*)(*PASCAL module 728*)
                                                                                                      reswitch: delta := 0;
                                                                                                      Case Type(q) Of 
                                                                                                        bin_noad: Case r_type Of 
                                                                                                                    bin_noad,op_noad,rel_noad,open_noad,punct_noad,left_noad:
                                                                                                                                                                              Begin

                                                                                                                                                                                Type (q) := ord_noad;
                                                                                                                                                                                  goto reswitch;
                                                                                                                                                                                End;
                                                                                                                                                                                othercases do_nothing
                                                                                                                                                                                endcases;
                                                                                                                                                                                rel_noad,close_noad,punct_noad,right_noad:
                                                                                                                                                                                                                           Begin
(**)                                                                                                                                                                                                                         ;


(*INSERT 'Convert \(a)a final |bin_noad| to an |ord_noad|'*)(*PASCAL module 729*)
                                                                                                                                                                                                                             If r_type=bin_noad Then

                                                                                                                                                                                                                               Type (r) := ord_noad

(*FIN INSERT 'Convert \(a)a final |bin_noad| to an |ord_noad|'*)                                                                                                                                                                 ;
                                                                                                                                                                                                                                 If Type(q)=right_noad Then goto done_with_noad;
                                                                                                                                                                                                                               End;
(*\4*)
(*INSERT 'Cases for noads that can follow a |bin_noad|'*)(*PASCAL module 733*)
                                                                                                                                                                                                                             left_noad: goto done_with_noad;
                                                                                                                                                                                                                             fraction_noad:
                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                              make_fraction(q);
                                                                                                                                                                                                                                              goto check_dimensions;
                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                             op_noad:
                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                        delta := make_op(q);
                                                                                                                                                                                                                                        If subtype(q)=limits Then goto check_dimensions;
                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                             ord_noad: make_ord(q);
                                                                                                                                                                                                                             open_noad,inner_noad: do_nothing;
                                                                                                                                                                                                                             radical_noad: make_radical(q);
                                                                                                                                                                                                                             over_noad: make_over(q);
                                                                                                                                                                                                                             under_noad: make_under(q);
                                                                                                                                                                                                                             accent_noad: make_math_accent(q);
                                                                                                                                                                                                                             vcenter_noad: make_vcenter(q);

(*FIN INSERT 'Cases for noads that can follow a |bin_noad|'*)                                                                                                                                                                ;
(*\4*)
(*INSERT 'Cases for nodes that can appear in an mlist, after which we |goto done_with_node|'*)(*PASCAL module 730*)
                                                                                                                                                                                                                             style_node:
                                                                                                                                                                                                                                         Begin
                                                                                                                                                                                                                                           cur_style := subtype(q);

(*INSERT 'Set up the values of |cur_size| and |cur_mu|, based on |cur_style|'*)(*PASCAL module 703*)
                                                                                                                                                                                                                                           Begin
                                                                                                                                                                                                                                             If cur_style<script_style Then cur_size := text_size
                                                                                                                                                                                                                                             Else cur_size := 16*((cur_style-text_style) Div 2);
                                                                                                                                                                                                                                             cur_mu := x_over_n(math_quad(cur_size),18);
                                                                                                                                                                                                                                           End

(*FIN INSERT 'Set up the values of |cur_size| and |cur_mu|, based on |cur_style|'*)                                                                                                                                                        ;
                                                                                                                                                                                                                                           goto done_with_node;
                                                                                                                                                                                                                                         End;
                                                                                                                                                                                                                             choice_node:
(*INSERT 'Change this node to a style node followed by the correct choice, then |goto done_with_node|'*)(*PASCAL module 731*)
                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                            Case cur_style Div 2 Of 
                                                                                                                                                                                                                                              0: choose_mlist(display_mlist); {|display_style=0|}
                                                                                                                                                                                                                                              1: choose_mlist(text_mlist); {|text_style=2|}
                                                                                                                                                                                                                                              2: choose_mlist(script_mlist); {|script_style=4|}
                                                                                                                                                                                                                                              3: choose_mlist(script_script_mlist); {|script_script_style=6|}
                                                                                                                                                                                                                                            End; {there are no other cases}
                                                                                                                                                                                                                                            flush_node_list(display_mlist(q));
                                                                                                                                                                                                                                            flush_node_list(text_mlist(q));
                                                                                                                                                                                                                                            flush_node_list(script_mlist(q));
                                                                                                                                                                                                                                            flush_node_list(script_script_mlist(q));

                                                                                                                                                                                                                                            Type (q) := style_node;
                                                                                                                                                                                                                                              subtype(q) := cur_style;
                                                                                                                                                                                                                                              width(q) := 0;
                                                                                                                                                                                                                                              depth(q) := 0;
                                                                                                                                                                                                                                              If p<>null Then
                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                  z := link(q);
                                                                                                                                                                                                                                                  link(q) := p;
                                                                                                                                                                                                                                                  While link(p)<>null Do
                                                                                                                                                                                                                                                    p := link(p);
                                                                                                                                                                                                                                                  link(p) := z;
                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                              goto done_with_node;
                                                                                                                                                                                                                                            End

(*FIN INSERT 'Change this node to a style node followed by the correct choice, then |goto done_with_node|'*)                                                                                                                                ;
                                                                                                                                                                                                                                            ins_node,mark_node,adjust_node,
                                                                                                                                                                                                                                            whatsit_node,penalty_node,disc_node: goto done_with_node;
                                                                                                                                                                                                                                            rule_node:
                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                         If height(q)>max_h Then max_h := height(q);
                                                                                                                                                                                                                                                         If depth(q)>max_d Then max_d := depth(q);
                                                                                                                                                                                                                                                         goto done_with_node;
                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                            glue_node:
                                                                                                                                                                                                                                                       Begin
(*INSERT 'Convert \(m)math glue to ordinary glue'*)(*PASCAL module 732*)
                                                                                                                                                                                                                                                         If subtype(q)=mu_glue Then
                                                                                                                                                                                                                                                           Begin
                                                                                                                                                                                                                                                             x := glue_ptr(q);
                                                                                                                                                                                                                                                             y := math_glue(x,cur_mu);
                                                                                                                                                                                                                                                             delete_glue_ref(x);
                                                                                                                                                                                                                                                             glue_ptr(q) := y;
                                                                                                                                                                                                                                                             subtype(q) := normal;
                                                                                                                                                                                                                                                           End
                                                                                                                                                                                                                                                         Else If (cur_size<>text_size)And(subtype(q)=cond_math_glue) Then
                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                  p := link(q);
                                                                                                                                                                                                                                                                  If p<>null Then If (Type(p)=glue_node)Or(Type(p)=kern_node) Then
                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                      link(q) := link(p);
                                                                                                                                                                                                                                                                                      link(p) := null;
                                                                                                                                                                                                                                                                                      flush_node_list(p);
                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                End

(*FIN INSERT 'Convert \(m)math glue to ordinary glue'*)                                                                                                                                                                                                  ;
                                                                                                                                                                                                                                                         goto done_with_node;
                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                            kern_node:
                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                         math_kern(q,cur_mu);
                                                                                                                                                                                                                                                         goto done_with_node;
                                                                                                                                                                                                                                                       End;

(*FIN INSERT 'Cases for nodes that can appear in an mlist, after which we |goto done_with_node|'*)                                                                                                                                          ;
                                                                                                                                                                                                                                            othercases confusion('mlist1')
(*this can''t happen mlist1][\quad mlist1*)
                                                                                                                                                                                                                                            endcases;


(*INSERT 'Convert \(n)|nucleus(q)| to an hlist and attach the sub/superscripts'*)(*PASCAL module 754*)
                                                                                                                                                                                                                                            Case math_type(nucleus(q)) Of 
                                                                                                                                                                                                                                              math_char, math_text_char:

(*INSERT 'Create a character node |p| for |nucleus(q)|, possibly followed by a kern node for the italic correction, and set |delta| to the italic correction if a subscript is present'*)(*PASCAL module 755*)
                                                                                                                                                                                                                                                                         Begin
                                                                                                                                                                                                                                                                           fetch(nucleus(q));
                                                                                                                                                                                                                                                                           If char_exists(cur_i) Then
                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                               delta := char_italic(cur_f)(cur_i);
                                                                                                                                                                                                                                                                               p := new_character(cur_f,qo(cur_c));
                                                                                                                                                                                                                                                                               If (math_type(nucleus(q))=math_text_char)And(space(cur_f)<>0) Then
                                                                                                                                                                                                                                                                                 delta := 0; {no italic correction in mid-word of text font}
                                                                                                                                                                                                                                                                               If (math_type(subscr(q))=empty)And(delta<>0) Then
                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                   link(p) := new_kern(delta);
                                                                                                                                                                                                                                                                                   delta := 0;
                                                                                                                                                                                                                                                                                 End;
                                                                                                                                                                                                                                                                             End
                                                                                                                                                                                                                                                                           Else p := null;
                                                                                                                                                                                                                                                                         End

(*FIN INSERT 'Create a character node |p| for |nucleus(q)|, possibly followed by a kern node for the italic correction, and set |delta| to the italic correction if a subscript is present'*)                                                 ;
                                                                                                                                                                                                                                              empty: p := null;
                                                                                                                                                                                                                                              sub_box: p := info(nucleus(q));
                                                                                                                                                                                                                                              sub_mlist:
                                                                                                                                                                                                                                                         Begin
                                                                                                                                                                                                                                                           cur_mlist := info(nucleus(q));
                                                                                                                                                                                                                                                           save_style := cur_style;
                                                                                                                                                                                                                                                           mlist_penalties := false;
                                                                                                                                                                                                                                                           mlist_to_hlist; {recursive call}
(*recursion*)
                                                                                                                                                                                                                                                           cur_style := save_style;
(*INSERT 'Set up the values of |cur_size| and |cur_mu|, based on |cur_style|'*)(*PASCAL module 703*)
                                                                                                                                                                                                                                                           Begin
                                                                                                                                                                                                                                                             If cur_style<script_style Then cur_size := text_size
                                                                                                                                                                                                                                                             Else cur_size := 16*((cur_style-text_style) Div 2);
                                                                                                                                                                                                                                                             cur_mu := x_over_n(math_quad(cur_size),18);
                                                                                                                                                                                                                                                           End

(*FIN INSERT 'Set up the values of |cur_size| and |cur_mu|, based on |cur_style|'*)                                                                                                                                                                        ;
                                                                                                                                                                                                                                                           p := hpack(link(temp_head),natural);
                                                                                                                                                                                                                                                         End;
                                                                                                                                                                                                                                              othercases confusion('mlist2')
(*this can''t happen mlist2][\quad mlist2*)
                                                                                                                                                                                                                                              endcases;

                                                                                                                                                                                                                                              new_hlist(q) := p;
                                                                                                                                                                                                                                              If (math_type(subscr(q))=empty)And(math_type(supscr(q))=empty) Then
                                                                                                                                                                                                                                                goto check_dimensions;
                                                                                                                                                                                                                                              make_scripts(q,delta)

(*FIN INSERT 'Convert \(n)|nucleus(q)| to an hlist and attach the sub/superscripts'*)

(*FIN INSERT 'Do first-pass processing based on |type(q)|; |goto done_with_noad| if a noad has been fully processed, |goto check_dimensions| if it has been translated into |new_hlist(q)|, or |goto done_with_node| if a node has been fully processed'*);
                                                                                                                                                                                                                                              check_dimensions: z := hpack(new_hlist(q),natural);
                                                                                                                                                                                                                                              If height(z)>max_h Then max_h := height(z);
                                                                                                                                                                                                                                              If depth(z)>max_d Then max_d := depth(z);
                                                                                                                                                                                                                                              free_node(z,box_node_size);
                                                                                                                                                                                                                                              done_with_noad: r := q;
                                                                                                                                                                                                                                              r_type := Type(r);
                                                                                                                                                                                                                                              done_with_node: q := link(q);
                                                                                                                                                                                                                                            End

(*FIN INSERT 'Process node-or-noad |q| as much as possible in preparation for the second pass of |mlist_to_hlist|, then move to the next item in the mlist'*)                                                                               ;

(*INSERT 'Convert \(a)a final |bin_noad| to an |ord_noad|'*)(*PASCAL module 729*)
                                                                                                                                                                                                                                            If r_type=bin_noad Then

                                                                                                                                                                                                                                              Type (r) := ord_noad

(*FIN INSERT 'Convert \(a)a final |bin_noad| to an |ord_noad|'*)                                                                                                                                                                                ;

(*INSERT 'Make a second pass over the mlist, removing all noads and inserting the proper spacing and penalties'*)(*PASCAL module 760*)
                                                                                                                                                                                                                                                p := temp_head;
                                                                                                                                                                                                                                                link(p) := null;
                                                                                                                                                                                                                                                q := mlist;
                                                                                                                                                                                                                                                r_type := 0;
                                                                                                                                                                                                                                                cur_style := style;

(*INSERT 'Set up the values of |cur_size| and |cur_mu|, based on |cur_style|'*)(*PASCAL module 703*)
                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                If cur_style<script_style Then cur_size := text_size
                                                                                                                                                                                                                                                Else cur_size := 16*((cur_style-text_style) Div 2);
                                                                                                                                                                                                                                                cur_mu := x_over_n(math_quad(cur_size),18);
                                                                                                                                                                                                                                              End

(*FIN INSERT 'Set up the values of |cur_size| and |cur_mu|, based on |cur_style|'*)                                                                                                                                                         ;
                                                                                                                                                                                                                                            While q<>null Do
                                                                                                                                                                                                                                              Begin
(*INSERT 'If node |q| is a style node, change the style and |goto delete_q|; otherwise if it is not a noad, put it into the hlist, advance |q|, and |goto done|; otherwise set |s| to the size of noad |q|, set |t| to the associated type (|ord_noad.. inner_noad|), and set |pen| to the associated penalty'*)(*PASCAL module 761*)
                                                                                                                                                                                                                                                t := ord_noad;
                                                                                                                                                                                                                                                s := noad_size;
                                                                                                                                                                                                                                                pen := inf_penalty;
                                                                                                                                                                                                                                                Case Type(q) Of 
                                                                                                                                                                                                                                                  op_noad,open_noad,close_noad,punct_noad,inner_noad: t := Type(q);
                                                                                                                                                                                                                                                  bin_noad:
                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                              t := bin_noad;
                                                                                                                                                                                                                                                              pen := bin_op_penalty;
                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                  rel_noad:
                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                              t := rel_noad;
                                                                                                                                                                                                                                                              pen := rel_penalty;
                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                  ord_noad,vcenter_noad,over_noad,under_noad: do_nothing;
                                                                                                                                                                                                                                                  radical_noad: s := radical_noad_size;
                                                                                                                                                                                                                                                  accent_noad: s := accent_noad_size;
                                                                                                                                                                                                                                                  fraction_noad:
                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                   t := inner_noad;
                                                                                                                                                                                                                                                                   s := fraction_noad_size;
                                                                                                                                                                                                                                                                 End;
                                                                                                                                                                                                                                                  left_noad,right_noad: t := make_left_right(q,style,max_d,max_h);
                                                                                                                                                                                                                                                  style_node:
(*INSERT 'Change the current style and |goto delete_q|'*)(*PASCAL module 763*)
                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                cur_style := subtype(q);
                                                                                                                                                                                                                                                                s := style_node_size;

(*INSERT 'Set up the values of |cur_size| and |cur_mu|, based on |cur_style|'*)(*PASCAL module 703*)
                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                  If cur_style<script_style Then cur_size := text_size
                                                                                                                                                                                                                                                                  Else cur_size := 16*((cur_style-text_style) Div 2);
                                                                                                                                                                                                                                                                  cur_mu := x_over_n(math_quad(cur_size),18);
                                                                                                                                                                                                                                                                End

(*FIN INSERT 'Set up the values of |cur_size| and |cur_mu|, based on |cur_style|'*)                                                                                                                                                                             ;
                                                                                                                                                                                                                                                                goto delete_q;
                                                                                                                                                                                                                                                              End

(*FIN INSERT 'Change the current style and |goto delete_q|'*)                                                                                                                                                                                     ;
                                                                                                                                                                                                                                                  whatsit_node,penalty_node,rule_node,disc_node,adjust_node,ins_node,mark_node,
                                                                                                                                                                                                                                                  glue_node,kern_node:(**);

                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                    link(p) := q;
                                                                                                                                                                                                                                                    p := q;
                                                                                                                                                                                                                                                    q := link(q);
                                                                                                                                                                                                                                                    link(p) := null;
                                                                                                                                                                                                                                                    goto done;
                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                  othercases confusion('mlist3')
(*this can''t happen mlist3][\quad mlist3*)
                                                                                                                                                                                                                                                  endcases

(*FIN INSERT 'If node |q| is a style node, change the style and |goto delete_q|; otherwise if it is not a noad, put it into the hlist, advance |q|, and |goto done|; otherwise set |s| to the size of noad |q|, set |t| to the associated type (|ord_noad.. inner_noad|), and set |pen| to the associated penalty'*);

(*INSERT 'Append inter-element spacing based on |r_type| and |t|'*)(*PASCAL module 766*)
                                                                                                                                                                                                                                                  If r_type>0 Then {not the first noad}
                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                      Case so(str_pool[r_type*8+t+magic_offset]) Of 
                                                                                                                                                                                                                                                        '0': x := 0;
                                                                                                                                                                                                                                                        '1': If cur_style<script_style Then x := thin_mu_skip_codeelse x:=0;
                                                                                                                                                                                                                                                        '2': x := thin_mu_skip_code;
                                                                                                                                                                                                                                                        '3': If cur_style<script_style Then x := med_mu_skip_codeelse x:=0;
                                                                                                                                                                                                                                                        '4': If cur_style<script_style Then x := thick_mu_skip_codeelse x:=0;
                                                                                                                                                                                                                                                        othercases confusion('mlist4')
(*this can''t happen mlist4][\quad mlist4*)
                                                                                                                                                                                                                                                        endcases;
                                                                                                                                                                                                                                                        If x<>0 Then
                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                            y := math_glue(glue_par(x),cur_mu);
                                                                                                                                                                                                                                                            z := new_glue(y);
                                                                                                                                                                                                                                                            glue_ref_count(y) := null;
                                                                                                                                                                                                                                                            link(p) := z;
                                                                                                                                                                                                                                                            p := z;

                                                                                                                                                                                                                                                            subtype(z) := x+1; {store a symbolic subtype}
                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Append inter-element spacing based on |r_type| and |t|'*)                                                                                                                                                                               ;

(*INSERT 'Append any |new_hlist| entries for |q|, and any appropriate penalties'*)(*PASCAL module 767*)
                                                                                                                                                                                                                                                      If new_hlist(q)<>null Then
                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                          link(p) := new_hlist(q);
                                                                                                                                                                                                                                                          Repeat
                                                                                                                                                                                                                                                            p := link(p);
                                                                                                                                                                                                                                                          Until link(p)=null;
                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                      If penalties Then If link(q)<>null Then If pen<inf_penalty Then
                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                  r_type := Type(link(q));
                                                                                                                                                                                                                                                                                                  If r_type<>penalty_node Then If r_type<>rel_noad Then
                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                   z := new_penalty(pen);
                                                                                                                                                                                                                                                                                                                                   link(p) := z;
                                                                                                                                                                                                                                                                                                                                   p := z;
                                                                                                                                                                                                                                                                                                                                 End;
                                                                                                                                                                                                                                                                                                End

(*FIN INSERT 'Append any |new_hlist| entries for |q|, and any appropriate penalties'*)                                                                                                                                                                ;
                                                                                                                                                                                                                                                      r_type := t;
                                                                                                                                                                                                                                                      delete_q: r := q;
                                                                                                                                                                                                                                                      q := link(q);
                                                                                                                                                                                                                                                      free_node(r,s);
                                                                                                                                                                                                                                                      done:
                                                                                                                                                                                                                                                    End

(*FIN INSERT 'Make a second pass over the mlist, removing all noads and inserting the proper spacing and penalties'*)                                                                                                                             ;
                                                                                                                                                                                                                                                End;


(***PASCAL module 772***)
                                                                                                                                                                                                                                                Procedure push_alignment;

                                                                                                                                                                                                                                                Var p: pointer; {the new alignment stack node}
                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                  p := get_node(align_stack_node_size);
                                                                                                                                                                                                                                                  link(p) := align_ptr;
                                                                                                                                                                                                                                                  info(p) := cur_align;
                                                                                                                                                                                                                                                  llink(p) := preamble;
                                                                                                                                                                                                                                                  rlink(p) := cur_span;
                                                                                                                                                                                                                                                  mem[p+2].int := cur_loop;
                                                                                                                                                                                                                                                  mem[p+3].int := align_state;
                                                                                                                                                                                                                                                  info(p+4) := cur_head;
                                                                                                                                                                                                                                                  link(p+4) := cur_tail;
                                                                                                                                                                                                                                                  align_ptr := p;
                                                                                                                                                                                                                                                  cur_head := get_avail;
                                                                                                                                                                                                                                                End;



                                                                                                                                                                                                                                                Procedure pop_alignment;

                                                                                                                                                                                                                                                Var p: pointer; {the top alignment stack node}
                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                  free_avail(cur_head);
                                                                                                                                                                                                                                                  p := align_ptr;
                                                                                                                                                                                                                                                  cur_tail := link(p+4);
                                                                                                                                                                                                                                                  cur_head := info(p+4);
                                                                                                                                                                                                                                                  align_state := mem[p+3].int;
                                                                                                                                                                                                                                                  cur_loop := mem[p+2].int;
                                                                                                                                                                                                                                                  cur_span := rlink(p);
                                                                                                                                                                                                                                                  preamble := llink(p);
                                                                                                                                                                                                                                                  cur_align := info(p);
                                                                                                                                                                                                                                                  align_ptr := link(p);
                                                                                                                                                                                                                                                  free_node(p,align_stack_node_size);
                                                                                                                                                                                                                                                End;


(***PASCAL module 774***)
(*\4*)
(*INSERT 'Declare the procedure called |get_preamble_token|'*)(*PASCAL module 782*)
                                                                                                                                                                                                                                                Procedure get_preamble_token;

                                                                                                                                                                                                                                                Label restart;
                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                  restart: get_token;
                                                                                                                                                                                                                                                  While (cur_chr=span_code)And(cur_cmd=tab_mark) Do
                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                      get_token; {this token will be expanded once}
                                                                                                                                                                                                                                                      If cur_cmd>max_command Then
                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                          expand;
                                                                                                                                                                                                                                                          get_token;
                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                  If cur_cmd=endv Then
                                                                                                                                                                                                                                                    fatal_error('(interwoven alignment preambles are not allowed)');
(*interwoven alignment preambles...*)
                                                                                                                                                                                                                                                  If (cur_cmd=assign_glue)And(cur_chr=glue_base+tab_skip_code) Then
                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                      scan_optional_equals;
                                                                                                                                                                                                                                                      scan_glue(glue_val);
                                                                                                                                                                                                                                                      If global_defs>0 Then geq_define(glue_base+tab_skip_code,glue_ref,cur_val)
                                                                                                                                                                                                                                                      Else eq_define(glue_base+tab_skip_code,glue_ref,cur_val);
                                                                                                                                                                                                                                                      goto restart;
                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                End;

(*FIN INSERT 'Declare the procedure called |get_preamble_token|'*)(*@>
*)(*@>
*)
                                                                                                                                                                                                                                                Procedure align_peek;
                                                                                                                                                                                                                                                forward;
(*\2*)

                                                                                                                                                                                                                                                Procedure normal_paragraph;
                                                                                                                                                                                                                                                forward;
(*\2*)

                                                                                                                                                                                                                                                Procedure init_align;

                                                                                                                                                                                                                                                Label done, done1, done2, continue;

                                                                                                                                                                                                                                                Var save_cs_ptr: pointer; {|warning_index| value for error messages}
                                                                                                                                                                                                                                                  p: pointer; {for short-term temporary use}
                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                  save_cs_ptr := cur_cs; {\.[\\halign] or \.[\\valign], usually}
                                                                                                                                                                                                                                                  push_alignment;
                                                                                                                                                                                                                                                  align_state := -1000000; {enter a new alignment level}

(*INSERT 'Check for improper alignment in displayed math'*)(*PASCAL module 776*)
                                                                                                                                                                                                                                                  If (mode=mmode)And((tail<>head)Or(incompleat_noad<>null)) Then
                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                      print_err('Improper ');
                                                                                                                                                                                                                                                      print_esc('halign');
                                                                                                                                                                                                                                                      print(' inside $$''s');
(*Improper \\halign...*)
                                                                                                                                                                                                                                                      help3('Displays can use special alignments (like \eqalignno)')

                                                                                                                                                                                                                                                      ('only if nothing but the alignment itself is between $$''s.')

                                                                                                                                                                                                                                                      ('So I''ve deleted the formulas that preceded this alignment.');
                                                                                                                                                                                                                                                      error;
                                                                                                                                                                                                                                                      flush_math;
                                                                                                                                                                                                                                                    End

(*FIN INSERT 'Check for improper alignment in displayed math'*)                                                                                                                                                                                   ;
                                                                                                                                                                                                                                                  push_nest; {enter a new semantic level}

(*INSERT 'Change current mode to |-vmode| for \.{\\halign}, |-hmode| for \.{\\valign}'*)(*PASCAL module 775*)
                                                                                                                                                                                                                                                  If mode=mmode Then
                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                      mode := -vmode;
                                                                                                                                                                                                                                                      prev_depth := nest[nest_ptr-2].aux_field.sc;
                                                                                                                                                                                                                                                    End
                                                                                                                                                                                                                                                  Else If mode>0 Then negate(mode)

(*FIN INSERT 'Change current mode to |-vmode| for \.{\\halign}, |-hmode| for \.{\\valign}'*)                                                                                                                                                      ;
                                                                                                                                                                                                                                                  scan_spec(align_group,false);


(*INSERT 'Scan the preamble and record it in the |preamble| list'*)(*PASCAL module 777*)
                                                                                                                                                                                                                                                  preamble := null;
                                                                                                                                                                                                                                                  cur_align := align_head;
                                                                                                                                                                                                                                                  cur_loop := null;
                                                                                                                                                                                                                                                  scanner_status := aligning;
                                                                                                                                                                                                                                                  warning_index := save_cs_ptr;
                                                                                                                                                                                                                                                  align_state := -1000000;
  {at this point, |cur_cmd=left_brace|}
                                                                                                                                                                                                                                                  loop
                                                                                                                                                                                                                                                  Begin
(*INSERT 'Append the current tabskip glue to the preamble list'*)(*PASCAL module 778*)
                                                                                                                                                                                                                                                    link(cur_align) := new_param_glue(tab_skip_code);
                                                                                                                                                                                                                                                    cur_align := link(cur_align)

(*FIN INSERT 'Append the current tabskip glue to the preamble list'*)                                                                                                                                                                               ;
                                                                                                                                                                                                                                                    If cur_cmd=car_ret Then goto done; {\.[\\cr] ends the preamble}

(*INSERT 'Scan preamble text until |cur_cmd| is |tab_mark| or |car_ret|, looking for changes in the tabskip glue; append an alignrecord to the preamble list'*)(*PASCAL module 779*)

(*INSERT 'Scan the template \<u_j>, putting the resulting token list in |hold_head|'*)(*PASCAL module 783*)
                                                                                                                                                                                                                                                    p := hold_head;
                                                                                                                                                                                                                                                    link(p) := null;
                                                                                                                                                                                                                                                    loop
                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                      get_preamble_token;
                                                                                                                                                                                                                                                      If cur_cmd=mac_param Then goto done1;
                                                                                                                                                                                                                                                      If (cur_cmd<=car_ret)And(cur_cmd>=tab_mark)And(align_state=-1000000) Then
                                                                                                                                                                                                                                                        If (p=hold_head)And(cur_loop=null)And(cur_cmd=tab_mark)
                                                                                                                                                                                                                                                          Then cur_loop := cur_align
                                                                                                                                                                                                                                                      Else
                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                          print_err('Missing # inserted in alignment preamble');
(*Missing \# inserted...*)
                                                                                                                                                                                                                                                          help3('There should be exactly one # between &''s, when an')

                                                                                                                                                                                                                                                          ('\halign or \valign is being set up. In this case you had')

                                                                                                                                                                                                                                                          ('none, so I''ve put one in; maybe that will work.');
                                                                                                                                                                                                                                                          back_error;
                                                                                                                                                                                                                                                          goto done1;
                                                                                                                                                                                                                                                        End
                                                                                                                                                                                                                                                      Else If (cur_cmd<>spacer)Or(p<>hold_head) Then
                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                               link(p) := get_avail;
                                                                                                                                                                                                                                                               p := link(p);
                                                                                                                                                                                                                                                               info(p) := cur_tok;
                                                                                                                                                                                                                                                             End;
                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                    done1:

(*FIN INSERT 'Scan the template \<u_j>, putting the resulting token list in |hold_head|'*)                                                                                                                                                          ;
                                                                                                                                                                                                                                                    link(cur_align) := new_null_box;
                                                                                                                                                                                                                                                    cur_align := link(cur_align); {a new alignrecord}
                                                                                                                                                                                                                                                    info(cur_align) := end_span;
                                                                                                                                                                                                                                                    width(cur_align) := null_flag;
                                                                                                                                                                                                                                                    u_part(cur_align) := link(hold_head);

(*INSERT 'Scan the template \<v_j>, putting the resulting token list in |hold_head|'*)(*PASCAL module 784*)
                                                                                                                                                                                                                                                    p := hold_head;
                                                                                                                                                                                                                                                    link(p) := null;
                                                                                                                                                                                                                                                    loop
                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                      continue: get_preamble_token;
                                                                                                                                                                                                                                                      If (cur_cmd<=car_ret)And(cur_cmd>=tab_mark)And(align_state=-1000000) Then
                                                                                                                                                                                                                                                        goto done2;
                                                                                                                                                                                                                                                      If cur_cmd=mac_param Then
                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                          print_err('Only one # is allowed per tab');
(*Only one \# is allowed...*)
                                                                                                                                                                                                                                                          help3('There should be exactly one # between &''s, when an')

                                                                                                                                                                                                                                                          ('\halign or \valign is being set up. In this case you had')

                                                                                                                                                                                                                                                          ('more than one, so I''m ignoring all but the first.');
                                                                                                                                                                                                                                                          error;
                                                                                                                                                                                                                                                          goto continue;
                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                      link(p) := get_avail;
                                                                                                                                                                                                                                                      p := link(p);
                                                                                                                                                                                                                                                      info(p) := cur_tok;
                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                    done2: link(p) := get_avail;
                                                                                                                                                                                                                                                    p := link(p);
                                                                                                                                                                                                                                                    info(p) := end_template_token {put \.[\\endtemplate] at the end}

(*FIN INSERT 'Scan the template \<v_j>, putting the resulting token list in |hold_head|'*)                                                                                                                                                          ;
                                                                                                                                                                                                                                                    v_part(cur_align) := link(hold_head)

(*FIN INSERT 'Scan preamble text until |cur_cmd| is |tab_mark| or |car_ret|, looking for changes in the tabskip glue; append an alignrecord to the preamble list'*)                                                                                 ;
                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                  done: scanner_status := normal

(*FIN INSERT 'Scan the preamble and record it in the |preamble| list'*)                                                                                                                                                                           ;
                                                                                                                                                                                                                                                  new_save_level(align_group);
                                                                                                                                                                                                                                                  If every_cr<>null Then begin_token_list(every_cr,every_cr_text);
                                                                                                                                                                                                                                                  align_peek; {look for \.[\\noalign] or \.[\\omit]}
                                                                                                                                                                                                                                                End;


(***PASCAL module 786***)
(*\4*)
(*INSERT 'Declare the procedure called |init_span|'*)(*PASCAL module 787*)
                                                                                                                                                                                                                                                Procedure init_span(p:pointer);
                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                  push_nest;
                                                                                                                                                                                                                                                  If mode=-hmode Then space_factor := 1000
                                                                                                                                                                                                                                                  Else
                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                      prev_depth := ignore_depth;
                                                                                                                                                                                                                                                      normal_paragraph;
                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                  cur_span := p;
                                                                                                                                                                                                                                                End;

(*FIN INSERT 'Declare the procedure called |init_span|'*)(*@>
*)(*@>
*)
                                                                                                                                                                                                                                                Procedure init_row;
                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                  push_nest;
                                                                                                                                                                                                                                                  mode := (-hmode-vmode)-mode;
                                                                                                                                                                                                                                                  If mode=-hmode Then space_factor := 0
                                                                                                                                                                                                                                                  Else prev_depth := 0;
                                                                                                                                                                                                                                                  tail_append(new_glue(glue_ptr(preamble)));
                                                                                                                                                                                                                                                  subtype(tail) := tab_skip_code+1;

                                                                                                                                                                                                                                                  cur_align := link(preamble);
                                                                                                                                                                                                                                                  cur_tail := cur_head;
                                                                                                                                                                                                                                                  init_span(cur_align);
                                                                                                                                                                                                                                                End;


(***PASCAL module 788***)
                                                                                                                                                                                                                                                Procedure init_col;
                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                  extra_info(cur_align) := cur_cmd;
                                                                                                                                                                                                                                                  If cur_cmd=omit Then align_state := 0
                                                                                                                                                                                                                                                  Else
                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                      back_input;
                                                                                                                                                                                                                                                      begin_token_list(u_part(cur_align),u_template);
                                                                                                                                                                                                                                                    End; {now |align_state=1000000|}
                                                                                                                                                                                                                                                End;


(***PASCAL module 791***)
                                                                                                                                                                                                                                                Function fin_col: boolean;

                                                                                                                                                                                                                                                Label exit;

                                                                                                                                                                                                                                                Var p: pointer; {the alignrecord after the current one}
                                                                                                                                                                                                                                                  q,r: pointer; {temporary pointers for list manipulation}
                                                                                                                                                                                                                                                  s: pointer; {a new span node}
                                                                                                                                                                                                                                                  u: pointer; {a new unset box}
                                                                                                                                                                                                                                                  w: scaled; {natural width}
                                                                                                                                                                                                                                                  o: glue_ord; {order of infinity}
                                                                                                                                                                                                                                                  n: halfword; {span counter}
                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                  If cur_align=null Then confusion('endv');
                                                                                                                                                                                                                                                  q := link(cur_align);
                                                                                                                                                                                                                                                  If q=null Then confusion('endv');
(*this can''t happen endv][\quad endv*)
                                                                                                                                                                                                                                                  If align_state<500000 Then
                                                                                                                                                                                                                                                    fatal_error('(interwoven alignment preambles are not allowed)');
(*interwoven alignment preambles...*)
                                                                                                                                                                                                                                                  p := link(q);

(*INSERT 'If the preamble list has been traversed, check that the row has ended'*)(*PASCAL module 792*)
                                                                                                                                                                                                                                                  If (p=null)And(extra_info(cur_align)<cr_code) Then
                                                                                                                                                                                                                                                    If cur_loop<>null Then
(*INSERT 'Lengthen the preamble periodically'*)(*PASCAL module 793*)
                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                        link(q) := new_null_box;
                                                                                                                                                                                                                                                        p := link(q); {a new alignrecord}
                                                                                                                                                                                                                                                        info(p) := end_span;
                                                                                                                                                                                                                                                        width(p) := null_flag;
                                                                                                                                                                                                                                                        cur_loop := link(cur_loop);

(*INSERT 'Copy the templates from node |cur_loop| into node |p|'*)(*PASCAL module 794*)
                                                                                                                                                                                                                                                        q := hold_head;
                                                                                                                                                                                                                                                        r := u_part(cur_loop);
                                                                                                                                                                                                                                                        While r<>null Do
                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                            link(q) := get_avail;
                                                                                                                                                                                                                                                            q := link(q);
                                                                                                                                                                                                                                                            info(q) := info(r);
                                                                                                                                                                                                                                                            r := link(r);
                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                        link(q) := null;
                                                                                                                                                                                                                                                        u_part(p) := link(hold_head);
                                                                                                                                                                                                                                                        q := hold_head;
                                                                                                                                                                                                                                                        r := v_part(cur_loop);
                                                                                                                                                                                                                                                        While r<>null Do
                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                            link(q) := get_avail;
                                                                                                                                                                                                                                                            q := link(q);
                                                                                                                                                                                                                                                            info(q) := info(r);
                                                                                                                                                                                                                                                            r := link(r);
                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                        link(q) := null;
                                                                                                                                                                                                                                                        v_part(p) := link(hold_head)

(*FIN INSERT 'Copy the templates from node |cur_loop| into node |p|'*)                                                                                                                                                                                  ;
                                                                                                                                                                                                                                                        cur_loop := link(cur_loop);
                                                                                                                                                                                                                                                        link(p) := new_glue(glue_ptr(cur_loop));
                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Lengthen the preamble periodically'*)
                                                                                                                                                                                                                                                  Else
                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                      print_err('Extra alignment tab has been changed to ');
(*Extra alignment tab...*)
                                                                                                                                                                                                                                                      print_esc('cr');
                                                                                                                                                                                                                                                      help3('You have given more \span or & marks than there were')

                                                                                                                                                                                                                                                      ('in the preamble to the \halign or \valign now in progress.')

                                                                                                                                                                                                                                                      ('So I''ll assume that you meant to type \cr instead.');
                                                                                                                                                                                                                                                      extra_info(cur_align) := cr_code;
                                                                                                                                                                                                                                                      error;
                                                                                                                                                                                                                                                    End

(*FIN INSERT 'If the preamble list has been traversed, check that the row has ended'*)                                                                                                                                                            ;
                                                                                                                                                                                                                                                  If extra_info(cur_align)<>span_code Then
                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                      unsave;
                                                                                                                                                                                                                                                      new_save_level(align_group);


(*INSERT 'Package an unset box for the current column and record its width'*)(*PASCAL module 796*)
                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                        If mode=-hmode Then
                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                            adjust_tail := cur_tail;
                                                                                                                                                                                                                                                            u := hpack(link(head),natural);
                                                                                                                                                                                                                                                            w := width(u);
                                                                                                                                                                                                                                                            cur_tail := adjust_tail;
                                                                                                                                                                                                                                                            adjust_tail := null;
                                                                                                                                                                                                                                                          End
                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                            u := vpackage(link(head),natural,0);
                                                                                                                                                                                                                                                            w := height(u);
                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                        n := min_quarterword; {this represents a span count of 1}
                                                                                                                                                                                                                                                        If cur_span<>cur_align Then
(*INSERT 'Update width entry for spanned columns'*)(*PASCAL module 798*)
                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                            q := cur_span;
                                                                                                                                                                                                                                                            Repeat
                                                                                                                                                                                                                                                              incr(n);
                                                                                                                                                                                                                                                              q := link(link(q));
                                                                                                                                                                                                                                                            Until q=cur_align;
                                                                                                                                                                                                                                                            If n>max_quarterword Then confusion('256 spans'); {this can happen, but won''t}
(*system dependencies*)
(*this can''t happen 256 spans][\quad 256 spans*)
                                                                                                                                                                                                                                                            q := cur_span;
                                                                                                                                                                                                                                                            While link(info(q))<n Do
                                                                                                                                                                                                                                                              q := info(q);
                                                                                                                                                                                                                                                            If link(info(q))>n Then
                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                s := get_node(span_node_size);
                                                                                                                                                                                                                                                                info(s) := info(q);
                                                                                                                                                                                                                                                                link(s) := n;
                                                                                                                                                                                                                                                                info(q) := s;
                                                                                                                                                                                                                                                                width(s) := w;
                                                                                                                                                                                                                                                              End
                                                                                                                                                                                                                                                            Else If width(info(q))<w Then width(info(q)) := w;
                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Update width entry for spanned columns'*)
                                                                                                                                                                                                                                                        Else If w>width(cur_align) Then width(cur_align) := w;

                                                                                                                                                                                                                                                        Type (u) := unset_node;
                                                                                                                                                                                                                                                          span_count(u) := n;


(*INSERT 'Determine the stretch order'*)(*PASCAL module 659*)
                                                                                                                                                                                                                                                          If total_stretch[filll]<>0 Then o := filll
                                                                                                                                                                                                                                                          Else If total_stretch[fill]<>0 Then o := fill
                                                                                                                                                                                                                                                          Else If total_stretch[fil]<>0 Then o := fil
                                                                                                                                                                                                                                                          Else o := normal

(*FIN INSERT 'Determine the stretch order'*)                                                                                                                                                                                                              ;
                                                                                                                                                                                                                                                          glue_order(u) := o;
                                                                                                                                                                                                                                                          glue_stretch(u) := total_stretch[o];


(*INSERT 'Determine the shrink order'*)(*PASCAL module 665*)
                                                                                                                                                                                                                                                          If total_shrink[filll]<>0 Then o := filll
                                                                                                                                                                                                                                                          Else If total_shrink[fill]<>0 Then o := fill
                                                                                                                                                                                                                                                          Else If total_shrink[fil]<>0 Then o := fil
                                                                                                                                                                                                                                                          Else o := normal

(*FIN INSERT 'Determine the shrink order'*)                                                                                                                                                                                                               ;
                                                                                                                                                                                                                                                          glue_sign(u) := o;
                                                                                                                                                                                                                                                          glue_shrink(u) := total_shrink[o];

                                                                                                                                                                                                                                                          pop_nest;
                                                                                                                                                                                                                                                          link(tail) := u;
                                                                                                                                                                                                                                                          tail := u;
                                                                                                                                                                                                                                                        End

(*FIN INSERT 'Package an unset box for the current column and record its width'*)                                                                                                                                                                       ;

(*INSERT 'Copy the tabskip glue between columns'*)(*PASCAL module 795*)
                                                                                                                                                                                                                                                        tail_append(new_glue(glue_ptr(link(cur_align))));
                                                                                                                                                                                                                                                        subtype(tail) := tab_skip_code+1

(*FIN INSERT 'Copy the tabskip glue between columns'*)                                                                                                                                                                                                  ;
                                                                                                                                                                                                                                                        If extra_info(cur_align)>=cr_code Then
                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                            fin_col := true;
                                                                                                                                                                                                                                                            return;
                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                        init_span(p);
                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                      align_state := 1000000;
(*INSERT 'Get the next non-blank non-call token'*)(*PASCAL module 406*)
                                                                                                                                                                                                                                                      Repeat
                                                                                                                                                                                                                                                        get_x_token;
                                                                                                                                                                                                                                                      Until cur_cmd<>spacer

(*FIN INSERT 'Get the next non-blank non-call token'*)                                                                                                                                                                                                ;
                                                                                                                                                                                                                                                      cur_align := p;
                                                                                                                                                                                                                                                      init_col;
                                                                                                                                                                                                                                                      fin_col := false;
                                                                                                                                                                                                                                                      exit:
                                                                                                                                                                                                                                                    End;


(***PASCAL module 799***)
                                                                                                                                                                                                                                                  Procedure fin_row;

                                                                                                                                                                                                                                                  Var p: pointer; {the new unset box}
                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                    If mode=-hmode Then
                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                        p := hpack(link(head),natural);
                                                                                                                                                                                                                                                        pop_nest;
                                                                                                                                                                                                                                                        append_to_vlist(p);
                                                                                                                                                                                                                                                        If cur_head<>cur_tail Then
                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                            link(tail) := link(cur_head);
                                                                                                                                                                                                                                                            tail := cur_tail;
                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                      End
                                                                                                                                                                                                                                                    Else
                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                        p := vpack(link(head),natural);
                                                                                                                                                                                                                                                        pop_nest;
                                                                                                                                                                                                                                                        link(tail) := p;
                                                                                                                                                                                                                                                        tail := p;
                                                                                                                                                                                                                                                        space_factor := 1000;
                                                                                                                                                                                                                                                      End;

                                                                                                                                                                                                                                                    Type (p) := unset_node;
                                                                                                                                                                                                                                                      glue_stretch(p) := 0;
                                                                                                                                                                                                                                                      If every_cr<>null Then begin_token_list(every_cr,every_cr_text);
                                                                                                                                                                                                                                                      align_peek;
                                                                                                                                                                                                                                                    End; {note that |glue_shrink(p)=0| since |glue_shrink==shift_amount|}


(***PASCAL module 800***)
                                                                                                                                                                                                                                                    Procedure do_assignments;
                                                                                                                                                                                                                                                    forward;
(*\2*)

                                                                                                                                                                                                                                                    Procedure resume_after_display;
                                                                                                                                                                                                                                                    forward;
(*\2*)

                                                                                                                                                                                                                                                    Procedure build_page;
                                                                                                                                                                                                                                                    forward;
(*\2*)

                                                                                                                                                                                                                                                    Procedure fin_align;

                                                                                                                                                                                                                                                    Var p,q,r,s,u,v: pointer; {registers for the list operations}
                                                                                                                                                                                                                                                      t,w: scaled; {width of column}
                                                                                                                                                                                                                                                      o: scaled; {shift offset for unset boxes}
                                                                                                                                                                                                                                                      n: halfword; {matching span amount}
                                                                                                                                                                                                                                                      rule_save: scaled; {temporary storage for |overfull_rule|}
                                                                                                                                                                                                                                                      aux_save: memory_word; {temporary storage for |aux|}
                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                      If cur_group<>align_group Then confusion('align1');
(*this can''t happen align][\quad align*)
                                                                                                                                                                                                                                                      unsave; {that |align_group| was for individual entries}
                                                                                                                                                                                                                                                      If cur_group<>align_group Then confusion('align0');
                                                                                                                                                                                                                                                      unsave; {that |align_group| was for the whole alignment}
                                                                                                                                                                                                                                                      If nest[nest_ptr-1].mode_field=mmode Then o := display_indent
                                                                                                                                                                                                                                                      Else o := 0;

(*INSERT 'Go through the preamble list, determining the column widths and changing the alignrecords to dummy unset boxes'*)(*PASCAL module 801*)
                                                                                                                                                                                                                                                      q := link(preamble);
                                                                                                                                                                                                                                                      Repeat
                                                                                                                                                                                                                                                        flush_list(u_part(q));
                                                                                                                                                                                                                                                        flush_list(v_part(q));
                                                                                                                                                                                                                                                        p := link(link(q));
                                                                                                                                                                                                                                                        If width(q)=null_flag Then

(*INSERT 'Nullify |width(q)| and the tabskip glue following this column'*)(*PASCAL module 802*)
                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                            width(q) := 0;
                                                                                                                                                                                                                                                            r := link(q);
                                                                                                                                                                                                                                                            s := glue_ptr(r);
                                                                                                                                                                                                                                                            If s<>zero_glue Then
                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                add_glue_ref(zero_glue);
                                                                                                                                                                                                                                                                delete_glue_ref(s);
                                                                                                                                                                                                                                                                glue_ptr(r) := zero_glue;
                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Nullify |width(q)| and the tabskip glue following this column'*)                                                                                                                                                                          ;
                                                                                                                                                                                                                                                        If info(q)<>end_span Then

(*INSERT 'Merge the widths in the span nodes of |q| with those of |p|, destroying the span nodes of |q|'*)(*PASCAL module 803*)
                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                            t := width(q)+width(glue_ptr(link(q)));
                                                                                                                                                                                                                                                            r := info(q);
                                                                                                                                                                                                                                                            s := end_span;
                                                                                                                                                                                                                                                            info(s) := p;
                                                                                                                                                                                                                                                            n := min_quarterword+1;
                                                                                                                                                                                                                                                            Repeat
                                                                                                                                                                                                                                                              width(r) := width(r)-t;
                                                                                                                                                                                                                                                              u := info(r);
                                                                                                                                                                                                                                                              While link(r)>n Do
                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                  s := info(s);
                                                                                                                                                                                                                                                                  n := link(info(s))+1;
                                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                                              If link(r)<n Then
                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                  info(r) := info(s);
                                                                                                                                                                                                                                                                  info(s) := r;
                                                                                                                                                                                                                                                                  decr(link(r));
                                                                                                                                                                                                                                                                  s := r;
                                                                                                                                                                                                                                                                End
                                                                                                                                                                                                                                                              Else
                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                  If width(r)>width(info(s)) Then width(info(s)) := width(r);
                                                                                                                                                                                                                                                                  free_node(r,span_node_size);
                                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                                              r := u;
                                                                                                                                                                                                                                                            Until r=end_span;
                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Merge the widths in the span nodes of |q| with those of |p|, destroying the span nodes of |q|'*)                                                                                                                                          ;

                                                                                                                                                                                                                                                        Type (q) := unset_node;
                                                                                                                                                                                                                                                          span_count(q) := min_quarterword;
                                                                                                                                                                                                                                                          height(q) := 0;
                                                                                                                                                                                                                                                          depth(q) := 0;
                                                                                                                                                                                                                                                          glue_order(q) := normal;
                                                                                                                                                                                                                                                          glue_sign(q) := normal;
                                                                                                                                                                                                                                                          glue_stretch(q) := 0;
                                                                                                                                                                                                                                                          glue_shrink(q) := 0;
                                                                                                                                                                                                                                                          q := p;
                                                                                                                                                                                                                                                        Until q=null

(*FIN INSERT 'Go through the preamble list, determining the column widths and changing the alignrecords to dummy unset boxes'*)                                                                                                                         ;

(*INSERT 'Package the preamble list, to determine the actual tabskip glue amounts, and let |p| point to this prototype box'*)(*PASCAL module 804*)
                                                                                                                                                                                                                                                        save_ptr := save_ptr-2;
                                                                                                                                                                                                                                                        pack_begin_line := -mode_line;
                                                                                                                                                                                                                                                        If mode=-vmode Then
                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                            rule_save := overfull_rule;
                                                                                                                                                                                                                                                            overfull_rule := 0; {prevent rule from being packaged}
                                                                                                                                                                                                                                                            p := hpack(preamble,saved(1),saved(0));
                                                                                                                                                                                                                                                            overfull_rule := rule_save;
                                                                                                                                                                                                                                                          End
                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                            q := link(preamble);
                                                                                                                                                                                                                                                            Repeat
                                                                                                                                                                                                                                                              height(q) := width(q);
                                                                                                                                                                                                                                                              width(q) := 0;
                                                                                                                                                                                                                                                              q := link(link(q));
                                                                                                                                                                                                                                                            Until q=null;
                                                                                                                                                                                                                                                            p := vpack(preamble,saved(1),saved(0));
                                                                                                                                                                                                                                                            q := link(preamble);
                                                                                                                                                                                                                                                            Repeat
                                                                                                                                                                                                                                                              width(q) := height(q);
                                                                                                                                                                                                                                                              height(q) := 0;
                                                                                                                                                                                                                                                              q := link(link(q));
                                                                                                                                                                                                                                                            Until q=null;
                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                        pack_begin_line := 0

(*FIN INSERT 'Package the preamble list, to determine the actual tabskip glue amounts, and let |p| point to this prototype box'*)                                                                                                                       ;

(*INSERT 'Set the glue in all the unset boxes of the current list'*)(*PASCAL module 805*)
                                                                                                                                                                                                                                                        q := link(head);
                                                                                                                                                                                                                                                        s := head;
                                                                                                                                                                                                                                                        While q<>null Do
                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                            If Not is_char_node(q) Then
                                                                                                                                                                                                                                                              If Type(q)=unset_node Then

(*INSERT 'Set the unset box |q| and the unset boxes in it'*)(*PASCAL module 807*)
                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                  If mode=-vmode Then
                                                                                                                                                                                                                                                                    Begin

                                                                                                                                                                                                                                                                      Type (q) := hlist_node;
                                                                                                                                                                                                                                                                        width(q) := width(p);
                                                                                                                                                                                                                                                                      End
                                                                                                                                                                                                                                                                      Else
                                                                                                                                                                                                                                                                        Begin

                                                                                                                                                                                                                                                                          Type (q) := vlist_node;
                                                                                                                                                                                                                                                                            height(q) := height(p);
                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                          glue_order(q) := glue_order(p);
                                                                                                                                                                                                                                                                          glue_sign(q) := glue_sign(p);
                                                                                                                                                                                                                                                                          glue_set(q) := glue_set(p);
                                                                                                                                                                                                                                                                          shift_amount(q) := o;
                                                                                                                                                                                                                                                                          r := link(list_ptr(q));
                                                                                                                                                                                                                                                                          s := link(list_ptr(p));
                                                                                                                                                                                                                                                                          Repeat
(*INSERT 'Set the glue in node |r| and change it from an unset node'*)(*PASCAL module 808*)
                                                                                                                                                                                                                                                                            n := span_count(r);
                                                                                                                                                                                                                                                                            t := width(s);
                                                                                                                                                                                                                                                                            w := t;
                                                                                                                                                                                                                                                                            u := hold_head;
                                                                                                                                                                                                                                                                            While n>min_quarterword Do
                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                decr(n);

(*INSERT 'Append tabskip glue and an empty box to list |u|, and update |s| and |t| as the prototype nodes are passed'*)(*PASCAL module 809*)
                                                                                                                                                                                                                                                                                s := link(s);
                                                                                                                                                                                                                                                                                v := glue_ptr(s);
                                                                                                                                                                                                                                                                                link(u) := new_glue(v);
                                                                                                                                                                                                                                                                                u := link(u);
                                                                                                                                                                                                                                                                                subtype(u) := tab_skip_code+1;
                                                                                                                                                                                                                                                                                t := t+width(v);
                                                                                                                                                                                                                                                                                If glue_sign(p)=stretching Then
                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                    If stretch_order(v)=glue_order(p) Then
                                                                                                                                                                                                                                                                                      t := t+round(float(glue_set(p))*stretch(v));
(*real multiplication*)
                                                                                                                                                                                                                                                                                  End
                                                                                                                                                                                                                                                                                Else If glue_sign(p)=shrinking Then
                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                         If shrink_order(v)=glue_order(p) Then
                                                                                                                                                                                                                                                                                           t := t-round(float(glue_set(p))*shrink(v));
                                                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                                                                s := link(s);
                                                                                                                                                                                                                                                                                link(u) := new_null_box;
                                                                                                                                                                                                                                                                                u := link(u);
                                                                                                                                                                                                                                                                                t := t+width(s);
                                                                                                                                                                                                                                                                                If mode=-vmode Then width(u) := width(s)
                                                                                                                                                                                                                                                                                Else
                                                                                                                                                                                                                                                                                  Begin

                                                                                                                                                                                                                                                                                    Type (u) := vlist_node;
                                                                                                                                                                                                                                                                                      height(u) := width(s);
                                                                                                                                                                                                                                                                                    End

(*FIN INSERT 'Append tabskip glue and an empty box to list |u|, and update |s| and |t| as the prototype nodes are passed'*)                                                                                                                                                         ;
                                                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                                                If mode=-vmode Then

(*INSERT 'Make the unset node |r| into an |hlist_node| of width |w|, setting the glue as if the width were |t|'*)(*PASCAL module 810*)
                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                    height(r) := height(q);
                                                                                                                                                                                                                                                                                    depth(r) := depth(q);
                                                                                                                                                                                                                                                                                    If t=width(r) Then
                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                        glue_sign(r) := normal;
                                                                                                                                                                                                                                                                                        glue_order(r) := normal;
                                                                                                                                                                                                                                                                                        set_glue_ratio_zero(glue_set(r));
                                                                                                                                                                                                                                                                                      End
                                                                                                                                                                                                                                                                                    Else If t>width(r) Then
                                                                                                                                                                                                                                                                                           Begin
                                                                                                                                                                                                                                                                                             glue_sign(r) := stretching;
                                                                                                                                                                                                                                                                                             If glue_stretch(r)=0 Then set_glue_ratio_zero(glue_set(r))
                                                                                                                                                                                                                                                                                             Else glue_set(r) := unfloat((t-width(r))/glue_stretch(r));
(*real division*)
                                                                                                                                                                                                                                                                                           End
                                                                                                                                                                                                                                                                                    Else
                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                        glue_order(r) := glue_sign(r);
                                                                                                                                                                                                                                                                                        glue_sign(r) := shrinking;
                                                                                                                                                                                                                                                                                        If glue_shrink(r)=0 Then set_glue_ratio_zero(glue_set(r))
                                                                                                                                                                                                                                                                                        Else If (glue_order(r)=normal)And(width(r)-t>glue_shrink(r)) Then
                                                                                                                                                                                                                                                                                               set_glue_ratio_one(glue_set(r))
                                                                                                                                                                                                                                                                                        Else glue_set(r) := unfloat((width(r)-t)/glue_shrink(r));
                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                    width(r) := w;

                                                                                                                                                                                                                                                                                    Type (r) := hlist_node;
                                                                                                                                                                                                                                                                                    End

(*FIN INSERT 'Make the unset node |r| into an |hlist_node| of width |w|, setting the glue as if the width were |t|'*)
                                                                                                                                                                                                                                                                                    Else
(*INSERT 'Make the unset node |r| into a |vlist_node| of height |w|, setting the glue as if the height were |t|'*)(*PASCAL module 811*)
                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                        width(r) := width(q);
                                                                                                                                                                                                                                                                                        If t=height(r) Then
                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                            glue_sign(r) := normal;
                                                                                                                                                                                                                                                                                            glue_order(r) := normal;
                                                                                                                                                                                                                                                                                            set_glue_ratio_zero(glue_set(r));
                                                                                                                                                                                                                                                                                          End
                                                                                                                                                                                                                                                                                        Else If t>height(r) Then
                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                 glue_sign(r) := stretching;
                                                                                                                                                                                                                                                                                                 If glue_stretch(r)=0 Then set_glue_ratio_zero(glue_set(r))
                                                                                                                                                                                                                                                                                                 Else glue_set(r) := unfloat((t-height(r))/glue_stretch(r));
(*real division*)
                                                                                                                                                                                                                                                                                               End
                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                            glue_order(r) := glue_sign(r);
                                                                                                                                                                                                                                                                                            glue_sign(r) := shrinking;
                                                                                                                                                                                                                                                                                            If glue_shrink(r)=0 Then set_glue_ratio_zero(glue_set(r))
                                                                                                                                                                                                                                                                                            Else If (glue_order(r)=normal)And(height(r)-t>glue_shrink(r)) Then
                                                                                                                                                                                                                                                                                                   set_glue_ratio_one(glue_set(r))
                                                                                                                                                                                                                                                                                            Else glue_set(r) := unfloat((height(r)-t)/glue_shrink(r));
                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                        height(r) := w;

                                                                                                                                                                                                                                                                                        Type (r) := vlist_node;
                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'Make the unset node |r| into a |vlist_node| of height |w|, setting the glue as if the height were |t|'*)                                                                                                                                                                  ;
                                                                                                                                                                                                                                                                                        shift_amount(r) := 0;
                                                                                                                                                                                                                                                                                        If u<>hold_head Then {append blank boxes to account for spanned nodes}
                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                            link(u) := link(r);
                                                                                                                                                                                                                                                                                            link(r) := link(hold_head);
                                                                                                                                                                                                                                                                                            r := u;
                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Set the glue in node |r| and change it from an unset node'*)                                                                                                                                                                                                              ;
                                                                                                                                                                                                                                                                                        r := link(link(r));
                                                                                                                                                                                                                                                                                        s := link(link(s));
                                                                                                                                                                                                                                                                                      Until r=null;
                                                                                                                                                                                                                                                                                  End

(*FIN INSERT 'Set the unset box |q| and the unset boxes in it'*)
                                                                                                                                                                                                                                                                                Else If Type(q)=rule_node Then

(*INSERT 'Make the running dimensions in rule |q| extend to the boundaries of the alignment'*)(*PASCAL module 806*)
                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                         If is_running(width(q)) Then width(q) := width(p);
                                                                                                                                                                                                                                                                                         If is_running(height(q)) Then height(q) := height(p);
                                                                                                                                                                                                                                                                                         If is_running(depth(q)) Then depth(q) := depth(p);
                                                                                                                                                                                                                                                                                         If o<>0 Then
                                                                                                                                                                                                                                                                                           Begin
                                                                                                                                                                                                                                                                                             r := link(q);
                                                                                                                                                                                                                                                                                             link(q) := null;
                                                                                                                                                                                                                                                                                             q := hpack(q,natural);
                                                                                                                                                                                                                                                                                             shift_amount(q) := o;
                                                                                                                                                                                                                                                                                             link(q) := r;
                                                                                                                                                                                                                                                                                             link(s) := q;
                                                                                                                                                                                                                                                                                           End;
                                                                                                                                                                                                                                                                                       End

(*FIN INSERT 'Make the running dimensions in rule |q| extend to the boundaries of the alignment'*)                                                                                                                                                                              ;
                                                                                                                                                                                                                                                                                s := q;
                                                                                                                                                                                                                                                                                q := link(q);
                                                                                                                                                                                                                                                                              End

(*FIN INSERT 'Set the glue in all the unset boxes of the current list'*)                                                                                                                                                                                                    ;
                                                                                                                                                                                                                                                                            flush_node_list(p);
                                                                                                                                                                                                                                                                            pop_alignment;

(*INSERT 'Insert the \(c)current list into its environment'*)(*PASCAL module 812*)
                                                                                                                                                                                                                                                                            aux_save := aux;
                                                                                                                                                                                                                                                                            p := link(head);
                                                                                                                                                                                                                                                                            q := tail;
                                                                                                                                                                                                                                                                            pop_nest;
                                                                                                                                                                                                                                                                            If mode=mmode Then
(*INSERT 'Finish an alignment in a display'*)(*PASCAL module 1206*)
                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                do_assignments;
                                                                                                                                                                                                                                                                                If cur_cmd<>math_shift Then
(*INSERT 'Pontificate about improper alignment in display'*)(*PASCAL module 1207*)
                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                    print_err('Missing $$ inserted');
(*Missing {\$\$} inserted*)
                                                                                                                                                                                                                                                                                    help2('Displays can use special alignments (like \eqalignno)')

                                                                                                                                                                                                                                                                                    ('only if nothing but the alignment itself is between $$''s.');
                                                                                                                                                                                                                                                                                    back_error;
                                                                                                                                                                                                                                                                                  End

(*FIN INSERT 'Pontificate about improper alignment in display'*)
                                                                                                                                                                                                                                                                                Else
(*INSERT 'Check that another \.\$ follows'*)(*PASCAL module 1197*)
                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                    get_x_token;
                                                                                                                                                                                                                                                                                    If cur_cmd<>math_shift Then
                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                        print_err('Display math should end with $$');
(*Display math...with \$\$*)
                                                                                                                                                                                                                                                                                        help2('The `$'' that I just saw supposedly matches a previous `$$''.')

                                                                                                                                                                                                                                                                                        ('So I shall assume that you typed `$$'' both times.');
                                                                                                                                                                                                                                                                                        back_error;
                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                  End

(*FIN INSERT 'Check that another \.\$ follows'*)                                                                                                                                                                                                                                ;
                                                                                                                                                                                                                                                                                pop_nest;
                                                                                                                                                                                                                                                                                tail_append(new_penalty(pre_display_penalty));
                                                                                                                                                                                                                                                                                tail_append(new_param_glue(above_display_skip_code));
                                                                                                                                                                                                                                                                                link(tail) := p;
                                                                                                                                                                                                                                                                                If p<>null Then tail := q;
                                                                                                                                                                                                                                                                                tail_append(new_penalty(post_display_penalty));
                                                                                                                                                                                                                                                                                tail_append(new_param_glue(below_display_skip_code));
                                                                                                                                                                                                                                                                                prev_depth := aux_save.sc;
                                                                                                                                                                                                                                                                                resume_after_display;
                                                                                                                                                                                                                                                                              End

(*FIN INSERT 'Finish an alignment in a display'*)
                                                                                                                                                                                                                                                                            Else
                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                aux := aux_save;
                                                                                                                                                                                                                                                                                link(tail) := p;
                                                                                                                                                                                                                                                                                If p<>null Then tail := q;
                                                                                                                                                                                                                                                                                If mode=vmode Then build_page;
                                                                                                                                                                                                                                                                              End

(*FIN INSERT 'Insert the \(c)current list into its environment'*)                                                                                                                                                                                                           ;
                                                                                                                                                                                                                                                                          End;

(*\4*)
(*INSERT 'Declare the procedure called |align_peek|'*)(*PASCAL module 785*)
                                                                                                                                                                                                                                                                          Procedure align_peek;

                                                                                                                                                                                                                                                                          Label restart;
                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                            restart: align_state := 1000000;
(*INSERT 'Get the next non-blank non-call token'*)(*PASCAL module 406*)
                                                                                                                                                                                                                                                                            Repeat
                                                                                                                                                                                                                                                                              get_x_token;
                                                                                                                                                                                                                                                                            Until cur_cmd<>spacer

(*FIN INSERT 'Get the next non-blank non-call token'*)                                                                                                                                                                                                                      ;
                                                                                                                                                                                                                                                                            If cur_cmd=no_align Then
                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                scan_left_brace;
                                                                                                                                                                                                                                                                                new_save_level(no_align_group);
                                                                                                                                                                                                                                                                                If mode=-vmode Then normal_paragraph;
                                                                                                                                                                                                                                                                              End
                                                                                                                                                                                                                                                                            Else If cur_cmd=right_brace Then fin_align
                                                                                                                                                                                                                                                                            Else If (cur_cmd=car_ret)And(cur_chr=cr_cr_code) Then
                                                                                                                                                                                                                                                                                   goto restart {ignore \.[\\crcr]}
                                                                                                                                                                                                                                                                            Else
                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                init_row; {start a new row}
                                                                                                                                                                                                                                                                                init_col; {start a new column and replace what we peeked at}
                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                          End;

(*FIN INSERT 'Declare the procedure called |align_peek|'*)


(***PASCAL module 815***)
(*\4*)                                                                                                                                                                                                                                                                    @<Declare subprocedures For |line_break|@>
                                                                                                                                                                                                                                                                                                      Procedure line_break(final_widow_penalty:integer);
                                                                                                                                                                                                                                                                                                      Label done,done1,done2,done3,done4,done5,continue;
                                                                                                                                                                                                                                                                                                      Var
(*INSERT 'Local variables for line breaking'*)(*PASCAL module 862*)
                                                                                                                                                                                                                                                                                                      auto_breaking:boolean; {is node |cur_p| outside a formula?}
                                                                                                                                                                                                                                                                                                      prev_p:pointer; {helps to determine when glue nodes are breakpoints}
                                                                                                                                                                                                                                                                                                      q,r,s,prev_s:pointer; {miscellaneous nodes of temporary interest}
                                                                                                                                                                                                                                                                                                      f:internal_font_number; {used when calculating character widths}

(*PASCAL module 893*)
                                                                                                                                                                                                                                                                                                      j:small_number; {an index into |hc| or |hu|}
                                                                                                                                                                                                                                                                                                      c:0..255; {character being considered for hyphenation}

(*FIN INSERT 'Local variables for line breaking'*)                                                                                                                                                                                                                                                    ;
                                                                                                                                                                                                                                                                                                      Begin pack_begin_line:=mode_line; {this is for over/underfull box messages}

(*INSERT 'Get ready to start line breaking'*)(*PASCAL module 816*)
                                                                                                                                                                                                                                                                                                      link(temp_head):=link(head);
                                                                                                                                                                                                                                                                                                      If is_char_node(tail) Then tail_append(new_penalty(inf_penalty))
                                                                                                                                                                                                                                                                                                      Else If Type(tail)<>glue_node Then tail_append(new_penalty(inf_penalty))
                                                                                                                                                                                                                                                                                                      Else  Begin Type(tail):=penalty_node; delete_glue_ref(glue_ptr(tail));
                                                                                                                                                                                                                                                                                                      flush_node_list(leader_ptr(tail)); penalty(tail):=inf_penalty;
                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                      link(tail):=new_param_glue(par_fill_skip_code);
                                                                                                                                                                                                                                                                                                      init_cur_lang:=prev_graf Mod 65536;
                                                                                                                                                                                                                                                                                                      init_l_hyf:=prev_graf Div 4194304;
                                                                                                                                                                                                                                                                                                      init_r_hyf:=(prev_graf Div 65536) Mod 64;
                                                                                                                                                                                                                                                                                                      pop_nest;

(*PASCAL module 827*)
                                                                                                                                                                                                                                                                                                      no_shrink_error_yet:=true;

                                                                                                                                                                                                                                                                                                      check_shrinkage(left_skip); check_shrinkage(right_skip);

                                                                                                                                                                                                                                                                                                      q:=left_skip; r:=right_skip; background[1]:=width(q)+width(r);

                                                                                                                                                                                                                                                                                                      background[2]:=0; background[3]:=0; background[4]:=0; background[5]:=0;

                                                                                                                                                                                                                                                                                                      background[2+stretch_order(q)]:=stretch(q);

                                                                                                                                                                                                                                                                                                      background[2+stretch_order(r)]:=background[2+stretch_order(r)]+stretch(r);

                                                                                                                                                                                                                                                                                                      background[6]:=shrink(q)+shrink(r);

(*PASCAL module 834*)
                                                                                                                                                                                                                                                                                                      minimum_demerits:=awful_bad;
                                                                                                                                                                                                                                                                                                      minimal_demerits[tight_fit]:=awful_bad;
                                                                                                                                                                                                                                                                                                      minimal_demerits[decent_fit]:=awful_bad;
                                                                                                                                                                                                                                                                                                      minimal_demerits[loose_fit]:=awful_bad;
                                                                                                                                                                                                                                                                                                      minimal_demerits[very_loose_fit]:=awful_bad;

(*PASCAL module 848*)
                                                                                                                                                                                                                                                                                                      If par_shape_ptr=null Then
                                                                                                                                                                                                                                                                                                      If hang_indent=0 Then
                                                                                                                                                                                                                                                                                                      Begin last_special_line:=0; second_width:=hsize;
                                                                                                                                                                                                                                                                                                      second_indent:=0;
                                                                                                                                                                                                                                                                                                      End
                                                                                                                                                                                                                                                                                                      Else
(*INSERT 'Set line length parameters in preparation for hanging indentation'*)(*PASCAL module 849*)
                                                                                                                                                                                                                                                                                                      Begin last_special_line:=abs(hang_after);
                                                                                                                                                                                                                                                                                                      If hang_after<0 Then
                                                                                                                                                                                                                                                                                                      Begin first_width:=hsize-abs(hang_indent);
                                                                                                                                                                                                                                                                                                      If hang_indent>=0 Then first_indent:=hang_indent
                                                                                                                                                                                                                                                                                                      Else first_indent:=0;
                                                                                                                                                                                                                                                                                                      second_width:=hsize; second_indent:=0;
                                                                                                                                                                                                                                                                                                      End
                                                                                                                                                                                                                                                                                                      Else  Begin first_width:=hsize; first_indent:=0;
                                                                                                                                                                                                                                                                                                      second_width:=hsize-abs(hang_indent);
                                                                                                                                                                                                                                                                                                      If hang_indent>=0 Then second_indent:=hang_indent
                                                                                                                                                                                                                                                                                                      Else second_indent:=0;
                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Set line length parameters in preparation for hanging indentation'*)
                                                                                                                                                                                                                                                                                                      Else  Begin last_special_line:=info(par_shape_ptr)-1;
                                                                                                                                                                                                                                                                                                      second_width:=mem[par_shape_ptr+2*(last_special_line+1)].sc;
                                                                                                                                                                                                                                                                                                      second_indent:=mem[par_shape_ptr+2*last_special_line+1].sc;
                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                      If looseness=0 Then easy_line:=last_special_line
                                                                                                                                                                                                                                                                                                      Else easy_line:=max_halfword

(*FIN INSERT 'Get ready to start line breaking'*)                                                                                                                                                                                                                                                     ;

(*INSERT 'Find optimal breakpoints'*)(*PASCAL module 863*)
                                                                                                                                                                                                                                                                                                      threshold:=pretolerance;
                                                                                                                                                                                                                                                                                                      If threshold>=0 Then
                                                                                                                                                                                                                                                                                                      Begin stat If tracing_paragraphs>0 Then
                                                                                                                                                                                                                                                                                                      Begin begin_diagnostic; print_nl('@firstpass');End;;tats;

                                                                                                                                                                                                                                                                                                      second_pass:=false; final_pass:=false;
                                                                                                                                                                                                                                                                                                      End
                                                                                                                                                                                                                                                                                                      Else  Begin threshold:=tolerance; second_pass:=true;
                                                                                                                                                                                                                                                                                                      final_pass:=(emergency_stretch<=0);
                                                                                                                                                                                                                                                                                                      stat If tracing_paragraphs>0 Then begin_diagnostic;tats;
                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                      loop  Begin If threshold>inf_bad Then threshold:=inf_bad;
                                                                                                                                                                                                                                                                                                      If second_pass Then
(*INSERT 'Initialize for hyphenating a paragraph'*)(*PASCAL module 891*)
                                                                                                                                                                                                                                                                                                      Begin init If trie_not_ready Then init_trie;tini;

                                                                                                                                                                                                                                                                                                      cur_lang:=init_cur_lang; l_hyf:=init_l_hyf; r_hyf:=init_r_hyf;
                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Initialize for hyphenating a paragraph'*)                                                                                                                                                                                                                                               ;

(*INSERT 'Create an active breakpoint representing the beginning of the paragraph'*)(*PASCAL module 864*)
                                                                                                                                                                                                                                                                                                      q:=get_node(active_node_size);
                                                                                                                                                                                                                                                                                                      Type(q):=unhyphenated; fitness(q):=decent_fit;
                                                                                                                                                                                                                                                                                                      link(q):=last_active; break_node(q):=null;
                                                                                                                                                                                                                                                                                                      line_number(q):=prev_graf+1; total_demerits(q):=0; link(active):=q;
                                                                                                                                                                                                                                                                                                      do_all_six(store_background);

                                                                                                                                                                                                                                                                                                      passive:=null; printed_node:=temp_head; pass_number:=0;
                                                                                                                                                                                                                                                                                                      font_in_short_display:=null_font

(*FIN INSERT 'Create an active breakpoint representing the beginning of the paragraph'*)                                                                                                                                                                                                              ;
                                                                                                                                                                                                                                                                                                      cur_p:=link(temp_head); auto_breaking:=true;

                                                                                                                                                                                                                                                                                                      prev_p:=cur_p; {glue at beginning is not a legal breakpoint}
                                                                                                                                                                                                                                                                                                      While (cur_p<>null)And(link(active)<>last_active) Do

(*INSERT 'Call |try_break| if |cur_p| is a legal breakpoint; on the second pass, also try to hyphenate the next word, if |cur_p| is a glue node; then advance |cur_p| to the next node of the paragraph that could possibly be a legal breakpoint'*)(*PASCAL module 866*)
                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                      If is_char_node(cur_p) Then

(*INSERT 'Advance \(c)|cur_p| to the node following the present string of characters'*)(*PASCAL module 867*)
                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                          prev_p := cur_p;
                                                                                                                                                                                                                                                                                                          Repeat
                                                                                                                                                                                                                                                                                                            f := font(cur_p);
                                                                                                                                                                                                                                                                                                            act_width := act_width+char_width(f)(char_info(f)(character(cur_p)));
                                                                                                                                                                                                                                                                                                            cur_p := link(cur_p);
                                                                                                                                                                                                                                                                                                          Until Not is_char_node(cur_p);
                                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'Advance \(c)|cur_p| to the node following the present string of characters'*)                                                                                                                                                                                                           ;
                                                                                                                                                                                                                                                                                                      Case Type(cur_p) Of 
                                                                                                                                                                                                                                                                                                        hlist_node,vlist_node,rule_node: act_width := act_width+width(cur_p);
                                                                                                                                                                                                                                                                                                        whatsit_node:
(*INSERT 'Advance \(p)past a whatsit node in the \(l)|line_break| loop'*)(*FIN INSERT 'Advance \(p)past a whatsit node in the \(l)|line_break| loop'*)                                                                                                                                                  ;
                                                                                                                                                                                                                                                                                                        glue_node:
                                                                                                                                                                                                                                                                                                                   Begin
(*INSERT 'If node |cur_p| is a legal breakpoint, call |try_break|; then update the active widths by including the glue in |glue_ptr(cur_p)|'*)(*PASCAL module 868*)
                                                                                                                                                                                                                                                                                                                     If auto_breaking Then
                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                         If is_char_node(prev_p) Then try_break(0,unhyphenated)
                                                                                                                                                                                                                                                                                                                         Else If precedes_break(prev_p) Then try_break(0,unhyphenated)
                                                                                                                                                                                                                                                                                                                         Else If (Type(prev_p)=kern_node)And(subtype(prev_p)<>explicit) Then
                                                                                                                                                                                                                                                                                                                                try_break(0,unhyphenated);
                                                                                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                                                                                                     check_shrinkage(glue_ptr(cur_p));
                                                                                                                                                                                                                                                                                                                     q := glue_ptr(cur_p);
                                                                                                                                                                                                                                                                                                                     act_width := act_width+width(q);
                                                                                                                                                                                                                                                                                                                     active_width[2+stretch_order(q)] := 
                                                                                                                                                                                                                                                                                                                                                         active_width[2+stretch_order(q)]+stretch(q);

                                                                                                                                                                                                                                                                                                                     active_width[6] := active_width[6]+shrink(q)

(*FIN INSERT 'If node |cur_p| is a legal breakpoint, call |try_break|; then update the active widths by including the glue in |glue_ptr(cur_p)|'*)                                                                                                                                                                   ;
                                                                                                                                                                                                                                                                                                                     If second_pass And auto_breaking Then

(*INSERT 'Try to hyphenate the following word'*)(*PASCAL module 894*)
                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                         prev_s := cur_p;
                                                                                                                                                                                                                                                                                                                         s := link(prev_s);
                                                                                                                                                                                                                                                                                                                         If s<>null Then
                                                                                                                                                                                                                                                                                                                           Begin
(*INSERT 'Skip to node |ha|, or |goto done1| if no hyphenation should be attempted'*)(*PASCAL module 896*)
                                                                                                                                                                                                                                                                                                                             loop
                                                                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                                                                               If is_char_node(s) Then
                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                   c := qo(character(s));
                                                                                                                                                                                                                                                                                                                                   hf := font(s);
                                                                                                                                                                                                                                                                                                                                 End
                                                                                                                                                                                                                                                                                                                               Else If Type(s)=ligature_node Then
                                                                                                                                                                                                                                                                                                                                      If lig_ptr(s)=null Then goto continue
                                                                                                                                                                                                                                                                                                                               Else
                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                   q := lig_ptr(s);
                                                                                                                                                                                                                                                                                                                                   c := qo(character(q));
                                                                                                                                                                                                                                                                                                                                   hf := font(q);
                                                                                                                                                                                                                                                                                                                                 End
                                                                                                                                                                                                                                                                                                                               Else If (Type(s)=kern_node)And(subtype(s)=normal) Then goto continue
                                                                                                                                                                                                                                                                                                                               Else If Type(s)=whatsit_node Then
                                                                                                                                                                                                                                                                                                                                      Begin
(*INSERT 'Advance \(p)past a whatsit node in the \(p)pre-hyphenation loop'*)(*FIN INSERT 'Advance \(p)past a whatsit node in the \(p)pre-hyphenation loop'*)                                                                                                                                                                            ;
                                                                                                                                                                                                                                                                                                                                        goto continue;
                                                                                                                                                                                                                                                                                                                                      End
                                                                                                                                                                                                                                                                                                                               Else goto done1;
                                                                                                                                                                                                                                                                                                                               If lc_code(c)<>0 Then
                                                                                                                                                                                                                                                                                                                                 If (lc_code(c)=c)Or(uc_hyph>0) Then goto done2
                                                                                                                                                                                                                                                                                                                               Else goto done1;
                                                                                                                                                                                                                                                                                                                               continue: prev_s := s;
                                                                                                                                                                                                                                                                                                                               s := link(prev_s);
                                                                                                                                                                                                                                                                                                                             End;
                                                                                                                                                                                                                                                                                                                             done2: hyf_char := hyphen_char[hf];
                                                                                                                                                                                                                                                                                                                             If hyf_char<0 Then goto done1;
                                                                                                                                                                                                                                                                                                                             If hyf_char>255 Then goto done1;
                                                                                                                                                                                                                                                                                                                             ha := prev_s

(*FIN INSERT 'Skip to node |ha|, or |goto done1| if no hyphenation should be attempted'*)                                                                                                                                                                                                                                    ;
                                                                                                                                                                                                                                                                                                                             If l_hyf+r_hyf>63 Then goto done1;

(*INSERT 'Skip to node |hb|, putting letters into |hu| and |hc|'*)(*PASCAL module 897*)
                                                                                                                                                                                                                                                                                                                             hn := 0;
                                                                                                                                                                                                                                                                                                                             loop
                                                                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                                                                               If is_char_node(s) Then
                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                   If font(s)<>hf Then goto done3;
                                                                                                                                                                                                                                                                                                                                   hyf_bchar := character(s);
                                                                                                                                                                                                                                                                                                                                   c := qo(hyf_bchar);
                                                                                                                                                                                                                                                                                                                                   If lc_code(c)=0 Then goto done3;
                                                                                                                                                                                                                                                                                                                                   If hn=63 Then goto done3;
                                                                                                                                                                                                                                                                                                                                   hb := s;
                                                                                                                                                                                                                                                                                                                                   incr(hn);
                                                                                                                                                                                                                                                                                                                                   hu[hn] := c;
                                                                                                                                                                                                                                                                                                                                   hc[hn] := lc_code(c);
                                                                                                                                                                                                                                                                                                                                   hyf_bchar := non_char;
                                                                                                                                                                                                                                                                                                                                 End
                                                                                                                                                                                                                                                                                                                               Else If Type(s)=ligature_node Then

(*INSERT 'Move the characters of a ligature node to |hu| and |hc|; but |goto done3| if they are not all letters'*)(*PASCAL module 898*)
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        If font(lig_char(s))<>hf Then goto done3;
                                                                                                                                                                                                                                                                                                                                        j := hn;
                                                                                                                                                                                                                                                                                                                                        q := lig_ptr(s);
                                                                                                                                                                                                                                                                                                                                        If q>null Then hyf_bchar := character(q);
                                                                                                                                                                                                                                                                                                                                        While q>null Do
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            c := qo(character(q));
                                                                                                                                                                                                                                                                                                                                            If lc_code(c)=0 Then goto done3;
                                                                                                                                                                                                                                                                                                                                            If j=63 Then goto done3;
                                                                                                                                                                                                                                                                                                                                            incr(j);
                                                                                                                                                                                                                                                                                                                                            hu[j] := c;
                                                                                                                                                                                                                                                                                                                                            hc[j] := lc_code(c);

                                                                                                                                                                                                                                                                                                                                            q := link(q);
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        hb := s;
                                                                                                                                                                                                                                                                                                                                        hn := j;
                                                                                                                                                                                                                                                                                                                                        If odd(subtype(s)) Then hyf_bchar := font_bchar[hf]
                                                                                                                                                                                                                                                                                                                                        Else hyf_bchar := non_char;
                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Move the characters of a ligature node to |hu| and |hc|; but |goto done3| if they are not all letters'*)
                                                                                                                                                                                                                                                                                                                               Else If (Type(s)=kern_node)And(subtype(s)=normal) Then
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        hb := s;
                                                                                                                                                                                                                                                                                                                                        hyf_bchar := font_bchar[hf];
                                                                                                                                                                                                                                                                                                                                      End
                                                                                                                                                                                                                                                                                                                               Else goto done3;
                                                                                                                                                                                                                                                                                                                               s := link(s);
                                                                                                                                                                                                                                                                                                                             End;
                                                                                                                                                                                                                                                                                                                             done3:

(*FIN INSERT 'Skip to node |hb|, putting letters into |hu| and |hc|'*)                                                                                                                                                                                                                                                       ;

(*INSERT 'Check that the nodes following |hb| permit hyphenation and that at least |l_hyf+r_hyf| letters have been found, otherwise |goto done1|'*)(*PASCAL module 899*)
                                                                                                                                                                                                                                                                                                                             If hn<l_hyf+r_hyf Then goto done1; {|l_hyf| and |r_hyf| are |>=1|}
                                                                                                                                                                                                                                                                                                                             loop
                                                                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                                                                               If Not(is_char_node(s)) Then
                                                                                                                                                                                                                                                                                                                                 Case Type(s) Of 
                                                                                                                                                                                                                                                                                                                                   ligature_node: do_nothing;
                                                                                                                                                                                                                                                                                                                                   kern_node: If subtype(s)<>normal Then goto done4;
                                                                                                                                                                                                                                                                                                                                   whatsit_node,glue_node,penalty_node,ins_node,adjust_node,mark_node:
                                                                                                                                                                                                                                                                                                                                                                                                       goto done4;
                                                                                                                                                                                                                                                                                                                                   othercases goto done1
                                                                                                                                                                                                                                                                                                                                   endcases;
                                                                                                                                                                                                                                                                                                                                   s := link(s);
                                                                                                                                                                                                                                                                                                                                 End;
                                                                                                                                                                                                                                                                                                                               done4:

(*FIN INSERT 'Check that the nodes following |hb| permit hyphenation and that at least |l_hyf+r_hyf| letters have been found, otherwise |goto done1|'*)                                                                                                                                                                        ;
                                                                                                                                                                                                                                                                                                                               hyphenate;
                                                                                                                                                                                                                                                                                                                             End;
                                                                                                                                                                                                                                                                                                                             done1:
                                                                                                                                                                                                                                                                                                                           End

(*FIN INSERT 'Try to hyphenate the following word'*)                                                                                                                                                                                                                                                                     ;
                                                                                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                                                                                                     kern_node: If subtype(cur_p)=explicit Then kern_break
                                                                                                                                                                                                                                                                                                                                Else act_width := act_width+width(cur_p);
                                                                                                                                                                                                                                                                                                                     ligature_node:
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      f := font(lig_char(cur_p));
                                                                                                                                                                                                                                                                                                                                      act_width := act_width+char_width(f)(char_info(f)(character(lig_char(cur_p))));
                                                                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                                                                     disc_node:
(*INSERT 'Try to break after a discretionary fragment, then |goto done5|'*)(*PASCAL module 869*)
                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                  s := pre_break(cur_p);
                                                                                                                                                                                                                                                                                                                                  disc_width := 0;
                                                                                                                                                                                                                                                                                                                                  If s=null Then try_break(ex_hyphen_penalty,hyphenated)
                                                                                                                                                                                                                                                                                                                                  Else
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      Repeat
(*INSERT 'Add the width of node |s| to |disc_width|'*)(*PASCAL module 870*)
                                                                                                                                                                                                                                                                                                                                        If is_char_node(s) Then
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            f := font(s);
                                                                                                                                                                                                                                                                                                                                            disc_width := disc_width+char_width(f)(char_info(f)(character(s)));
                                                                                                                                                                                                                                                                                                                                          End
                                                                                                                                                                                                                                                                                                                                        Else  Case Type(s) Of 
                                                                                                                                                                                                                                                                                                                                                ligature_node:
                                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                                 f := font(lig_char(s));
                                                                                                                                                                                                                                                                                                                                                                 disc_width := disc_width+
                                                                                                                                                                                                                                                                                                                                                                               char_width(f)(char_info(f)(character(lig_char(s))));
                                                                                                                                                                                                                                                                                                                                                               End;
                                                                                                                                                                                                                                                                                                                                                hlist_node,vlist_node,rule_node,kern_node:
                                                                                                                                                                                                                                                                                                                                                                                           disc_width := disc_width+width(s);
                                                                                                                                                                                                                                                                                                                                                othercases confusion('disc3')
(*this can''t happen disc3][\quad disc3*)
                                                                                                                                                                                                                                                                                                                                                endcases

(*FIN INSERT 'Add the width of node |s| to |disc_width|'*)                                                                                                                                                                                                                                                                                      ;
                                                                                                                                                                                                                                                                                                                                                s := link(s);
                                                                                                                                                                                                                                                                                                                                          Until s=null;
                                                                                                                                                                                                                                                                                                                                        act_width := act_width+disc_width;
                                                                                                                                                                                                                                                                                                                                        try_break(hyphen_penalty,hyphenated);
                                                                                                                                                                                                                                                                                                                                        act_width := act_width-disc_width;
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                      r := replace_count(cur_p);
                                                                                                                                                                                                                                                                                                                                      s := link(cur_p);
                                                                                                                                                                                                                                                                                                                                      While r>0 Do
                                                                                                                                                                                                                                                                                                                                        Begin
(*INSERT 'Add the width of node |s| to |act_width|'*)(*PASCAL module 871*)
                                                                                                                                                                                                                                                                                                                                          If is_char_node(s) Then
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              f := font(s);
                                                                                                                                                                                                                                                                                                                                              act_width := act_width+char_width(f)(char_info(f)(character(s)));
                                                                                                                                                                                                                                                                                                                                            End
                                                                                                                                                                                                                                                                                                                                          Else  Case Type(s) Of 
                                                                                                                                                                                                                                                                                                                                                  ligature_node:
                                                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                                                   f := font(lig_char(s));
                                                                                                                                                                                                                                                                                                                                                                   act_width := act_width+
                                                                                                                                                                                                                                                                                                                                                                                char_width(f)(char_info(f)(character(lig_char(s))));
                                                                                                                                                                                                                                                                                                                                                                 End;
                                                                                                                                                                                                                                                                                                                                                  hlist_node,vlist_node,rule_node,kern_node:
                                                                                                                                                                                                                                                                                                                                                                                             act_width := act_width+width(s);
                                                                                                                                                                                                                                                                                                                                                  othercases confusion('disc4')
(*this can''t happen disc4][\quad disc4*)
                                                                                                                                                                                                                                                                                                                                                  endcases

(*FIN INSERT 'Add the width of node |s| to |act_width|'*)                                                                                                                                                                                                                                                                                         ;
                                                                                                                                                                                                                                                                                                                                                  decr(r);
                                                                                                                                                                                                                                                                                                                                                  s := link(s);
                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                          prev_p := cur_p;
                                                                                                                                                                                                                                                                                                                                          cur_p := s;
                                                                                                                                                                                                                                                                                                                                          goto done5;
                                                                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'Try to break after a discretionary fragment, then |goto done5|'*)                                                                                                                                                                                                                                                       ;
                                                                                                                                                                                                                                                                                                                                      math_node:
                                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                                   auto_breaking := (subtype(cur_p)=after);
                                                                                                                                                                                                                                                                                                                                                   kern_break;
                                                                                                                                                                                                                                                                                                                                                 End;
                                                                                                                                                                                                                                                                                                                                      penalty_node: try_break(penalty(cur_p),unhyphenated);
                                                                                                                                                                                                                                                                                                                                      mark_node,ins_node,adjust_node: do_nothing;
                                                                                                                                                                                                                                                                                                                                      othercases confusion('paragraph')
(*this can''t happen paragraph][\quad paragraph*)
                                                                                                                                                                                                                                                                                                                                      endcases;

                                                                                                                                                                                                                                                                                                                                      prev_p := cur_p;
                                                                                                                                                                                                                                                                                                                                      cur_p := link(cur_p);
                                                                                                                                                                                                                                                                                                                                      done5:
                                                                                                                                                                                                                                                                                                                                    End

(*FIN INSERT 'Call |try_break| if |cur_p| is a legal breakpoint; on the second pass, also try to hyphenate the next word, if |cur_p| is a glue node; then advance |cur_p| to the next node of the paragraph that could possibly be a legal breakpoint'*)                                                                          ;
                                                                                                                                                                                                                                                                                                                                  If cur_p=null Then

(*INSERT 'Try the final line break at the end of the paragraph, and |goto done| if the desired breakpoints have been found'*)(*PASCAL module 873*)
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      try_break(eject_penalty,hyphenated);
                                                                                                                                                                                                                                                                                                                                      If link(active)<>last_active Then
                                                                                                                                                                                                                                                                                                                                        Begin
(*INSERT 'Find an active node with fewest demerits'*)(*PASCAL module 874*)
                                                                                                                                                                                                                                                                                                                                          r := link(active);
                                                                                                                                                                                                                                                                                                                                          fewest_demerits := awful_bad;
                                                                                                                                                                                                                                                                                                                                          Repeat
                                                                                                                                                                                                                                                                                                                                            If Type(r)<>delta_node Then If total_demerits(r)<fewest_demerits Then
                                                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                                                            fewest_demerits := total_demerits(r);
                                                                                                                                                                                                                                                                                                                                                                            best_bet := r;
                                                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                            r := link(r);
                                                                                                                                                                                                                                                                                                                                          Until r=last_active;
                                                                                                                                                                                                                                                                                                                                          best_line := line_number(best_bet)

(*FIN INSERT 'Find an active node with fewest demerits'*)                                                                                                                                                                                                                                                                                 ;
                                                                                                                                                                                                                                                                                                                                          If looseness=0 Then goto done;

(*INSERT 'Find the best active node for the desired looseness'*)(*PASCAL module 875*)
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            r := link(active);
                                                                                                                                                                                                                                                                                                                                            actual_looseness := 0;
                                                                                                                                                                                                                                                                                                                                            Repeat
                                                                                                                                                                                                                                                                                                                                              If Type(r)<>delta_node Then
                                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                                  line_diff := line_number(r)-best_line;
                                                                                                                                                                                                                                                                                                                                                  If ((line_diff<actual_looseness)And(looseness<=line_diff))Or
                                                                                                                                                                                                                                                                                                                                                     ((line_diff>actual_looseness)And(looseness>=line_diff)) Then
                                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                                      best_bet := r;
                                                                                                                                                                                                                                                                                                                                                      actual_looseness := line_diff;
                                                                                                                                                                                                                                                                                                                                                      fewest_demerits := total_demerits(r);
                                                                                                                                                                                                                                                                                                                                                    End
                                                                                                                                                                                                                                                                                                                                                  Else If (line_diff=actual_looseness)And
                                                                                                                                                                                                                                                                                                                                                          (total_demerits(r)<fewest_demerits) Then
                                                                                                                                                                                                                                                                                                                                                         Begin
                                                                                                                                                                                                                                                                                                                                                           best_bet := r;
                                                                                                                                                                                                                                                                                                                                                           fewest_demerits := total_demerits(r);
                                                                                                                                                                                                                                                                                                                                                         End;
                                                                                                                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                                                                                                                              r := link(r);
                                                                                                                                                                                                                                                                                                                                            Until r=last_active;
                                                                                                                                                                                                                                                                                                                                            best_line := line_number(best_bet);
                                                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Find the best active node for the desired looseness'*)                                                                                                                                                                                                                                                                      ;
                                                                                                                                                                                                                                                                                                                                          If (actual_looseness=looseness)Or final_pass Then goto done;
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                    End

(*FIN INSERT 'Try the final line break at the end of the paragraph, and |goto done| if the desired breakpoints have been found'*)                                                                                                                                                                                                 ;

(*INSERT 'Clean up the memory by removing the break nodes'*)(*PASCAL module 865*)
                                                                                                                                                                                                                                                                                                                                  q := link(active);
                                                                                                                                                                                                                                                                                                                                  While q<>last_active Do
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      cur_p := link(q);
                                                                                                                                                                                                                                                                                                                                      If Type(q)=delta_node Then free_node(q,delta_node_size)
                                                                                                                                                                                                                                                                                                                                      Else free_node(q,active_node_size);
                                                                                                                                                                                                                                                                                                                                      q := cur_p;
                                                                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                                                                                  q := passive;
                                                                                                                                                                                                                                                                                                                                  While q<>null Do
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      cur_p := link(q);
                                                                                                                                                                                                                                                                                                                                      free_node(q,passive_node_size);
                                                                                                                                                                                                                                                                                                                                      q := cur_p;
                                                                                                                                                                                                                                                                                                                                    End

(*FIN INSERT 'Clean up the memory by removing the break nodes'*)                                                                                                                                                                                                                                                                  ;
                                                                                                                                                                                                                                                                                                                                  If Not second_pass Then
                                                                                                                                                                                                                                                                                                                                    beginstat If tracing_paragraphs>0 Then print_nl('@secondpass');;
                                                                                                                                                                                                                                                                                                                                  tats

                                                                                                                                                                                                                                                                                                                                  threshold := tolerance;
                                                                                                                                                                                                                                                                                                                                  second_pass := true;
                                                                                                                                                                                                                                                                                                                                  final_pass := (emergency_stretch<=0);
                                                                                                                                                                                                                                                                                                                                End {if at first you don't succeed, \dots}
                                                                                                                                                                                                                                                                                                                                Else
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    stat If tracing_paragraphs>0 Then
                                                                                                                                                                                                                                                                                                                                           print_nl('@emergencypass');;
                                                                                                                                                                                                                                                                                                                                    tats

                                                                                                                                                                                                                                                                                                                                    background[2] := background[2]+emergency_stretch;
                                                                                                                                                                                                                                                                                                                                    final_pass := true;
                                                                                                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                                                                                   End;
                                                                                                                                                                                                                                                                                                        done: stat If tracing_paragraphs>0 Then
                                                                                                                                                                                                                                                                                                                     Begin
                                                                                                                                                                                                                                                                                                                       end_diagnostic(true);
                                                                                                                                                                                                                                                                                                                       normalize_selector;
                                                                                                                                                                                                                                                                                                                     End;
                                                                                                                                                                                                                                                                                                        tats


(*FIN INSERT 'Find optimal breakpoints'*)                                                                                                                                                                                                                                                               ;

(*INSERT 'Break the paragraph at the chosen breakpoints, justify the resulting lines to the correct widths, and append them to the current vertical list'*)(*PASCAL module 876*)
                                                                                                                                                                                                                                                                                                        post_line_break(final_widow_penalty)

(*FIN INSERT 'Break the paragraph at the chosen breakpoints, justify the resulting lines to the correct widths, and append them to the current vertical list'*)                                                                                                                                         ;

(*INSERT 'Clean up the memory by removing the break nodes'*)(*PASCAL module 865*)
                                                                                                                                                                                                                                                                                                        q := link(active);
                                                                                                                                                                                                                                                                                                        While q<>last_active Do
                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                            cur_p := link(q);
                                                                                                                                                                                                                                                                                                            If Type(q)=delta_node Then free_node(q,delta_node_size)
                                                                                                                                                                                                                                                                                                            Else free_node(q,active_node_size);
                                                                                                                                                                                                                                                                                                            q := cur_p;
                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                        q := passive;
                                                                                                                                                                                                                                                                                                        While q<>null Do
                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                            cur_p := link(q);
                                                                                                                                                                                                                                                                                                            free_node(q,passive_node_size);
                                                                                                                                                                                                                                                                                                            q := cur_p;
                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Clean up the memory by removing the break nodes'*)                                                                                                                                                                                                                                        ;
                                                                                                                                                                                                                                                                                                        pack_begin_line := 0;
                                                                                                                                                                                                                                                                                                      End;


(***PASCAL module 934***)
                                                                                                                                                                                                                                                                                                      Procedure new_hyph_exceptions; {enters new exceptions}

                                                                                                                                                                                                                                                                                                      Label reswitch, exit, found, not_found;

                                                                                                                                                                                                                                                                                                      Var n: 0..64; {length of current word; not always a |small_number|}
                                                                                                                                                                                                                                                                                                        j: 0..64; {an index into |hc|}
                                                                                                                                                                                                                                                                                                        h: hyph_pointer; {an index into |hyph_word| and |hyph_list|}
                                                                                                                                                                                                                                                                                                        k: str_number; {an index into |str_start|}
                                                                                                                                                                                                                                                                                                        p: pointer; {head of a list of hyphen positions}
                                                                                                                                                                                                                                                                                                        q: pointer; {used when creating a new node for list |p|}
                                                                                                                                                                                                                                                                                                        s,t: str_number; {strings being compared or stored}
                                                                                                                                                                                                                                                                                                        u,v: pool_pointer; {indices into |str_pool|}
                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                        scan_left_brace; {a left brace must follow \.[\\hyphenation]}
                                                                                                                                                                                                                                                                                                        set_cur_lang;

(*INSERT 'Enter as many hyphenation exceptions as are listed, until coming to a right brace; then |return|'*)(*PASCAL module 935*)
                                                                                                                                                                                                                                                                                                        n := 0;
                                                                                                                                                                                                                                                                                                        p := null;
                                                                                                                                                                                                                                                                                                        loop
                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                          get_x_token;
                                                                                                                                                                                                                                                                                                          reswitch: Case cur_cmd Of 
                                                                                                                                                                                                                                                                                                                      letter,other_char,char_given:
(*INSERT 'Append a new letter or hyphen'*)(*PASCAL module 937*)
                                                                                                                                                                                                                                                                                                                                                    If cur_chr='-' Then
(*INSERT 'Append the value |n| to list |p|'*)(*PASCAL module 938*)
                                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                                        If n<63 Then
                                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                                            q := get_avail;
                                                                                                                                                                                                                                                                                                                                                            link(q) := p;
                                                                                                                                                                                                                                                                                                                                                            info(q) := n;
                                                                                                                                                                                                                                                                                                                                                            p := q;
                                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Append the value |n| to list |p|'*)
                                                                                                                                                                                                                                                                                                                                                    Else
                                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                                        If lc_code(cur_chr)=0 Then
                                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                                            print_err('Not a letter');
(*Not a letter*)
                                                                                                                                                                                                                                                                                                                                                            help2('Letters in \hyphenation words must have \lccode>0.')

                                                                                                                                                                                                                                                                                                                                                            ('Proceed; I''ll ignore the character I just read.');
                                                                                                                                                                                                                                                                                                                                                            error;
                                                                                                                                                                                                                                                                                                                                                          End
                                                                                                                                                                                                                                                                                                                                                        Else If n<63 Then
                                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                                 incr(n);
                                                                                                                                                                                                                                                                                                                                                                 hc[n] := lc_code(cur_chr);
                                                                                                                                                                                                                                                                                                                                                               End;
                                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Append a new letter or hyphen'*)                                                                                                                                                                                                                                                                        ;
                                                                                                                                                                                                                                                                                                                      char_num:
                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                  scan_char_num;
                                                                                                                                                                                                                                                                                                                                  cur_chr := cur_val;
                                                                                                                                                                                                                                                                                                                                  cur_cmd := char_given;
                                                                                                                                                                                                                                                                                                                                  goto reswitch;
                                                                                                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                                                                                                      spacer,right_brace:
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            If n>1 Then
(*INSERT 'Enter a hyphenation exception'*)(*PASCAL module 939*)
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                incr(n);
                                                                                                                                                                                                                                                                                                                                                hc[n] := cur_lang;
                                                                                                                                                                                                                                                                                                                                                str_room(n);
                                                                                                                                                                                                                                                                                                                                                h := 0;
                                                                                                                                                                                                                                                                                                                                                For j:=1 To n Do
                                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                                    h := (h+h+hc[j]) Mod hyph_size;
                                                                                                                                                                                                                                                                                                                                                    append_char(hc[j]);
                                                                                                                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                                                                                                                s := make_string;

(*INSERT 'Insert the \(p)pair |(s,p)| into the exception table'*)(*PASCAL module 940*)
                                                                                                                                                                                                                                                                                                                                                If hyph_count=hyph_size Then overflow('exception dictionary',hyph_size);
(*TeX capacity exceeded exception dictionary][\quad exception dictionary*)
                                                                                                                                                                                                                                                                                                                                                incr(hyph_count);
                                                                                                                                                                                                                                                                                                                                                While hyph_word[h]<>0 Do
                                                                                                                                                                                                                                                                                                                                                  Begin
(*INSERT 'If the string |hyph_word[h]| is less than \(or)or equal to |s|, interchange |(hyph_word[h],hyph_list[h])| with |(s,p)|'*)(*PASCAL module 941*)
                                                                                                                                                                                                                                                                                                                                                    k := hyph_word[h];
                                                                                                                                                                                                                                                                                                                                                    If length(k)<length(s) Then goto found;
                                                                                                                                                                                                                                                                                                                                                    If length(k)>length(s) Then goto not_found;
                                                                                                                                                                                                                                                                                                                                                    u := str_start[k];
                                                                                                                                                                                                                                                                                                                                                    v := str_start[s];
                                                                                                                                                                                                                                                                                                                                                    Repeat
                                                                                                                                                                                                                                                                                                                                                      If str_pool[u]<str_pool[v] Then goto found;
                                                                                                                                                                                                                                                                                                                                                      If str_pool[u]>str_pool[v] Then goto not_found;
                                                                                                                                                                                                                                                                                                                                                      incr(u);
                                                                                                                                                                                                                                                                                                                                                      incr(v);
                                                                                                                                                                                                                                                                                                                                                    Until u=str_start[k+1];
                                                                                                                                                                                                                                                                                                                                                    found: q := hyph_list[h];
                                                                                                                                                                                                                                                                                                                                                    hyph_list[h] := p;
                                                                                                                                                                                                                                                                                                                                                    p := q;

                                                                                                                                                                                                                                                                                                                                                    t := hyph_word[h];
                                                                                                                                                                                                                                                                                                                                                    hyph_word[h] := s;
                                                                                                                                                                                                                                                                                                                                                    s := t;
                                                                                                                                                                                                                                                                                                                                                    not_found:

(*FIN INSERT 'If the string |hyph_word[h]| is less than \(or)or equal to |s|, interchange |(hyph_word[h],hyph_list[h])| with |(s,p)|'*)                                                                                                                                                                                                             ;
                                                                                                                                                                                                                                                                                                                                                    If h>0 Then decr(h)
                                                                                                                                                                                                                                                                                                                                                    Else h := hyph_size;
                                                                                                                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                                                                                                                hyph_word[h] := s;
                                                                                                                                                                                                                                                                                                                                                hyph_list[h] := p

(*FIN INSERT 'Insert the \(p)pair |(s,p)| into the exception table'*)                                                                                                                                                                                                                                                                           ;
                                                                                                                                                                                                                                                                                                                                              End

(*FIN INSERT 'Enter a hyphenation exception'*)                                                                                                                                                                                                                                                                                              ;
                                                                                                                                                                                                                                                                                                                                            If cur_cmd=right_brace Then return;
                                                                                                                                                                                                                                                                                                                                            n := 0;
                                                                                                                                                                                                                                                                                                                                            p := null;
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                      othercases
(*INSERT 'Give improper \.{\\hyphenation} error'*)(*PASCAL module 936*)
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        print_err('Improper ');
                                                                                                                                                                                                                                                                                                                        print_esc('hyphenation');
(*Improper \\hyphenation...*)
                                                                                                                                                                                                                                                                                                                        print(' will be flushed');
                                                                                                                                                                                                                                                                                                                        help2('Hyphenation exceptions must contain only letters')

                                                                                                                                                                                                                                                                                                                        ('and hyphens. But continue; I''ll forgive and forget.');
                                                                                                                                                                                                                                                                                                                        error;
                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Give improper \.{\\hyphenation} error'*)
                                                                                                                                                                                                                                                                                                                      endcases;
                                                                                                                                                                                                                                                                                                                    End

(*FIN INSERT 'Enter as many hyphenation exceptions as are listed, until coming to a right brace; then |return|'*)                                                                                                                                                                                         ;
                                                                                                                                                                                                                                                                                                          exit:
                                                                                                                                                                                                                                                                                                        End;


(***PASCAL module 968***)
                                                                                                                                                                                                                                                                                                        Function prune_page_top(p:pointer): pointer; {adjust top after page break}

                                                                                                                                                                                                                                                                                                        Var prev_p: pointer; {lags one step behind |p|}
                                                                                                                                                                                                                                                                                                          q: pointer; {temporary variable for list manipulation}
                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                          prev_p := temp_head;
                                                                                                                                                                                                                                                                                                          link(temp_head) := p;
                                                                                                                                                                                                                                                                                                          While p<>null Do
                                                                                                                                                                                                                                                                                                            Case Type(p) Of 
                                                                                                                                                                                                                                                                                                              hlist_node,vlist_node,rule_node:
(*INSERT 'Insert glue for |split_top_skip| and set~|p:=null|'*)(*PASCAL module 969*)
                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                 q := new_skip_param(split_top_skip_code);
                                                                                                                                                                                                                                                                                                                                                 link(prev_p) := q;
                                                                                                                                                                                                                                                                                                                                                 link(q) := p;
  {now |temp_ptr=glue_ptr(q)|}
                                                                                                                                                                                                                                                                                                                                                 If width(temp_ptr)>height(p) Then width(temp_ptr) := width(temp_ptr)-height(p)
                                                                                                                                                                                                                                                                                                                                                 Else width(temp_ptr) := 0;
                                                                                                                                                                                                                                                                                                                                                 p := null;
                                                                                                                                                                                                                                                                                                                                               End

(*FIN INSERT 'Insert glue for |split_top_skip| and set~|p:=null|'*)                                                                                                                                                                                                                                           ;
                                                                                                                                                                                                                                                                                                              whatsit_node,mark_node,ins_node:
                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                 prev_p := p;
                                                                                                                                                                                                                                                                                                                                                 p := link(prev_p);
                                                                                                                                                                                                                                                                                                                                               End;
                                                                                                                                                                                                                                                                                                              glue_node,kern_node,penalty_node:
                                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                                  q := p;
                                                                                                                                                                                                                                                                                                                                                  p := link(q);
                                                                                                                                                                                                                                                                                                                                                  link(q) := null;
                                                                                                                                                                                                                                                                                                                                                  link(prev_p) := p;
                                                                                                                                                                                                                                                                                                                                                  flush_node_list(q);
                                                                                                                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                                                                                              othercases confusion('pruning')
(*this can''t happen pruning][\quad pruning*)
                                                                                                                                                                                                                                                                                                              endcases;
                                                                                                                                                                                                                                                                                                              prune_page_top := link(temp_head);
                                                                                                                                                                                                                                                                                                            End;


(***PASCAL module 970***)
                                                                                                                                                                                                                                                                                                          Function vert_break(p:pointer; h,d:scaled): pointer;
  {finds optimum page break}

                                                                                                                                                                                                                                                                                                          Label done,not_found,update_heights;

                                                                                                                                                                                                                                                                                                          Var prev_p: pointer; {if |p| is a glue node, |type(prev_p)| determines 
  whether |p| is a legal breakpoint}
                                                                                                                                                                                                                                                                                                            q,r: pointer; {glue specifications}
                                                                                                                                                                                                                                                                                                            pi: integer; {penalty value}
                                                                                                                                                                                                                                                                                                            b: integer; {badness at a trial breakpoint}
                                                                                                                                                                                                                                                                                                            least_cost: integer; {the smallest badness plus penalties found so far}
                                                                                                                                                                                                                                                                                                            best_place: pointer; {the most recent break that leads to |least_cost|}
                                                                                                                                                                                                                                                                                                            prev_dp: scaled; {depth of previous box in the list}
                                                                                                                                                                                                                                                                                                            t: small_number; {|type| of the node following a kern}
                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                            prev_p := p; {an initial glue node is not a legal breakpoint}
                                                                                                                                                                                                                                                                                                            least_cost := awful_bad;
                                                                                                                                                                                                                                                                                                            do_all_six(set_height_zero);
                                                                                                                                                                                                                                                                                                            prev_dp := 0;
                                                                                                                                                                                                                                                                                                            loop
                                                                                                                                                                                                                                                                                                            Begin
(*INSERT 'If node |p| is a legal breakpoint, check if this break is the best known, and |goto done| if |p| is null or if the page-so-far is already too full to accept more stuff'*)(*PASCAL module 972*)
                                                                                                                                                                                                                                                                                                              If p=null Then pi := eject_penalty
                                                                                                                                                                                                                                                                                                              Else
(*INSERT 'Use node |p| to update the current height and depth measurements; if this node is not a legal breakpoint, |goto not_found| or |update_heights|, otherwise set |pi| to the associated penalty at the break'*)(*PASCAL module 973*)
                                                                                                                                                                                                                                                                                                                Case Type(p) Of 
                                                                                                                                                                                                                                                                                                                  hlist_node,vlist_node,rule_node:
                                                                                                                                                                                                                                                                                                                                                   Begin
(**)                                                                                                                                                                                                                                                                                                                                                 ;

                                                                                                                                                                                                                                                                                                                                                     cur_height := cur_height+prev_dp+height(p);
                                                                                                                                                                                                                                                                                                                                                     prev_dp := depth(p);
                                                                                                                                                                                                                                                                                                                                                     goto not_found;
                                                                                                                                                                                                                                                                                                                                                   End;
                                                                                                                                                                                                                                                                                                                  whatsit_node:
(*INSERT 'Process whatsit |p| in |vert_break| loop, |goto not_found|'*)(*PASCAL module 1365*)
                                                                                                                                                                                                                                                                                                                                goto not_found

(*FIN INSERT 'Process whatsit |p| in |vert_break| loop, |goto not_found|'*)                                                                                                                                                                                                                                       ;
                                                                                                                                                                                                                                                                                                                  glue_node: If precedes_break(prev_p) Then pi := 0
                                                                                                                                                                                                                                                                                                                             Else goto update_heights;
                                                                                                                                                                                                                                                                                                                  kern_node:
                                                                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                                                                               If link(p)=null Then t := penalty_node
                                                                                                                                                                                                                                                                                                                               Else t := Type(link(p));
                                                                                                                                                                                                                                                                                                                               If t=glue_node Then pi := 0
                                                                                                                                                                                                                                                                                                                               Else goto update_heights;
                                                                                                                                                                                                                                                                                                                             End;
                                                                                                                                                                                                                                                                                                                  penalty_node: pi := penalty(p);
                                                                                                                                                                                                                                                                                                                  mark_node,ins_node: goto not_found;
                                                                                                                                                                                                                                                                                                                  othercases confusion('vertbreak')
(*this can''t happen vertbreak][\quad vertbreak*)
                                                                                                                                                                                                                                                                                                                  endcases

(*FIN INSERT 'Use node |p| to update the current height and depth measurements; if this node is not a legal breakpoint, |goto not_found| or |update_heights|, otherwise set |pi| to the associated penalty at the break'*)                                                                                        ;

(*INSERT 'Check if node |p| is a new champion breakpoint; then \(go)|goto done| if |p| is a forced break or if the page-so-far is already too full'*)(*PASCAL module 974*)
                                                                                                                                                                                                                                                                                                                  If pi<inf_penalty Then
                                                                                                                                                                                                                                                                                                                    Begin
(*INSERT 'Compute the badness, |b|, using |awful_bad| if the box is too full'*)(*PASCAL module 975*)
                                                                                                                                                                                                                                                                                                                      If cur_height<h Then
                                                                                                                                                                                                                                                                                                                        If (active_height[3]<>0) Or (active_height[4]<>0) Or
                                                                                                                                                                                                                                                                                                                           (active_height[5]<>0) Then b := 0
                                                                                                                                                                                                                                                                                                                      Else b := badness(h-cur_height,active_height[2])
                                                                                                                                                                                                                                                                                                                      Else If cur_height-h>active_height[6] Then b := awful_bad
                                                                                                                                                                                                                                                                                                                      Else b := badness(cur_height-h,active_height[6])

(*FIN INSERT 'Compute the badness, |b|, using |awful_bad| if the box is too full'*)                                                                                                                                                                                                                                   ;
                                                                                                                                                                                                                                                                                                                      If b<awful_bad Then
                                                                                                                                                                                                                                                                                                                        If pi<=eject_penalty Then b := pi
                                                                                                                                                                                                                                                                                                                      Else If b<inf_bad Then b := b+pi
                                                                                                                                                                                                                                                                                                                      Else b := deplorable;
                                                                                                                                                                                                                                                                                                                      If b<=least_cost Then
                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                          best_place := p;
                                                                                                                                                                                                                                                                                                                          least_cost := b;
                                                                                                                                                                                                                                                                                                                          best_height_plus_depth := cur_height+prev_dp;
                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                      If (b=awful_bad)Or(pi<=eject_penalty) Then goto done;
                                                                                                                                                                                                                                                                                                                    End

(*FIN INSERT 'Check if node |p| is a new champion breakpoint; then \(go)|goto done| if |p| is a forced break or if the page-so-far is already too full'*)                                                                                                                                                         ;
                                                                                                                                                                                                                                                                                                                  If (Type(p)<glue_node)Or(Type(p)>kern_node) Then goto not_found;
                                                                                                                                                                                                                                                                                                                  update_heights:
(*INSERT 'Update the current height and depth measurements with respect to a glue or kern node~|p|'*)(*PASCAL module 976*)
                                                                                                                                                                                                                                                                                                                                  If Type(p)=kern_node Then q := p
                                                                                                                                                                                                                                                                                                                                  Else
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      q := glue_ptr(p);
                                                                                                                                                                                                                                                                                                                                      active_height[2+stretch_order(q)] := 
                                                                                                                                                                                                                                                                                                                                                                           active_height[2+stretch_order(q)]+stretch(q);

                                                                                                                                                                                                                                                                                                                                      active_height[6] := active_height[6]+shrink(q);
                                                                                                                                                                                                                                                                                                                                      If (shrink_order(q)<>normal)And(shrink(q)<>0) Then
                                                                                                                                                                                                                                                                                                                                        Begin
(**)                                                                                                                                                                                                                                                                                                                                      ;

                                                                                                                                                                                                                                                                                                                                          print_err('Infinite glue shrinkage found in box being split');

(*Infinite glue shrinkage...*)
                                                                                                                                                                                                                                                                                                                                          help4('The box you are \vsplitting contains some infinitely')

                                                                                                                                                                                                                                                                                                                                          ('shrinkable glue, e.g., `\vss'' or `\vskip 0pt minus 1fil''.')

                                                                                                                                                                                                                                                                                                                                          ('Such glue doesn''t belong there; but you can safely proceed,')

                                                                                                                                                                                                                                                                                                                                          ('since the offensive shrinkability has been made finite.');
                                                                                                                                                                                                                                                                                                                                          error;
                                                                                                                                                                                                                                                                                                                                          r := new_spec(q);
                                                                                                                                                                                                                                                                                                                                          shrink_order(r) := normal;
                                                                                                                                                                                                                                                                                                                                          delete_glue_ref(q);
                                                                                                                                                                                                                                                                                                                                          glue_ptr(p) := r;
                                                                                                                                                                                                                                                                                                                                          q := r;
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                                                                  cur_height := cur_height+prev_dp+width(q);
                                                                                                                                                                                                                                                                                                                  prev_dp := 0

(*FIN INSERT 'Update the current height and depth measurements with respect to a glue or kern node~|p|'*)                                                                                                                                                                                                         ;
                                                                                                                                                                                                                                                                                                                  not_found: If prev_dp>d Then
                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                 cur_height := cur_height+prev_dp-d;
                                                                                                                                                                                                                                                                                                                                 prev_dp := d;
                                                                                                                                                                                                                                                                                                                               End;

(*FIN INSERT 'If node |p| is a legal breakpoint, check if this break is the best known, and |goto done| if |p| is null or if the page-so-far is already too full to accept more stuff'*)                                                                                                                          ;
                                                                                                                                                                                                                                                                                                                  prev_p := p;
                                                                                                                                                                                                                                                                                                                  p := link(prev_p);
                                                                                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                                                                                              done: vert_break := best_place;
                                                                                                                                                                                                                                                                                                            End;


(***PASCAL module 977***)
                                                                                                                                                                                                                                                                                                            Function vsplit(n:eight_bits; h:scaled): pointer;
  {extracts a page of height |h| from box |n|}

                                                                                                                                                                                                                                                                                                            Label exit,done;

                                                                                                                                                                                                                                                                                                            Var v: pointer; {the box to be split}
                                                                                                                                                                                                                                                                                                              p: pointer; {runs through the vlist}
                                                                                                                                                                                                                                                                                                              q: pointer; {points to where the break occurs}
                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                              v := box(n);
                                                                                                                                                                                                                                                                                                              If split_first_mark<>null Then
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  delete_token_ref(split_first_mark);
                                                                                                                                                                                                                                                                                                                  split_first_mark := null;
                                                                                                                                                                                                                                                                                                                  delete_token_ref(split_bot_mark);
                                                                                                                                                                                                                                                                                                                  split_bot_mark := null;
                                                                                                                                                                                                                                                                                                                End;

(*INSERT 'Dispense with trivial cases of void or bad boxes'*)(*PASCAL module 978*)
                                                                                                                                                                                                                                                                                                              If v=null Then
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  vsplit := null;
                                                                                                                                                                                                                                                                                                                  return;
                                                                                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                                                                                              If Type(v)<>vlist_node Then
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  print_err('');
                                                                                                                                                                                                                                                                                                                  print_esc('vsplit');
                                                                                                                                                                                                                                                                                                                  print(' needs a ');
                                                                                                                                                                                                                                                                                                                  print_esc('vbox');
(*vsplit_][\.{\\vsplit needs a \\vbox}*)
                                                                                                                                                                                                                                                                                                                  help2('The box you are trying to split is an \hbox.')

                                                                                                                                                                                                                                                                                                                  ('I can''t split such a box, so I''ll leave it alone.');
                                                                                                                                                                                                                                                                                                                  error;
                                                                                                                                                                                                                                                                                                                  vsplit := null;
                                                                                                                                                                                                                                                                                                                  return;
                                                                                                                                                                                                                                                                                                                End

(*FIN INSERT 'Dispense with trivial cases of void or bad boxes'*)                                                                                                                                                                                                                                             ;
                                                                                                                                                                                                                                                                                                              q := vert_break(list_ptr(v),h,split_max_depth);

(*INSERT 'Look at all the marks in nodes before the break, and set the final link to |null| at the break'*)(*PASCAL module 979*)
                                                                                                                                                                                                                                                                                                              p := list_ptr(v);
                                                                                                                                                                                                                                                                                                              If p=q Then list_ptr(v) := null
                                                                                                                                                                                                                                                                                                              Else loopbegin If Type(p)=mark_node Then
                                                                                                                                                                                                                                                                                                                               If split_first_mark=null Then
                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                   split_first_mark := mark_ptr(p);
                                                                                                                                                                                                                                                                                                                                   split_bot_mark := split_first_mark;
                                                                                                                                                                                                                                                                                                                                   token_ref_count(split_first_mark) := 
                                                                                                                                                                                                                                                                                                                                                                        token_ref_count(split_first_mark)+2;
                                                                                                                                                                                                                                                                                                                                 End
                                                                                                                                                                                                                                                                                                              Else
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  delete_token_ref(split_bot_mark);
                                                                                                                                                                                                                                                                                                                  split_bot_mark := mark_ptr(p);
                                                                                                                                                                                                                                                                                                                  add_token_ref(split_bot_mark);
                                                                                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                                                                                              If link(p)=q Then
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  link(p) := null;
                                                                                                                                                                                                                                                                                                                  goto done;
                                                                                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                                                                                              p := link(p);
                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                            done:

(*FIN INSERT 'Look at all the marks in nodes before the break, and set the final link to |null| at the break'*)                                                                                                                                                                                             ;
                                                                                                                                                                                                                                                                                                            q := prune_page_top(q);
                                                                                                                                                                                                                                                                                                            p := list_ptr(v);
                                                                                                                                                                                                                                                                                                            free_node(v,box_node_size);
                                                                                                                                                                                                                                                                                                            If q=null Then box(n) := null {the |eq_level| of the box stays the same}
                                                                                                                                                                                                                                                                                                            Else box(n) := vpack(q,natural);
                                                                                                                                                                                                                                                                                                            vsplit := vpackage(p,h,exactly,split_max_depth);
                                                                                                                                                                                                                                                                                                            exit:
                                                                                                                                                                                                                                                                                                          End;


(***PASCAL module 985***)
                                                                                                                                                                                                                                                                                                          Procedure print_totals;
                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                            print_scaled(page_total);
                                                                                                                                                                                                                                                                                                            print_plus(2)('');
                                                                                                                                                                                                                                                                                                            print_plus(3)('fil');
                                                                                                                                                                                                                                                                                                            print_plus(4)('fill');
                                                                                                                                                                                                                                                                                                            print_plus(5)('filll');
                                                                                                                                                                                                                                                                                                            If page_shrink<>0 Then
                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                print(' minus ');
                                                                                                                                                                                                                                                                                                                print_scaled(page_shrink);
                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                          End;


(***PASCAL module 987***)
                                                                                                                                                                                                                                                                                                          Procedure freeze_page_specs(s:small_number);
                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                            page_contents := s;
                                                                                                                                                                                                                                                                                                            page_goal := vsize;
                                                                                                                                                                                                                                                                                                            page_max_depth := max_depth;
                                                                                                                                                                                                                                                                                                            page_depth := 0;
                                                                                                                                                                                                                                                                                                            do_all_six(set_page_so_far_zero);
                                                                                                                                                                                                                                                                                                            least_page_cost := awful_bad;
                                                                                                                                                                                                                                                                                                            stat If tracing_pages>0 Then
                                                                                                                                                                                                                                                                                                                   Begin
                                                                                                                                                                                                                                                                                                                     begin_diagnostic;
                                                                                                                                                                                                                                                                                                                     print_nl('%% goal height=');
                                                                                                                                                                                                                                                                                                                     print_scaled(page_goal);
(*goal height*)
                                                                                                                                                                                                                                                                                                                     print(', max depth=');
                                                                                                                                                                                                                                                                                                                     print_scaled(page_max_depth);
                                                                                                                                                                                                                                                                                                                     end_diagnostic(false);
                                                                                                                                                                                                                                                                                                                   End;;
                                                                                                                                                                                                                                                                                                            tats;

                                                                                                                                                                                                                                                                                                          End;


(***PASCAL module 992***)
                                                                                                                                                                                                                                                                                                          Procedure box_error(n:eight_bits);
                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                            error;
                                                                                                                                                                                                                                                                                                            begin_diagnostic;
                                                                                                                                                                                                                                                                                                            print_nl('The following box has been deleted:');
(*The following...deleted*)
                                                                                                                                                                                                                                                                                                            show_box(box(n));
                                                                                                                                                                                                                                                                                                            end_diagnostic(true);
                                                                                                                                                                                                                                                                                                            flush_node_list(box(n));
                                                                                                                                                                                                                                                                                                            box(n) := null;
                                                                                                                                                                                                                                                                                                          End;


(***PASCAL module 993***)
                                                                                                                                                                                                                                                                                                          Procedure ensure_vbox(n:eight_bits);

                                                                                                                                                                                                                                                                                                          Var p: pointer; {the box register contents}
                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                            p := box(n);
                                                                                                                                                                                                                                                                                                            If p<>null Then If Type(p)=hlist_node Then
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                print_err('Insertions can only be added to a vbox');
(*Insertions can only...*)
                                                                                                                                                                                                                                                                                                                                help3('Tut tut: You''re trying to \insert into a')

                                                                                                                                                                                                                                                                                                                                ('\box register that now contains an \hbox.')

                                                                                                                                                                                                                                                                                                                                ('Proceed, and I''ll discard its present contents.');
                                                                                                                                                                                                                                                                                                                                box_error(n);
                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                          End;


(***PASCAL module 994***)
(*\4*)
(*INSERT 'Declare the procedure called |fire_up|'*)(*PASCAL module 1012*)
                                                                                                                                                                                                                                                                                                          Procedure fire_up(c:pointer);

                                                                                                                                                                                                                                                                                                          Label exit;

                                                                                                                                                                                                                                                                                                          Var p,q,r,s: pointer; {nodes being examined and/or changed}
                                                                                                                                                                                                                                                                                                            prev_p: pointer; {predecessor of |p|}
                                                                                                                                                                                                                                                                                                            n: min_quarterword..255; {insertion box number}
                                                                                                                                                                                                                                                                                                            wait: boolean; {should the present insertion be held over?}
                                                                                                                                                                                                                                                                                                            save_vbadness: integer; {saved value of |vbadness|}
                                                                                                                                                                                                                                                                                                            save_vfuzz: scaled; {saved value of |vfuzz|}
                                                                                                                                                                                                                                                                                                            save_split_top_skip: pointer; {saved value of |split_top_skip|}
                                                                                                                                                                                                                                                                                                          Begin
(*INSERT 'Set the value of |output_penalty|'*)(*PASCAL module 1013*)
                                                                                                                                                                                                                                                                                                            If Type(best_page_break)=penalty_node Then
                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                geq_word_define(int_base+output_penalty_code,penalty(best_page_break));
                                                                                                                                                                                                                                                                                                                penalty(best_page_break) := inf_penalty;
                                                                                                                                                                                                                                                                                                              End
                                                                                                                                                                                                                                                                                                            Else geq_word_define(int_base+output_penalty_code,inf_penalty)

(*FIN INSERT 'Set the value of |output_penalty|'*)                                                                                                                                                                                                                                                          ;
                                                                                                                                                                                                                                                                                                            If bot_mark<>null Then
                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                If top_mark<>null Then delete_token_ref(top_mark);
                                                                                                                                                                                                                                                                                                                top_mark := bot_mark;
                                                                                                                                                                                                                                                                                                                add_token_ref(top_mark);
                                                                                                                                                                                                                                                                                                                delete_token_ref(first_mark);
                                                                                                                                                                                                                                                                                                                first_mark := null;
                                                                                                                                                                                                                                                                                                              End;

(*INSERT 'Put the \(o)optimal current page into box 255, update |first_mark| and |bot_mark|, append insertions to their boxes, and put the remaining nodes back on the contribution list'*)(*PASCAL module 1014*)
                                                                                                                                                                                                                                                                                                            If c=best_page_break Then best_page_break := null; {|c| not yet linked in}

(*INSERT 'Ensure that box 255 is empty before output'*)(*PASCAL module 1015*)
                                                                                                                                                                                                                                                                                                            If box(255)<>null Then
                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                print_err('');
                                                                                                                                                                                                                                                                                                                print_esc('box');
                                                                                                                                                                                                                                                                                                                print('255 is not void');
(*box255][\.{\\box255 is not void}*)
                                                                                                                                                                                                                                                                                                                help2('You shouldn''t use \box255 except in \output routines.')

                                                                                                                                                                                                                                                                                                                ('Proceed, and I''ll discard its present contents.');
                                                                                                                                                                                                                                                                                                                box_error(255);
                                                                                                                                                                                                                                                                                                              End

(*FIN INSERT 'Ensure that box 255 is empty before output'*)                                                                                                                                                                                                                                                 ;
                                                                                                                                                                                                                                                                                                            insert_penalties := 0; {this will count the number of insertions held over}
                                                                                                                                                                                                                                                                                                            save_split_top_skip := split_top_skip;
                                                                                                                                                                                                                                                                                                            If holding_inserts<=0 Then

(*INSERT 'Prepare all the boxes involved in insertions to act as queues'*)(*PASCAL module 1018*)
                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                r := link(page_ins_head);
                                                                                                                                                                                                                                                                                                                While r<>page_ins_head Do
                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                    If best_ins_ptr(r)<>null Then
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        n := qo(subtype(r));
                                                                                                                                                                                                                                                                                                                        ensure_vbox(n);
                                                                                                                                                                                                                                                                                                                        If box(n)=null Then box(n) := new_null_box;
                                                                                                                                                                                                                                                                                                                        p := box(n)+list_offset;
                                                                                                                                                                                                                                                                                                                        While link(p)<>null Do
                                                                                                                                                                                                                                                                                                                          p := link(p);
                                                                                                                                                                                                                                                                                                                        last_ins_ptr(r) := p;
                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                    r := link(r);
                                                                                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                                                                              End

(*FIN INSERT 'Prepare all the boxes involved in insertions to act as queues'*)                                                                                                                                                                                                                              ;
                                                                                                                                                                                                                                                                                                            q := hold_head;
                                                                                                                                                                                                                                                                                                            link(q) := null;
                                                                                                                                                                                                                                                                                                            prev_p := page_head;
                                                                                                                                                                                                                                                                                                            p := link(prev_p);
                                                                                                                                                                                                                                                                                                            While p<>best_page_break Do
                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                If Type(p)=ins_node Then
                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                    If holding_inserts<=0 Then

(*INSERT 'Either insert the material specified by node |p| into the appropriate box, or hold it for the next page; also delete node |p| from the current page'*)(*PASCAL module 1020*)
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        r := link(page_ins_head);
                                                                                                                                                                                                                                                                                                                        While subtype(r)<>subtype(p) Do
                                                                                                                                                                                                                                                                                                                          r := link(r);
                                                                                                                                                                                                                                                                                                                        If best_ins_ptr(r)=null Then wait := true
                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            wait := false;
                                                                                                                                                                                                                                                                                                                            s := last_ins_ptr(r);
                                                                                                                                                                                                                                                                                                                            link(s) := ins_ptr(p);
                                                                                                                                                                                                                                                                                                                            If best_ins_ptr(r)=p Then

(*INSERT 'Wrap up the box specified by node |r|, splitting node |p| if called for; set |wait:=true| if node |p| holds a remainder after splitting'*)(*PASCAL module 1021*)
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                If Type(r)=split_up Then
                                                                                                                                                                                                                                                                                                                                  If (broken_ins(r)=p)And(broken_ptr(r)<>null) Then
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      While link(s)<>broken_ptr(r) Do
                                                                                                                                                                                                                                                                                                                                        s := link(s);
                                                                                                                                                                                                                                                                                                                                      link(s) := null;
                                                                                                                                                                                                                                                                                                                                      split_top_skip := split_top_ptr(p);
                                                                                                                                                                                                                                                                                                                                      ins_ptr(p) := prune_page_top(broken_ptr(r));
                                                                                                                                                                                                                                                                                                                                      If ins_ptr(p)<>null Then
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          temp_ptr := vpack(ins_ptr(p),natural);
                                                                                                                                                                                                                                                                                                                                          height(p) := height(temp_ptr)+depth(temp_ptr);
                                                                                                                                                                                                                                                                                                                                          free_node(temp_ptr,box_node_size);
                                                                                                                                                                                                                                                                                                                                          wait := true;
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                                                                                best_ins_ptr(r) := null;
                                                                                                                                                                                                                                                                                                                                n := qo(subtype(r));
                                                                                                                                                                                                                                                                                                                                temp_ptr := list_ptr(box(n));
                                                                                                                                                                                                                                                                                                                                free_node(box(n),box_node_size);
                                                                                                                                                                                                                                                                                                                                box(n) := vpack(temp_ptr,natural);
                                                                                                                                                                                                                                                                                                                              End

(*FIN INSERT 'Wrap up the box specified by node |r|, splitting node |p| if called for; set |wait:=true| if node |p| holds a remainder after splitting'*)
                                                                                                                                                                                                                                                                                                                            Else
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                While link(s)<>null Do
                                                                                                                                                                                                                                                                                                                                  s := link(s);
                                                                                                                                                                                                                                                                                                                                last_ins_ptr(r) := s;
                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                                          End;

(*INSERT 'Either append the insertion node |p| after node |q|, and remove it from the current page, or delete |node(p)|'*)(*PASCAL module 1022*)
                                                                                                                                                                                                                                                                                                                        link(prev_p) := link(p);
                                                                                                                                                                                                                                                                                                                        link(p) := null;
                                                                                                                                                                                                                                                                                                                        If wait Then
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            link(q) := p;
                                                                                                                                                                                                                                                                                                                            q := p;
                                                                                                                                                                                                                                                                                                                            incr(insert_penalties);
                                                                                                                                                                                                                                                                                                                          End
                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            delete_glue_ref(split_top_ptr(p));
                                                                                                                                                                                                                                                                                                                            free_node(p,ins_node_size);
                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                        p := prev_p

(*FIN INSERT 'Either append the insertion node |p| after node |q|, and remove it from the current page, or delete |node(p)|'*)                                                                                                                                                                                          ;
                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Either insert the material specified by node |p| into the appropriate box, or hold it for the next page; also delete node |p| from the current page'*)                                                                                                                                                ;
                                                                                                                                                                                                                                                                                                                  End
                                                                                                                                                                                                                                                                                                                Else If Type(p)=mark_node Then
(*INSERT 'Update the values of |first_mark| and |bot_mark|'*)(*PASCAL module 1016*)
                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                         If first_mark=null Then
                                                                                                                                                                                                                                                                                                                           Begin
                                                                                                                                                                                                                                                                                                                             first_mark := mark_ptr(p);
                                                                                                                                                                                                                                                                                                                             add_token_ref(first_mark);
                                                                                                                                                                                                                                                                                                                           End;
                                                                                                                                                                                                                                                                                                                         If bot_mark<>null Then delete_token_ref(bot_mark);
                                                                                                                                                                                                                                                                                                                         bot_mark := mark_ptr(p);
                                                                                                                                                                                                                                                                                                                         add_token_ref(bot_mark);
                                                                                                                                                                                                                                                                                                                       End

(*FIN INSERT 'Update the values of |first_mark| and |bot_mark|'*)                                                                                                                                                                                                                                               ;
                                                                                                                                                                                                                                                                                                                prev_p := p;
                                                                                                                                                                                                                                                                                                                p := link(prev_p);
                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                            split_top_skip := save_split_top_skip;

(*INSERT 'Break the current page at node |p|, put it in box~255, and put the remaining nodes on the contribution list'*)(*PASCAL module 1017*)
                                                                                                                                                                                                                                                                                                            If p<>null Then
                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                If link(contrib_head)=null Then
                                                                                                                                                                                                                                                                                                                  If nest_ptr=0 Then tail := page_tail
                                                                                                                                                                                                                                                                                                                Else contrib_tail := page_tail;
                                                                                                                                                                                                                                                                                                                link(page_tail) := link(contrib_head);
                                                                                                                                                                                                                                                                                                                link(contrib_head) := p;
                                                                                                                                                                                                                                                                                                                link(prev_p) := null;
                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                            save_vbadness := vbadness;
                                                                                                                                                                                                                                                                                                            vbadness := inf_bad;
                                                                                                                                                                                                                                                                                                            save_vfuzz := vfuzz;
                                                                                                                                                                                                                                                                                                            vfuzz := max_dimen; {inhibit error messages}
                                                                                                                                                                                                                                                                                                            box(255) := vpackage(link(page_head),best_size,exactly,page_max_depth);
                                                                                                                                                                                                                                                                                                            vbadness := save_vbadness;
                                                                                                                                                                                                                                                                                                            vfuzz := save_vfuzz;
                                                                                                                                                                                                                                                                                                            If last_glue<>max_halfword Then delete_glue_ref(last_glue);

(*INSERT 'Start a new current page'*)(*PASCAL module 991*)
                                                                                                                                                                                                                                                                                                            page_contents := empty;
                                                                                                                                                                                                                                                                                                            page_tail := page_head;
                                                                                                                                                                                                                                                                                                            link(page_head) := null;

                                                                                                                                                                                                                                                                                                            last_glue := max_halfword;
                                                                                                                                                                                                                                                                                                            last_penalty := 0;
                                                                                                                                                                                                                                                                                                            last_kern := 0;
                                                                                                                                                                                                                                                                                                            page_depth := 0;
                                                                                                                                                                                                                                                                                                            page_max_depth := 0

(*FIN INSERT 'Start a new current page'*)                                                                                                                                                                                                                                                                   ; {this sets |last_glue:=max_halfword|}
                                                                                                                                                                                                                                                                                                            If q<>hold_head Then
                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                link(page_head) := link(hold_head);
                                                                                                                                                                                                                                                                                                                page_tail := q;
                                                                                                                                                                                                                                                                                                              End

(*FIN INSERT 'Break the current page at node |p|, put it in box~255, and put the remaining nodes on the contribution list'*)                                                                                                                                                                                ;

(*INSERT 'Delete \(t)the page-insertion nodes'*)(*PASCAL module 1019*)
                                                                                                                                                                                                                                                                                                            r := link(page_ins_head);
                                                                                                                                                                                                                                                                                                            While r<>page_ins_head Do
                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                q := link(r);
                                                                                                                                                                                                                                                                                                                free_node(r,page_ins_node_size);
                                                                                                                                                                                                                                                                                                                r := q;
                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                            link(page_ins_head) := page_ins_head

(*FIN INSERT 'Delete \(t)the page-insertion nodes'*)

(*FIN INSERT 'Put the \(o)optimal current page into box 255, update |first_mark| and |bot_mark|, append insertions to their boxes, and put the remaining nodes back on the contribution list'*)                                                                                                             ;
                                                                                                                                                                                                                                                                                                            If (top_mark<>null)And(first_mark=null) Then
                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                first_mark := top_mark;
                                                                                                                                                                                                                                                                                                                add_token_ref(top_mark);
                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                            If output_routine<>null Then
                                                                                                                                                                                                                                                                                                              If dead_cycles>=max_dead_cycles Then

(*INSERT 'Explain that too many dead cycles have occurred in a row'*)(*PASCAL module 1024*)
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  print_err('Output loop---');
                                                                                                                                                                                                                                                                                                                  print_int(dead_cycles);
(*Output loop...*)
                                                                                                                                                                                                                                                                                                                  print(' consecutive dead cycles');
                                                                                                                                                                                                                                                                                                                  help3('I''ve concluded that your \output is awry; it never does a')

                                                                                                                                                                                                                                                                                                                  ('\shipout, so I''m shipping \box255 out myself. Next time')

                                                                                                                                                                                                                                                                                                                  ('increase \maxdeadcycles if you want me to be more patient!');
                                                                                                                                                                                                                                                                                                                  error;
                                                                                                                                                                                                                                                                                                                End

(*FIN INSERT 'Explain that too many dead cycles have occurred in a row'*)
                                                                                                                                                                                                                                                                                                            Else
(*INSERT 'Fire up the user''s output routine and |return|'*)(*PASCAL module 1025*)
                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                output_active := true;
                                                                                                                                                                                                                                                                                                                incr(dead_cycles);
                                                                                                                                                                                                                                                                                                                push_nest;
                                                                                                                                                                                                                                                                                                                mode := -vmode;
                                                                                                                                                                                                                                                                                                                prev_depth := ignore_depth;
                                                                                                                                                                                                                                                                                                                mode_line := -line;
                                                                                                                                                                                                                                                                                                                begin_token_list(output_routine,output_text);
                                                                                                                                                                                                                                                                                                                new_save_level(output_group);
                                                                                                                                                                                                                                                                                                                normal_paragraph;
                                                                                                                                                                                                                                                                                                                scan_left_brace;
                                                                                                                                                                                                                                                                                                                return;
                                                                                                                                                                                                                                                                                                              End

(*FIN INSERT 'Fire up the user''s output routine and |return|'*)                                                                                                                                                                                                                                            ;

(*INSERT 'Perform the default output routine'*)(*PASCAL module 1023*)
                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                              If link(page_head)<>null Then
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  If link(contrib_head)=null Then
                                                                                                                                                                                                                                                                                                                    If nest_ptr=0 Then tail := page_tailelse contrib_tail:=page_tail
                                                                                                                                                                                                                                                                                                                  Else link(page_tail) := link(contrib_head);
                                                                                                                                                                                                                                                                                                                  link(contrib_head) := link(page_head);
                                                                                                                                                                                                                                                                                                                  link(page_head) := null;
                                                                                                                                                                                                                                                                                                                  page_tail := page_head;
                                                                                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                                                                                              ship_out(box(255));
                                                                                                                                                                                                                                                                                                              box(255) := null;
                                                                                                                                                                                                                                                                                                            End

(*FIN INSERT 'Perform the default output routine'*)                                                                                                                                                                                                                                                         ;
                                                                                                                                                                                                                                                                                                            exit:
                                                                                                                                                                                                                                                                                                          End;

(*FIN INSERT 'Declare the procedure called |fire_up|'*)                                                                                                                                                                                                                                                   ;

                                                                                                                                                                                                                                                                                                          Procedure build_page; {append contributions to the current page}

                                                                                                                                                                                                                                                                                                          Label exit,done,done1,continue,contribute,update_heights;

                                                                                                                                                                                                                                                                                                          Var p: pointer; {the node being appended}
                                                                                                                                                                                                                                                                                                            q,r: pointer; {nodes being examined}
                                                                                                                                                                                                                                                                                                            b,c: integer; {badness and cost of current page}
                                                                                                                                                                                                                                                                                                            pi: integer; {penalty to be added to the badness}
                                                                                                                                                                                                                                                                                                            n: min_quarterword..255; {insertion box number}
                                                                                                                                                                                                                                                                                                            delta,h,w: scaled; {sizes used for insertion calculations}
                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                            If (link(contrib_head)=null)Or output_active Then return;
                                                                                                                                                                                                                                                                                                            Repeat
                                                                                                                                                                                                                                                                                                              continue: p := link(contrib_head);


(*INSERT 'Update the values of |last_glue|, |last_penalty|, and |last_kern|'*)(*PASCAL module 996*)
                                                                                                                                                                                                                                                                                                              If last_glue<>max_halfword Then delete_glue_ref(last_glue);
                                                                                                                                                                                                                                                                                                              last_penalty := 0;
                                                                                                                                                                                                                                                                                                              last_kern := 0;
                                                                                                                                                                                                                                                                                                              If Type(p)=glue_node Then
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  last_glue := glue_ptr(p);
                                                                                                                                                                                                                                                                                                                  add_glue_ref(last_glue);
                                                                                                                                                                                                                                                                                                                End
                                                                                                                                                                                                                                                                                                              Else
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  last_glue := max_halfword;
                                                                                                                                                                                                                                                                                                                  If Type(p)=penalty_node Then last_penalty := penalty(p)
                                                                                                                                                                                                                                                                                                                  Else If Type(p)=kern_node Then last_kern := width(p);
                                                                                                                                                                                                                                                                                                                End

(*FIN INSERT 'Update the values of |last_glue|, |last_penalty|, and |last_kern|'*)                                                                                                                                                                                                                            ;

(*INSERT 'Move node |p| to the current page; if it is time for a page break, put the nodes following the break back onto the contribution list, and |return| to the user''s output routine if there is one'*)(*PASCAL module 997*)

(*INSERT 'If the current page is empty and node |p| is to be deleted, |goto done1|; otherwise use node |p| to update the state of the current page; if this node is an insertion, |goto contribute|; otherwise if this node is not a legal breakpoint, |goto contribute| or |update_heights|; otherwise set |pi| to the penalty associated with this breakpoint'*)(*PASCAL module 1000*)
                                                                                                                                                                                                                                                                                                              Case Type(p) Of 
                                                                                                                                                                                                                                                                                                                hlist_node,vlist_node,rule_node: If page_contents<box_there Then

(*INSERT 'Initialize the current page, insert the \.{\\topskip} glue ahead of |p|, and |goto continue|'*)(*PASCAL module 1001*)
                                                                                                                                                                                                                                                                                                                                                   Begin
                                                                                                                                                                                                                                                                                                                                                     If page_contents=empty Then freeze_page_specs(box_there)
                                                                                                                                                                                                                                                                                                                                                     Else page_contents := box_there;
                                                                                                                                                                                                                                                                                                                                                     q := new_skip_param(top_skip_code); {now |temp_ptr=glue_ptr(q)|}
                                                                                                                                                                                                                                                                                                                                                     If width(temp_ptr)>height(p) Then width(temp_ptr) := width(temp_ptr)-height(p)
                                                                                                                                                                                                                                                                                                                                                     Else width(temp_ptr) := 0;
                                                                                                                                                                                                                                                                                                                                                     link(q) := p;
                                                                                                                                                                                                                                                                                                                                                     link(contrib_head) := q;
                                                                                                                                                                                                                                                                                                                                                     goto continue;
                                                                                                                                                                                                                                                                                                                                                   End

(*FIN INSERT 'Initialize the current page, insert the \.{\\topskip} glue ahead of |p|, and |goto continue|'*)
                                                                                                                                                                                                                                                                                                                                                 Else
(*INSERT 'Prepare to move a box or rule node to the current page, then |goto contribute|'*)(*PASCAL module 1002*)
                                                                                                                                                                                                                                                                                                                                                   Begin
                                                                                                                                                                                                                                                                                                                                                     page_total := page_total+page_depth+height(p);
                                                                                                                                                                                                                                                                                                                                                     page_depth := depth(p);
                                                                                                                                                                                                                                                                                                                                                     goto contribute;
                                                                                                                                                                                                                                                                                                                                                   End

(*FIN INSERT 'Prepare to move a box or rule node to the current page, then |goto contribute|'*)                                                                                                                                                                                                                 ;
                                                                                                                                                                                                                                                                                                                whatsit_node:
(*INSERT 'Prepare to move whatsit |p| to the current page, then |goto contribute|'*)(*PASCAL module 1364*)
                                                                                                                                                                                                                                                                                                                              goto contribute

(*FIN INSERT 'Prepare to move whatsit |p| to the current page, then |goto contribute|'*)                                                                                                                                                                                                                        ;
                                                                                                                                                                                                                                                                                                                glue_node: If page_contents<box_there Then goto done1
                                                                                                                                                                                                                                                                                                                           Else If precedes_break(page_tail) Then pi := 0
                                                                                                                                                                                                                                                                                                                           Else goto update_heights;
                                                                                                                                                                                                                                                                                                                kern_node: If page_contents<box_there Then goto done1
                                                                                                                                                                                                                                                                                                                           Else If link(p)=null Then return
                                                                                                                                                                                                                                                                                                                           Else If Type(link(p))=glue_node Then pi := 0
                                                                                                                                                                                                                                                                                                                           Else goto update_heights;
                                                                                                                                                                                                                                                                                                                penalty_node: If page_contents<box_there Then goto done1else pi := penalty(p);
                                                                                                                                                                                                                                                                                                                mark_node: goto contribute;
                                                                                                                                                                                                                                                                                                                ins_node:
(*INSERT 'Append an insertion to the current page and |goto contribute|'*)(*PASCAL module 1008*)
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            If page_contents=empty Then freeze_page_specs(inserts_only);
                                                                                                                                                                                                                                                                                                                            n := subtype(p);
                                                                                                                                                                                                                                                                                                                            r := page_ins_head;
                                                                                                                                                                                                                                                                                                                            While n>=subtype(link(r)) Do
                                                                                                                                                                                                                                                                                                                              r := link(r);
                                                                                                                                                                                                                                                                                                                            n := qo(n);
                                                                                                                                                                                                                                                                                                                            If subtype(r)<>qi(n) Then

(*INSERT 'Create a page insertion node with |subtype(r)=qi(n)|, and include the glue correction for box |n| in the current page state'*)(*PASCAL module 1009*)
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                q := get_node(page_ins_node_size);
                                                                                                                                                                                                                                                                                                                                link(q) := link(r);
                                                                                                                                                                                                                                                                                                                                link(r) := q;
                                                                                                                                                                                                                                                                                                                                r := q;
                                                                                                                                                                                                                                                                                                                                subtype(r) := qi(n);

                                                                                                                                                                                                                                                                                                                                Type (r) := inserting;
                                                                                                                                                                                                                                                                                                                                  ensure_vbox(n);
                                                                                                                                                                                                                                                                                                                                  If box(n)=null Then height(r) := 0
                                                                                                                                                                                                                                                                                                                                  Else height(r) := height(box(n))+depth(box(n));
                                                                                                                                                                                                                                                                                                                                  best_ins_ptr(r) := null;

                                                                                                                                                                                                                                                                                                                                  q := skip(n);
                                                                                                                                                                                                                                                                                                                                  If count(n)=1000 Then h := height(r)
                                                                                                                                                                                                                                                                                                                                  Else h := x_over_n(height(r),1000)*count(n);
                                                                                                                                                                                                                                                                                                                                  page_goal := page_goal-h-width(q);

                                                                                                                                                                                                                                                                                                                                  page_so_far[2+stretch_order(q)] := page_so_far[2+stretch_order(q)]+stretch(q);

                                                                                                                                                                                                                                                                                                                                  page_shrink := page_shrink+shrink(q);
                                                                                                                                                                                                                                                                                                                                  If (shrink_order(q)<>normal)And(shrink(q)<>0) Then
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      print_err('Infinite glue shrinkage inserted from ');
                                                                                                                                                                                                                                                                                                                                      print_esc('skip');
(*Infinite glue shrinkage...*)
                                                                                                                                                                                                                                                                                                                                      print_int(n);
                                                                                                                                                                                                                                                                                                                                      help3('The correction glue for page breaking with insertions')

                                                                                                                                                                                                                                                                                                                                      ('must have finite shrinkability. But you may proceed,')

                                                                                                                                                                                                                                                                                                                                      ('since the offensive shrinkability has been made finite.');
                                                                                                                                                                                                                                                                                                                                      error;
                                                                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                                                                                End

(*FIN INSERT 'Create a page insertion node with |subtype(r)=qi(n)|, and include the glue correction for box |n| in the current page state'*)                                                                                                                                                                                    ;
                                                                                                                                                                                                                                                                                                                                If Type(r)=split_up Then insert_penalties := insert_penalties+float_cost(p)
                                                                                                                                                                                                                                                                                                                                Else
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    last_ins_ptr(r) := p;
                                                                                                                                                                                                                                                                                                                                    delta := page_goal-page_total-page_depth+page_shrink;
    {this much room is left if we shrink the maximum}
                                                                                                                                                                                                                                                                                                                                    If count(n)=1000 Then h := height(p)
                                                                                                                                                                                                                                                                                                                                    Else h := x_over_n(height(p),1000)*count(n); {this much room is needed}
                                                                                                                                                                                                                                                                                                                                    If ((h<=0)Or(h<=delta))And(height(p)+height(r)<=dimen(n)) Then
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        page_goal := page_goal-h;
                                                                                                                                                                                                                                                                                                                                        height(r) := height(r)+height(p);
                                                                                                                                                                                                                                                                                                                                      End
                                                                                                                                                                                                                                                                                                                                    Else
(*INSERT 'Find the best way to split the insertion, and change |type(r)| to |split_up|'*)(*PASCAL module 1010*)
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        If count(n)<=0 Then w := max_dimen
                                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            w := page_goal-page_total-page_depth;
                                                                                                                                                                                                                                                                                                                                            If count(n)<>1000 Then w := x_over_n(w,count(n))*1000;
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        If w>dimen(n)-height(r) Then w := dimen(n)-height(r);
                                                                                                                                                                                                                                                                                                                                        q := vert_break(ins_ptr(p),w,depth(p));
                                                                                                                                                                                                                                                                                                                                        height(r) := height(r)+best_height_plus_depth;
                                                                                                                                                                                                                                                                                                                                        stat If tracing_pages>0 Then
(*INSERT 'Display the insertion split cost'*)(*PASCAL module 1011*)
                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                 begin_diagnostic;
                                                                                                                                                                                                                                                                                                                                                 print_nl('% split');
                                                                                                                                                                                                                                                                                                                                                 print_int(n);
(*split*)
                                                                                                                                                                                                                                                                                                                                                 print(' to ');
                                                                                                                                                                                                                                                                                                                                                 print_scaled(w);
                                                                                                                                                                                                                                                                                                                                                 print_char(',');
                                                                                                                                                                                                                                                                                                                                                 print_scaled(best_height_plus_depth);

                                                                                                                                                                                                                                                                                                                                                 print(' p=');
                                                                                                                                                                                                                                                                                                                                                 If q=null Then print_int(eject_penalty)
                                                                                                                                                                                                                                                                                                                                                 Else If Type(q)=penalty_node Then print_int(penalty(q))
                                                                                                                                                                                                                                                                                                                                                 Else print_char('0');
                                                                                                                                                                                                                                                                                                                                                 end_diagnostic(false);
                                                                                                                                                                                                                                                                                                                                               End

(*FIN INSERT 'Display the insertion split cost'*)                                                                                                                                                                                                                                                                                       ;
                                                                                                                                                                                                                                                                                                                                        tats;

                                                                                                                                                                                                                                                                                                                                        If count(n)<>1000 Then
                                                                                                                                                                                                                                                                                                                                          best_height_plus_depth := x_over_n(best_height_plus_depth,1000)*count(n);
                                                                                                                                                                                                                                                                                                                                        page_goal := page_goal-best_height_plus_depth;

                                                                                                                                                                                                                                                                                                                                        Type (r) := split_up;
                                                                                                                                                                                                                                                                                                                                          broken_ptr(r) := q;
                                                                                                                                                                                                                                                                                                                                          broken_ins(r) := p;
                                                                                                                                                                                                                                                                                                                                          If q=null Then insert_penalties := insert_penalties+eject_penalty
                                                                                                                                                                                                                                                                                                                                          Else If Type(q)=penalty_node Then insert_penalties := insert_penalties+penalty(q);
                                                                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'Find the best way to split the insertion, and change |type(r)| to |split_up|'*)                                                                                                                                                                                                                                           ;
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                    goto contribute;
                                                                                                                                                                                                                                                                                                                                  End

(*FIN INSERT 'Append an insertion to the current page and |goto contribute|'*)                                                                                                                                                                                                                                                  ;
                                                                                                                                                                                                                                                                                                                                othercases confusion('page')
(*this can''t happen page][\quad page*)
                                                                                                                                                                                                                                                                                                                                endcases

(*FIN INSERT 'If the current page is empty and node |p| is to be deleted, |goto done1|; otherwise use node |p| to update the state of the current page; if this node is an insertion, |goto contribute|; otherwise if this node is not a legal breakpoint, |goto contribute| or |update_heights|; otherwise set |pi| to the penalty associated with this breakpoint'*);

(*INSERT 'Check if node |p| is a new champion breakpoint; then \(if)if it is time for a page break, prepare for output, and either fire up the user''s output routine and |return| or ship out the page and |goto done|'*)(*PASCAL module 1005*)
                                                                                                                                                                                                                                                                                                                                If pi<inf_penalty Then
                                                                                                                                                                                                                                                                                                                                  Begin
(*INSERT 'Compute the badness, |b|, of the current page, using |awful_bad| if the box is too full'*)(*PASCAL module 1007*)
                                                                                                                                                                                                                                                                                                                                    If page_total<page_goal Then
                                                                                                                                                                                                                                                                                                                                      If (page_so_far[3]<>0) Or (page_so_far[4]<>0) Or
                                                                                                                                                                                                                                                                                                                                         (page_so_far[5]<>0) Then b := 0
                                                                                                                                                                                                                                                                                                                                    Else b := badness(page_goal-page_total,page_so_far[2])
                                                                                                                                                                                                                                                                                                                                    Else If page_total-page_goal>page_shrink Then b := awful_bad
                                                                                                                                                                                                                                                                                                                                    Else b := badness(page_total-page_goal,page_shrink)

(*FIN INSERT 'Compute the badness, |b|, of the current page, using |awful_bad| if the box is too full'*)                                                                                                                                                                                                                            ;
                                                                                                                                                                                                                                                                                                                                    If b<awful_bad Then
                                                                                                                                                                                                                                                                                                                                      If pi<=eject_penalty Then c := pi
                                                                                                                                                                                                                                                                                                                                    Else  If b<inf_bad Then c := b+pi+insert_penalties
                                                                                                                                                                                                                                                                                                                                    Else c := deplorable
                                                                                                                                                                                                                                                                                                                                    Else c := b;
                                                                                                                                                                                                                                                                                                                                    If insert_penalties>=10000 Then c := awful_bad;
                                                                                                                                                                                                                                                                                                                                    stat If tracing_pages>0 Then
(*INSERT 'Display the page break cost'*)(*PASCAL module 1006*)
                                                                                                                                                                                                                                                                                                                                           Begin
                                                                                                                                                                                                                                                                                                                                             begin_diagnostic;
                                                                                                                                                                                                                                                                                                                                             print_nl('%');
                                                                                                                                                                                                                                                                                                                                             print(' t=');
                                                                                                                                                                                                                                                                                                                                             print_totals;

                                                                                                                                                                                                                                                                                                                                             print(' g=');
                                                                                                                                                                                                                                                                                                                                             print_scaled(page_goal);

                                                                                                                                                                                                                                                                                                                                             print(' b=');
                                                                                                                                                                                                                                                                                                                                             If b=awful_bad Then print_char('*')
                                                                                                                                                                                                                                                                                                                                             Else print_int(b);
(**\relax*)
                                                                                                                                                                                                                                                                                                                                             print(' p=');
                                                                                                                                                                                                                                                                                                                                             print_int(pi);
                                                                                                                                                                                                                                                                                                                                             print(' c=');
                                                                                                                                                                                                                                                                                                                                             If c=awful_bad Then print_char('*')
                                                                                                                                                                                                                                                                                                                                             Else print_int(c);
                                                                                                                                                                                                                                                                                                                                             If c<=least_page_cost Then print_char('#');
                                                                                                                                                                                                                                                                                                                                             end_diagnostic(false);
                                                                                                                                                                                                                                                                                                                                           End

(*FIN INSERT 'Display the page break cost'*)                                                                                                                                                                                                                                                                                        ;
                                                                                                                                                                                                                                                                                                                                    tats;

                                                                                                                                                                                                                                                                                                                                    If c<=least_page_cost Then
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        best_page_break := p;
                                                                                                                                                                                                                                                                                                                                        best_size := page_goal;
                                                                                                                                                                                                                                                                                                                                        least_page_cost := c;
                                                                                                                                                                                                                                                                                                                                        r := link(page_ins_head);
                                                                                                                                                                                                                                                                                                                                        While r<>page_ins_head Do
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            best_ins_ptr(r) := last_ins_ptr(r);
                                                                                                                                                                                                                                                                                                                                            r := link(r);
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                    If (c=awful_bad)Or(pi<=eject_penalty) Then
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        fire_up(p); {output the current page at the best place}
                                                                                                                                                                                                                                                                                                                                        If output_active Then return; {user's output routine will act}
                                                                                                                                                                                                                                                                                                                                        goto done; {the page has been shipped out by default output routine}
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                  End

(*FIN INSERT 'Check if node |p| is a new champion breakpoint; then \(if)if it is time for a page break, prepare for output, and either fire up the user''s output routine and |return| or ship out the page and |goto done|'*)                                                                                                  ;
                                                                                                                                                                                                                                                                                                                                If (Type(p)<glue_node)Or(Type(p)>kern_node) Then goto contribute;
                                                                                                                                                                                                                                                                                                                                update_heights:
(*INSERT 'Update the current page measurements with respect to the glue or kern specified by node~|p|'*)(*PASCAL module 1004*)
                                                                                                                                                                                                                                                                                                                                                If Type(p)=kern_node Then q := p
                                                                                                                                                                                                                                                                                                                                                Else
                                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                                    q := glue_ptr(p);
                                                                                                                                                                                                                                                                                                                                                    page_so_far[2+stretch_order(q)] := 
                                                                                                                                                                                                                                                                                                                                                                                       page_so_far[2+stretch_order(q)]+stretch(q);

                                                                                                                                                                                                                                                                                                                                                    page_shrink := page_shrink+shrink(q);
                                                                                                                                                                                                                                                                                                                                                    If (shrink_order(q)<>normal)And(shrink(q)<>0) Then
                                                                                                                                                                                                                                                                                                                                                      Begin
(**)                                                                                                                                                                                                                                                                                                                                                    ;

                                                                                                                                                                                                                                                                                                                                                        print_err('Infinite glue shrinkage found on current page');

(*Infinite glue shrinkage...*)
                                                                                                                                                                                                                                                                                                                                                        help4('The page about to be output contains some infinitely')

                                                                                                                                                                                                                                                                                                                                                        ('shrinkable glue, e.g., `\vss'' or `\vskip 0pt minus 1fil''.')

                                                                                                                                                                                                                                                                                                                                                        ('Such glue doesn''t belong there; but you can safely proceed,')

                                                                                                                                                                                                                                                                                                                                                        ('since the offensive shrinkability has been made finite.');
                                                                                                                                                                                                                                                                                                                                                        error;
                                                                                                                                                                                                                                                                                                                                                        r := new_spec(q);
                                                                                                                                                                                                                                                                                                                                                        shrink_order(r) := normal;
                                                                                                                                                                                                                                                                                                                                                        delete_glue_ref(q);
                                                                                                                                                                                                                                                                                                                                                        glue_ptr(p) := r;
                                                                                                                                                                                                                                                                                                                                                        q := r;
                                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                                                                                                page_total := page_total+page_depth+width(q);
                                                                                                                                                                                                                                                                                                                                page_depth := 0

(*FIN INSERT 'Update the current page measurements with respect to the glue or kern specified by node~|p|'*)                                                                                                                                                                                                                    ;
                                                                                                                                                                                                                                                                                                                                contribute:
(*INSERT 'Make sure that |page_max_depth| is not exceeded'*)(*PASCAL module 1003*)
                                                                                                                                                                                                                                                                                                                                            If page_depth>page_max_depth Then
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                page_total := 
                                                                                                                                                                                                                                                                                                                                                              page_total+page_depth-page_max_depth;

                                                                                                                                                                                                                                                                                                                                                page_depth := page_max_depth;
                                                                                                                                                                                                                                                                                                                                              End;

(*FIN INSERT 'Make sure that |page_max_depth| is not exceeded'*)                                                                                                                                                                                                                                                                ;

(*INSERT 'Link node |p| into the current page and |goto done|'*)(*PASCAL module 998*)
                                                                                                                                                                                                                                                                                                                                link(page_tail) := p;
                                                                                                                                                                                                                                                                                                                                page_tail := p;
                                                                                                                                                                                                                                                                                                                                link(contrib_head) := link(p);
                                                                                                                                                                                                                                                                                                                                link(p) := null;
                                                                                                                                                                                                                                                                                                                                goto done

(*FIN INSERT 'Link node |p| into the current page and |goto done|'*)                                                                                                                                                                                                                                                            ;
                                                                                                                                                                                                                                                                                                                                done1:
(*INSERT 'Recycle node |p|'*)(*PASCAL module 999*)
                                                                                                                                                                                                                                                                                                                                       link(contrib_head) := link(p);
                                                                                                                                                                                                                                                                                                                                link(p) := null;
                                                                                                                                                                                                                                                                                                                                flush_node_list(p)

(*FIN INSERT 'Recycle node |p|'*)                                                                                                                                                                                                                                                                                               ;
                                                                                                                                                                                                                                                                                                                                done:

(*FIN INSERT 'Move node |p| to the current page; if it is time for a page break, put the nodes following the break back onto the contribution list, and |return| to the user''s output routine if there is one'*)                                                                                                               ;
                                                                                                                                                                                                                                                                                                                              Until link(contrib_head)=null;

(*INSERT 'Make the contribution list empty by setting its tail to |contrib_head|'*)(*PASCAL module 995*)
                                                                                                                                                                                                                                                                                                                            If nest_ptr=0 Then tail := contrib_head {vertical mode}
                                                                                                                                                                                                                                                                                                                            Else contrib_tail := contrib_head {other modes}

(*FIN INSERT 'Make the contribution list empty by setting its tail to |contrib_head|'*)                                                                                                                                                                                                                                     ;
                                                                                                                                                                                                                                                                                                                            exit:
                                                                                                                                                                                                                                                                                                                          End;


(***PASCAL module 1030***)
(*\4*)
(*INSERT 'Declare action procedures for use by |main_control|'*)(*PASCAL module 1043*)
                                                                                                                                                                                                                                                                                                                Procedure app_space; {handle spaces when |space_factor<>1000|}
                                                                                                                                                                                                                                                                                                                varq: pointer; {glue node}
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  If (space_factor>=2000)And(xspace_skip<>zero_glue) Then
                                                                                                                                                                                                                                                                                                                    q := new_param_glue(xspace_skip_code)
                                                                                                                                                                                                                                                                                                                  Else
                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                      If space_skip<>zero_glue Then main_p := space_skip
                                                                                                                                                                                                                                                                                                                      Else
(*INSERT 'Find the glue specification, |main_p|, for text spaces in the current font'*)(*PASCAL module 1042*)
                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                          main_p := font_glue[cur_font];
                                                                                                                                                                                                                                                                                                                          If main_p=null Then
                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                              main_p := new_spec(zero_glue);
                                                                                                                                                                                                                                                                                                                              main_k := param_base[cur_font]+space_code;
                                                                                                                                                                                                                                                                                                                              width(main_p) := font_info[main_k].sc; {that's |space(cur_font)|}
                                                                                                                                                                                                                                                                                                                              stretch(main_p) := font_info[main_k+1].sc; {and |space_stretch(cur_font)|}
                                                                                                                                                                                                                                                                                                                              shrink(main_p) := font_info[main_k+2].sc; {and |space_shrink(cur_font)|}
                                                                                                                                                                                                                                                                                                                              font_glue[cur_font] := main_p;
                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'Find the glue specification, |main_p|, for text spaces in the current font'*)                                                                                                                                                                                                                           ;
                                                                                                                                                                                                                                                                                                                      main_p := new_spec(main_p);

(*INSERT 'Modify the glue specification in |main_p| according to the space factor'*)(*PASCAL module 1044*)
                                                                                                                                                                                                                                                                                                                      If space_factor>=2000 Then width(main_p) := width(main_p)+extra_space(cur_font);
                                                                                                                                                                                                                                                                                                                      stretch(main_p) := xn_over_d(stretch(main_p),space_factor,1000);
                                                                                                                                                                                                                                                                                                                      shrink(main_p) := xn_over_d(shrink(main_p),1000,space_factor)

(*FIN INSERT 'Modify the glue specification in |main_p| according to the space factor'*)                                                                                                                                                                                                                              ;
                                                                                                                                                                                                                                                                                                                      q := new_glue(main_p);
                                                                                                                                                                                                                                                                                                                      glue_ref_count(main_p) := null;
                                                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                                                                  link(tail) := q;
                                                                                                                                                                                                                                                                                                                  tail := q;
                                                                                                                                                                                                                                                                                                                End;

(*PASCAL module 1047*)
                                                                                                                                                                                                                                                                                                                Procedure insert_dollar_sign;
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  back_input;
                                                                                                                                                                                                                                                                                                                  cur_tok := math_shift_token+'$';
                                                                                                                                                                                                                                                                                                                  print_err('Missing $ inserted');
(*Missing \$ inserted*)
                                                                                                                                                                                                                                                                                                                  help2('I''ve inserted a begin-math/end-math symbol since I think')

                                                                                                                                                                                                                                                                                                                  ('you left one out. Proceed, with fingers crossed.');
                                                                                                                                                                                                                                                                                                                  ins_error;
                                                                                                                                                                                                                                                                                                                End;

(*PASCAL module 1049*)
                                                                                                                                                                                                                                                                                                                Procedure you_cant;
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  print_err('You can''t use `');
(*You can''t use x in y mode*)
                                                                                                                                                                                                                                                                                                                  print_cmd_chr(cur_cmd,cur_chr);
                                                                                                                                                                                                                                                                                                                  print(''' in ');
                                                                                                                                                                                                                                                                                                                  print_mode(mode);
                                                                                                                                                                                                                                                                                                                End;

(*PASCAL module 1050*)
                                                                                                                                                                                                                                                                                                                Procedure report_illegal_case;
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  you_cant;
                                                                                                                                                                                                                                                                                                                  help4('Sorry, but I''m not programmed to handle this case;')

                                                                                                                                                                                                                                                                                                                  ('I''ll just pretend that you didn''t ask for it.')

                                                                                                                                                                                                                                                                                                                  ('If you''re in the wrong mode, you might be able to')

                                                                                                                                                                                                                                                                                                                  ('return to the right one by typing `I}'' or `I$'' or `I\par''.');

                                                                                                                                                                                                                                                                                                                  error;
                                                                                                                                                                                                                                                                                                                End;

(*PASCAL module 1051*)
                                                                                                                                                                                                                                                                                                                Function privileged: boolean;
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  If mode>0 Then privileged := true
                                                                                                                                                                                                                                                                                                                  Else
                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                      report_illegal_case;
                                                                                                                                                                                                                                                                                                                      privileged := false;
                                                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                                                                End;

(*PASCAL module 1054*)
                                                                                                                                                                                                                                                                                                                Function its_all_over: boolean; {do this when \.[\\end] or \.[\\dump] occurs}

                                                                                                                                                                                                                                                                                                                Label exit;
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  If privileged Then
                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                      If (page_head=page_tail)And(head=tail)And(dead_cycles=0) Then
                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                          its_all_over := true;
                                                                                                                                                                                                                                                                                                                          return;
                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                      back_input; {we will try to end again after ejecting residual material}
                                                                                                                                                                                                                                                                                                                      tail_append(new_null_box);
                                                                                                                                                                                                                                                                                                                      width(tail) := hsize;
                                                                                                                                                                                                                                                                                                                      tail_append(new_glue(fill_glue));
                                                                                                                                                                                                                                                                                                                      tail_append(new_penalty(-1073741824));

                                                                                                                                                                                                                                                                                                                      build_page; {append \.[\\hbox to \\hsize\[\]\\vfill\\penalty-'10000000000]}
                                                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                                                                  its_all_over := false;
                                                                                                                                                                                                                                                                                                                  exit:
                                                                                                                                                                                                                                                                                                                End;

(*PASCAL module 1060*)
                                                                                                                                                                                                                                                                                                                Procedure append_glue;

                                                                                                                                                                                                                                                                                                                Var s: small_number; {modifier of skip command}
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  s := cur_chr;
                                                                                                                                                                                                                                                                                                                  Case s Of 
                                                                                                                                                                                                                                                                                                                    fil_code: cur_val := fil_glue;
                                                                                                                                                                                                                                                                                                                    fill_code: cur_val := fill_glue;
                                                                                                                                                                                                                                                                                                                    ss_code: cur_val := ss_glue;
                                                                                                                                                                                                                                                                                                                    fil_neg_code: cur_val := fil_neg_glue;
                                                                                                                                                                                                                                                                                                                    skip_code: scan_glue(glue_val);
                                                                                                                                                                                                                                                                                                                    mskip_code: scan_glue(mu_val);
                                                                                                                                                                                                                                                                                                                  End; {now |cur_val| points to the glue specification}
                                                                                                                                                                                                                                                                                                                  tail_append(new_glue(cur_val));
                                                                                                                                                                                                                                                                                                                  If s>=skip_code Then
                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                      decr(glue_ref_count(cur_val));
                                                                                                                                                                                                                                                                                                                      If s>skip_code Then subtype(tail) := mu_glue;
                                                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                                                                End;

(*PASCAL module 1061*)
                                                                                                                                                                                                                                                                                                                Procedure append_kern;

                                                                                                                                                                                                                                                                                                                Var s: quarterword; {|subtype| of the kern node}
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  s := cur_chr;
                                                                                                                                                                                                                                                                                                                  scan_dimen(s=mu_glue,false,false);
                                                                                                                                                                                                                                                                                                                  tail_append(new_kern(cur_val));
                                                                                                                                                                                                                                                                                                                  subtype(tail) := s;
                                                                                                                                                                                                                                                                                                                End;

(*PASCAL module 1064*)
                                                                                                                                                                                                                                                                                                                Procedure off_save;

                                                                                                                                                                                                                                                                                                                Var p: pointer; {inserted token}
                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                  If cur_group=bottom_level Then

(*INSERT 'Drop current token and complain that it was unmatched'*)(*PASCAL module 1066*)
                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                      print_err('Extra ');
                                                                                                                                                                                                                                                                                                                      print_cmd_chr(cur_cmd,cur_chr);
(*Extra x*)
                                                                                                                                                                                                                                                                                                                      help1('Things are pretty mixed up, but I think the worst is over.');

                                                                                                                                                                                                                                                                                                                      error;
                                                                                                                                                                                                                                                                                                                    End

(*FIN INSERT 'Drop current token and complain that it was unmatched'*)
                                                                                                                                                                                                                                                                                                                  Else
                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                      back_input;
                                                                                                                                                                                                                                                                                                                      p := get_avail;
                                                                                                                                                                                                                                                                                                                      link(temp_head) := p;
                                                                                                                                                                                                                                                                                                                      print_err('Missing ');

(*INSERT 'Prepare to insert a token that matches |cur_group|, and print what it is'*)(*PASCAL module 1065*)
                                                                                                                                                                                                                                                                                                                      Case cur_group Of 
                                                                                                                                                                                                                                                                                                                        semi_simple_group:
                                                                                                                                                                                                                                                                                                                                           Begin
                                                                                                                                                                                                                                                                                                                                             info(p) := cs_token_flag+frozen_end_group;
                                                                                                                                                                                                                                                                                                                                             print_esc('endgroup');
(*Missing \\endgroup inserted*)
                                                                                                                                                                                                                                                                                                                                           End;
                                                                                                                                                                                                                                                                                                                        math_shift_group:
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            info(p) := math_shift_token+'$';
                                                                                                                                                                                                                                                                                                                                            print_char('$');
(*Missing \$ inserted*)
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                        math_left_group:
                                                                                                                                                                                                                                                                                                                                         Begin
                                                                                                                                                                                                                                                                                                                                           info(p) := cs_token_flag+frozen_right;
                                                                                                                                                                                                                                                                                                                                           link(p) := get_avail;
                                                                                                                                                                                                                                                                                                                                           p := link(p);
                                                                                                                                                                                                                                                                                                                                           info(p) := other_token+'.';
                                                                                                                                                                                                                                                                                                                                           print_esc('right.');
(*Missing \\right\hbox{.} inserted*)
(*null delimiter*)
                                                                                                                                                                                                                                                                                                                                         End;
                                                                                                                                                                                                                                                                                                                        othercases
                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                          info(p) := right_brace_token+'}';
                                                                                                                                                                                                                                                                                                                          print_char('}');
(*Missing \] 
inserted*)
                                                                                                                                                                                                                                                                                                                        End
                                                                                                                                                                                                                                                                                                                        endcases

(*FIN INSERT 'Prepare to insert a token that matches |cur_group|, and print what it is'*)                                                                                                                                                                                                                               ;
                                                                                                                                                                                                                                                                                                                        print(' inserted');
                                                                                                                                                                                                                                                                                                                        ins_list(link(temp_head));
                                                                                                                                                                                                                                                                                                                        help5('I''ve inserted something that you may have forgotten.')

                                                                                                                                                                                                                                                                                                                        ('(See the <inserted text> above.)')

                                                                                                                                                                                                                                                                                                                        ('With luck, this will get me unwedged. But if you')

                                                                                                                                                                                                                                                                                                                        ('really didn''t forget anything, try typing `2'' now; then')

                                                                                                                                                                                                                                                                                                                        ('my insertion and my current dilemma will both disappear.');
                                                                                                                                                                                                                                                                                                                        error;
                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1069*)
                                                                                                                                                                                                                                                                                                                  Procedure extra_right_brace;
                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                    print_err('Extra }, or forgotten ');
(*Extra \], 
or forgotten x*)
                                                                                                                                                                                                                                                                                                                    Case cur_group Of 
                                                                                                                                                                                                                                                                                                                      semi_simple_group: print_esc('endgroup');
                                                                                                                                                                                                                                                                                                                      math_shift_group: print_char('$');
                                                                                                                                                                                                                                                                                                                      math_left_group: print_esc('right');
                                                                                                                                                                                                                                                                                                                    End;

                                                                                                                                                                                                                                                                                                                    help5('I''ve deleted a group-closing symbol because it seems to be')

                                                                                                                                                                                                                                                                                                                    ('spurious, as in `$x}$''. But perhaps the } is legitimate and')

                                                                                                                                                                                                                                                                                                                    ('you forgot something else, as in `\hbox{$x}''. In such cases')

                                                                                                                                                                                                                                                                                                                    ('the way to recover is to insert both the forgotten and the')

                                                                                                                                                                                                                                                                                                                    ('deleted material, e.g., by typing `I$}''.');
                                                                                                                                                                                                                                                                                                                    error;
                                                                                                                                                                                                                                                                                                                    incr(align_state);
                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1070*)
                                                                                                                                                                                                                                                                                                                  Procedure normal_paragraph;
                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                    If looseness<>0 Then eq_word_define(int_base+looseness_code,0);
                                                                                                                                                                                                                                                                                                                    If hang_indent<>0 Then eq_word_define(dimen_base+hang_indent_code,0);
                                                                                                                                                                                                                                                                                                                    If hang_after<>1 Then eq_word_define(int_base+hang_after_code,1);
                                                                                                                                                                                                                                                                                                                    If par_shape_ptr<>null Then eq_define(par_shape_loc,shape_ref,null);
                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1075*)
                                                                                                                                                                                                                                                                                                                  Procedure box_end(box_context:integer);

                                                                                                                                                                                                                                                                                                                  Var p: pointer; {|ord_noad| for new box in math mode}
                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                    If box_context<box_flag Then
(*INSERT 'Append box |cur_box| to the current list, shifted by |box_context|'*)(*PASCAL module 1076*)
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        If cur_box<>null Then
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            shift_amount(cur_box) := box_context;
                                                                                                                                                                                                                                                                                                                            If abs(mode)=vmode Then
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                append_to_vlist(cur_box);
                                                                                                                                                                                                                                                                                                                                If adjust_tail<>null Then
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    If adjust_head<>adjust_tail Then
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        link(tail) := link(adjust_head);
                                                                                                                                                                                                                                                                                                                                        tail := adjust_tail;
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                    adjust_tail := null;
                                                                                                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                                                                                                If mode>0 Then build_page;
                                                                                                                                                                                                                                                                                                                              End
                                                                                                                                                                                                                                                                                                                            Else
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                If abs(mode)=hmode Then space_factor := 1000
                                                                                                                                                                                                                                                                                                                                Else
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    p := new_noad;
                                                                                                                                                                                                                                                                                                                                    math_type(nucleus(p)) := sub_box;
                                                                                                                                                                                                                                                                                                                                    info(nucleus(p)) := cur_box;
                                                                                                                                                                                                                                                                                                                                    cur_box := p;
                                                                                                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                                                                                                link(tail) := cur_box;
                                                                                                                                                                                                                                                                                                                                tail := cur_box;
                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Append box |cur_box| to the current list, shifted by |box_context|'*)
                                                                                                                                                                                                                                                                                                                    Else If box_context<ship_out_flag Then
(*INSERT 'Store \(c)|cur_box| in a box register'*)(*PASCAL module 1077*)
                                                                                                                                                                                                                                                                                                                           If box_context<box_flag+256 Then
                                                                                                                                                                                                                                                                                                                             eq_define(box_base-box_flag+box_context,box_ref,cur_box)
                                                                                                                                                                                                                                                                                                                    Else geq_define(box_base-box_flag-256+box_context,box_ref,cur_box)

(*FIN INSERT 'Store \(c)|cur_box| in a box register'*)
                                                                                                                                                                                                                                                                                                                    Else If cur_box<>null Then
                                                                                                                                                                                                                                                                                                                           If box_context>ship_out_flag Then
(*INSERT 'Append a new leader node that uses |cur_box|'*)(*PASCAL module 1078*)
                                                                                                                                                                                                                                                                                                                             Begin
(*INSERT 'Get the next non-blank non-relax non-call token'*)(*PASCAL module 404*)
                                                                                                                                                                                                                                                                                                                               Repeat
                                                                                                                                                                                                                                                                                                                                 get_x_token;
                                                                                                                                                                                                                                                                                                                               Until (cur_cmd<>spacer)And(cur_cmd<>relax)

(*FIN INSERT 'Get the next non-blank non-relax non-call token'*)                                                                                                                                                                                                                                                               ;
                                                                                                                                                                                                                                                                                                                               If ((cur_cmd=hskip)And(abs(mode)<>vmode))Or
                                                                                                                                                                                                                                                                                                                                  ((cur_cmd=vskip)And(abs(mode)=vmode)) Then
                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                   append_glue;
                                                                                                                                                                                                                                                                                                                                   subtype(tail) := box_context-(leader_flag-a_leaders);
                                                                                                                                                                                                                                                                                                                                   leader_ptr(tail) := cur_box;
                                                                                                                                                                                                                                                                                                                                 End
                                                                                                                                                                                                                                                                                                                               Else
                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                   print_err('Leaders not followed by proper glue');
(*Leaders not followed by...*)
                                                                                                                                                                                                                                                                                                                                   help3('You should say `\leaders <box or rule><hskip or vskip>''.')

                                                                                                                                                                                                                                                                                                                                   ('I found the <box or rule>, but there''s no suitable')

                                                                                                                                                                                                                                                                                                                                   ('<hskip or vskip>, so I''m ignoring these leaders.');
                                                                                                                                                                                                                                                                                                                                   back_error;
                                                                                                                                                                                                                                                                                                                                   flush_node_list(cur_box);
                                                                                                                                                                                                                                                                                                                                 End;
                                                                                                                                                                                                                                                                                                                             End

(*FIN INSERT 'Append a new leader node that uses |cur_box|'*)
                                                                                                                                                                                                                                                                                                                    Else ship_out(cur_box);
                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1079*)
                                                                                                                                                                                                                                                                                                                  Procedure begin_box(box_context:integer);

                                                                                                                                                                                                                                                                                                                  Label exit, done;

                                                                                                                                                                                                                                                                                                                  Var p,q: pointer; {run through the current list}
                                                                                                                                                                                                                                                                                                                    m: quarterword; {the length of a replacement list}
                                                                                                                                                                                                                                                                                                                    k: halfword; {0 or |vmode| or |hmode|}
                                                                                                                                                                                                                                                                                                                    n: eight_bits; {a box number}
                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                    Case cur_chr Of 
                                                                                                                                                                                                                                                                                                                      box_code:
                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                  scan_eight_bit_int;
                                                                                                                                                                                                                                                                                                                                  cur_box := box(cur_val);
                                                                                                                                                                                                                                                                                                                                  box(cur_val) := null; {the box becomes void, at the same level}
                                                                                                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                                                                                                      copy_code:
                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                   scan_eight_bit_int;
                                                                                                                                                                                                                                                                                                                                   cur_box := copy_node_list(box(cur_val));
                                                                                                                                                                                                                                                                                                                                 End;
                                                                                                                                                                                                                                                                                                                      last_box_code:
(*INSERT 'If the current list ends with a box node, delete it from the list and make |cur_box| point to it; otherwise set |cur_box:=null|'*)(*PASCAL module 1080*)
                                                                                                                                                                                                                                                                                                                                     Begin
                                                                                                                                                                                                                                                                                                                                       cur_box := null;
                                                                                                                                                                                                                                                                                                                                       If abs(mode)=mmode Then
                                                                                                                                                                                                                                                                                                                                         Begin
                                                                                                                                                                                                                                                                                                                                           you_cant;
                                                                                                                                                                                                                                                                                                                                           help1('Sorry; this \lastbox will be void.');
                                                                                                                                                                                                                                                                                                                                           error;
                                                                                                                                                                                                                                                                                                                                         End
                                                                                                                                                                                                                                                                                                                                       Else If (mode=vmode)And(head=tail) Then
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                you_cant;
                                                                                                                                                                                                                                                                                                                                                help2('Sorry...I usually can''t take things from the current page.')

                                                                                                                                                                                                                                                                                                                                                ('This \lastbox will therefore be void.');
                                                                                                                                                                                                                                                                                                                                                error;
                                                                                                                                                                                                                                                                                                                                              End
                                                                                                                                                                                                                                                                                                                                       Else
                                                                                                                                                                                                                                                                                                                                         Begin
                                                                                                                                                                                                                                                                                                                                           If Not is_char_node(tail) Then
                                                                                                                                                                                                                                                                                                                                             If (Type(tail)=hlist_node)Or(Type(tail)=vlist_node) Then

(*INSERT 'Remove the last box, unless it''s part of a discretionary'*)(*PASCAL module 1081*)
                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                 q := head;
                                                                                                                                                                                                                                                                                                                                                 Repeat
                                                                                                                                                                                                                                                                                                                                                   p := q;
                                                                                                                                                                                                                                                                                                                                                   If Not is_char_node(q) Then If Type(q)=disc_node Then
                                                                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                                                                   For m:=1 To replace_count(q) Do
                                                                                                                                                                                                                                                                                                                                                                                     p := link(p);
                                                                                                                                                                                                                                                                                                                                                                                   If p=tail Then goto done;
                                                                                                                                                                                                                                                                                                                                                                                 End;
                                                                                                                                                                                                                                                                                                                                                   q := link(p);
                                                                                                                                                                                                                                                                                                                                                 Until q=tail;
                                                                                                                                                                                                                                                                                                                                                 cur_box := tail;
                                                                                                                                                                                                                                                                                                                                                 shift_amount(cur_box) := 0;
                                                                                                                                                                                                                                                                                                                                                 tail := p;
                                                                                                                                                                                                                                                                                                                                                 link(p) := null;
                                                                                                                                                                                                                                                                                                                                                 done:
                                                                                                                                                                                                                                                                                                                                               End

(*FIN INSERT 'Remove the last box, unless it''s part of a discretionary'*)                                                                                                                                                                                                                                                                 ;
                                                                                                                                                                                                                                                                                                                                         End;
                                                                                                                                                                                                                                                                                                                                     End

(*FIN INSERT 'If the current list ends with a box node, delete it from the list and make |cur_box| point to it; otherwise set |cur_box:=null|'*)                                                                                                                                                                      ;
                                                                                                                                                                                                                                                                                                                      vsplit_code:
(*INSERT 'Split off part of a vertical box, make |cur_box| point to it'*)(*PASCAL module 1082*)
                                                                                                                                                                                                                                                                                                                                   Begin
                                                                                                                                                                                                                                                                                                                                     scan_eight_bit_int;
                                                                                                                                                                                                                                                                                                                                     n := cur_val;
                                                                                                                                                                                                                                                                                                                                     If Not scan_keyword('to') Then
(*to*)
                                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                                         print_err('Missing `to'' inserted');
(*Missing `to'' inserted*)
                                                                                                                                                                                                                                                                                                                                         help2('I''m working on `\vsplit<box number> to <dimen>'';')

                                                                                                                                                                                                                                                                                                                                         ('will look for the <dimen> next.');
                                                                                                                                                                                                                                                                                                                                         error;
                                                                                                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                                                                                                                     scan_normal_dimen;
                                                                                                                                                                                                                                                                                                                                     cur_box := vsplit(n,cur_val);
                                                                                                                                                                                                                                                                                                                                   End

(*FIN INSERT 'Split off part of a vertical box, make |cur_box| point to it'*)                                                                                                                                                                                                                                         ;
                                                                                                                                                                                                                                                                                                                      othercases
(*INSERT 'Initiate the construction of an hbox or vbox, then |return|'*)(*PASCAL module 1083*)
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        k := cur_chr-vtop_code;
                                                                                                                                                                                                                                                                                                                        saved(0) := box_context;
                                                                                                                                                                                                                                                                                                                        If k=hmode Then
                                                                                                                                                                                                                                                                                                                          If (box_context<box_flag)And(abs(mode)=vmode) Then
                                                                                                                                                                                                                                                                                                                            scan_spec(adjusted_hbox_group,true)
                                                                                                                                                                                                                                                                                                                        Else scan_spec(hbox_group,true)
                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            If k=vmode Then scan_spec(vbox_group,true)
                                                                                                                                                                                                                                                                                                                            Else
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                scan_spec(vtop_group,true);
                                                                                                                                                                                                                                                                                                                                k := vmode;
                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                                            normal_paragraph;
                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                        push_nest;
                                                                                                                                                                                                                                                                                                                        mode := -k;
                                                                                                                                                                                                                                                                                                                        If k=vmode Then
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            prev_depth := ignore_depth;
                                                                                                                                                                                                                                                                                                                            If every_vbox<>null Then begin_token_list(every_vbox,every_vbox_text);
                                                                                                                                                                                                                                                                                                                          End
                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            space_factor := 1000;
                                                                                                                                                                                                                                                                                                                            If every_hbox<>null Then begin_token_list(every_hbox,every_hbox_text);
                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                        return;
                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Initiate the construction of an hbox or vbox, then |return|'*)
                                                                                                                                                                                                                                                                                                                      endcases;

                                                                                                                                                                                                                                                                                                                      box_end(box_context); {in simple cases, we use the box immediately}
                                                                                                                                                                                                                                                                                                                      exit:
                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1084*)
                                                                                                                                                                                                                                                                                                                    Procedure scan_box(box_context:integer);
  {the next input should specify a box or perhaps a rule}
                                                                                                                                                                                                                                                                                                                    Begin
(*INSERT 'Get the next non-blank non-relax non-call token'*)(*PASCAL module 404*)
                                                                                                                                                                                                                                                                                                                      Repeat
                                                                                                                                                                                                                                                                                                                        get_x_token;
                                                                                                                                                                                                                                                                                                                      Until (cur_cmd<>spacer)And(cur_cmd<>relax)

(*FIN INSERT 'Get the next non-blank non-relax non-call token'*)                                                                                                                                                                                                                                                      ;
                                                                                                                                                                                                                                                                                                                      If cur_cmd=make_box Then begin_box(box_context)
                                                                                                                                                                                                                                                                                                                      Else If (box_context>=leader_flag)And((cur_cmd=hrule)Or(cur_cmd=vrule)) Then
                                                                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                                                                               cur_box := scan_rule_spec;
                                                                                                                                                                                                                                                                                                                               box_end(box_context);
                                                                                                                                                                                                                                                                                                                             End
                                                                                                                                                                                                                                                                                                                      Else
                                                                                                                                                                                                                                                                                                                        Begin
(**)                                                                                                                                                                                                                                                                                                                      ;

                                                                                                                                                                                                                                                                                                                          print_err('A <box> was supposed to be here');

(*A <box> was supposed to...*)
                                                                                                                                                                                                                                                                                                                          help3('I was expecting to see \hbox or \vbox or \copy or \box or')

                                                                                                                                                                                                                                                                                                                          ('something like that. So you might find something missing in')

                                                                                                                                                                                                                                                                                                                          ('your output. But keep trying; you can fix this later.');
                                                                                                                                                                                                                                                                                                                          back_error;
                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1086*)
                                                                                                                                                                                                                                                                                                                    Procedure package(c:small_number);

                                                                                                                                                                                                                                                                                                                    Var h: scaled; {height of box}
                                                                                                                                                                                                                                                                                                                      p: pointer; {first node in a box}
                                                                                                                                                                                                                                                                                                                      d: scaled; {max depth}
                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                      d := box_max_depth;
                                                                                                                                                                                                                                                                                                                      unsave;
                                                                                                                                                                                                                                                                                                                      save_ptr := save_ptr-3;
                                                                                                                                                                                                                                                                                                                      If mode=-hmode Then cur_box := hpack(link(head),saved(2),saved(1))
                                                                                                                                                                                                                                                                                                                      Else
                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                          cur_box := vpackage(link(head),saved(2),saved(1),d);
                                                                                                                                                                                                                                                                                                                          If c=vtop_code Then
(*INSERT 'Readjust the height and depth of |cur_box|, for \.{\\vtop}'*)(*PASCAL module 1087*)
                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                              h := 0;
                                                                                                                                                                                                                                                                                                                              p := list_ptr(cur_box);
                                                                                                                                                                                                                                                                                                                              If p<>null Then If Type(p)<=rule_node Then h := height(p);
                                                                                                                                                                                                                                                                                                                              depth(cur_box) := depth(cur_box)-h+height(cur_box);
                                                                                                                                                                                                                                                                                                                              height(cur_box) := h;
                                                                                                                                                                                                                                                                                                                            End

(*FIN INSERT 'Readjust the height and depth of |cur_box|, for \.{\\vtop}'*)                                                                                                                                                                                                                                               ;
                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                      pop_nest;
                                                                                                                                                                                                                                                                                                                      box_end(saved(0));
                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1091*)
                                                                                                                                                                                                                                                                                                                    Function norm_min(h:integer): small_number;
                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                      If h<=0 Then norm_min := 1
                                                                                                                                                                                                                                                                                                                      Else If h>=63 Then norm_min := 63
                                                                                                                                                                                                                                                                                                                      Else norm_min := h;
                                                                                                                                                                                                                                                                                                                    End;



                                                                                                                                                                                                                                                                                                                    Procedure new_graf(indented:boolean);
                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                      prev_graf := 0;
                                                                                                                                                                                                                                                                                                                      If (mode=vmode)Or(head<>tail) Then
                                                                                                                                                                                                                                                                                                                        tail_append(new_param_glue(par_skip_code));
                                                                                                                                                                                                                                                                                                                      push_nest;
                                                                                                                                                                                                                                                                                                                      mode := hmode;
                                                                                                                                                                                                                                                                                                                      space_factor := 1000;
                                                                                                                                                                                                                                                                                                                      set_cur_lang;
                                                                                                                                                                                                                                                                                                                      clang := cur_lang;
                                                                                                                                                                                                                                                                                                                      prev_graf := (norm_min(left_hyphen_min)*64+norm_min(right_hyphen_min))
                                                                                                                                                                                                                                                                                                                                   *65536+cur_lang;
                                                                                                                                                                                                                                                                                                                      If indented Then
                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                          tail := new_null_box;
                                                                                                                                                                                                                                                                                                                          link(head) := tail;
                                                                                                                                                                                                                                                                                                                          width(tail) := par_indent;
                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                      If every_par<>null Then begin_token_list(every_par,every_par_text);
                                                                                                                                                                                                                                                                                                                      If nest_ptr=1 Then build_page; {put |par_skip| glue on current page}
                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1093*)
                                                                                                                                                                                                                                                                                                                    Procedure indent_in_hmode;

                                                                                                                                                                                                                                                                                                                    Var p,q: pointer;
                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                      If cur_chr>0 Then {\.[\\indent]}
                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                          p := new_null_box;
                                                                                                                                                                                                                                                                                                                          width(p) := par_indent;
                                                                                                                                                                                                                                                                                                                          If abs(mode)=hmode Then space_factor := 1000
                                                                                                                                                                                                                                                                                                                          Else
                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                              q := new_noad;
                                                                                                                                                                                                                                                                                                                              math_type(nucleus(q)) := sub_box;
                                                                                                                                                                                                                                                                                                                              info(nucleus(q)) := p;
                                                                                                                                                                                                                                                                                                                              p := q;
                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                          tail_append(p);
                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1095*)
                                                                                                                                                                                                                                                                                                                    Procedure head_for_vmode;
                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                      If mode<0 Then
                                                                                                                                                                                                                                                                                                                        If cur_cmd<>hrule Then off_save
                                                                                                                                                                                                                                                                                                                      Else
                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                          print_err('You can''t use `');
                                                                                                                                                                                                                                                                                                                          print_esc('hrule');
                                                                                                                                                                                                                                                                                                                          print(''' here except with leaders');
(*You can''t use \\hrule...*)
                                                                                                                                                                                                                                                                                                                          help2('To put a horizontal rule in an hbox or an alignment,')

                                                                                                                                                                                                                                                                                                                          ('you should use \leaders or \hrulefill (see The TeXbook).');
                                                                                                                                                                                                                                                                                                                          error;
                                                                                                                                                                                                                                                                                                                        End
                                                                                                                                                                                                                                                                                                                      Else
                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                          back_input;
                                                                                                                                                                                                                                                                                                                          cur_tok := par_token;
                                                                                                                                                                                                                                                                                                                          back_input;
                                                                                                                                                                                                                                                                                                                          token_type := inserted;
                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1096*)
                                                                                                                                                                                                                                                                                                                    Procedure end_graf;
                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                      If mode=hmode Then
                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                          If head=tail Then pop_nest {null paragraphs are ignored}
                                                                                                                                                                                                                                                                                                                          Else line_break(widow_penalty);
                                                                                                                                                                                                                                                                                                                          normal_paragraph;
                                                                                                                                                                                                                                                                                                                          error_count := 0;
                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1099*)
                                                                                                                                                                                                                                                                                                                    Procedure begin_insert_or_adjust;
                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                      If cur_cmd=vadjust Then cur_val := 255
                                                                                                                                                                                                                                                                                                                      Else
                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                          scan_eight_bit_int;
                                                                                                                                                                                                                                                                                                                          If cur_val=255 Then
                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                              print_err('You can''t ');
                                                                                                                                                                                                                                                                                                                              print_esc('insert');
                                                                                                                                                                                                                                                                                                                              print_int(255);
(*You can''t \\insert255*)
                                                                                                                                                                                                                                                                                                                              help1('I''m changing to \insert0; box 255 is special.');
                                                                                                                                                                                                                                                                                                                              error;
                                                                                                                                                                                                                                                                                                                              cur_val := 0;
                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                      saved(0) := cur_val;
                                                                                                                                                                                                                                                                                                                      incr(save_ptr);
                                                                                                                                                                                                                                                                                                                      new_save_level(insert_group);
                                                                                                                                                                                                                                                                                                                      scan_left_brace;
                                                                                                                                                                                                                                                                                                                      normal_paragraph;
                                                                                                                                                                                                                                                                                                                      push_nest;
                                                                                                                                                                                                                                                                                                                      mode := -vmode;
                                                                                                                                                                                                                                                                                                                      prev_depth := ignore_depth;
                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1101*)
                                                                                                                                                                                                                                                                                                                    Procedure make_mark;

                                                                                                                                                                                                                                                                                                                    Var p: pointer; {new node}
                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                      p := scan_toks(false,true);
                                                                                                                                                                                                                                                                                                                      p := get_node(small_node_size);

                                                                                                                                                                                                                                                                                                                      Type (p) := mark_node;
                                                                                                                                                                                                                                                                                                                        subtype(p) := 0; {the |subtype| is not used}
                                                                                                                                                                                                                                                                                                                        mark_ptr(p) := def_ref;
                                                                                                                                                                                                                                                                                                                        link(tail) := p;
                                                                                                                                                                                                                                                                                                                        tail := p;
                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1103*)
                                                                                                                                                                                                                                                                                                                      Procedure append_penalty;
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        scan_int;
                                                                                                                                                                                                                                                                                                                        tail_append(new_penalty(cur_val));
                                                                                                                                                                                                                                                                                                                        If mode=vmode Then build_page;
                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1105*)
                                                                                                                                                                                                                                                                                                                      Procedure delete_last;

                                                                                                                                                                                                                                                                                                                      Label exit;

                                                                                                                                                                                                                                                                                                                      Var p,q: pointer; {run through the current list}
                                                                                                                                                                                                                                                                                                                        m: quarterword; {the length of a replacement list}
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        If (mode=vmode)And(tail=head) Then

(*INSERT 'Apologize for inability to do the operation now, unless \.{\\unskip} follows non-glue'*)(*PASCAL module 1106*)
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            If (cur_chr<>glue_node)Or(last_glue<>max_halfword) Then
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                you_cant;
                                                                                                                                                                                                                                                                                                                                help2('Sorry...I usually can''t take things from the current page.')

                                                                                                                                                                                                                                                                                                                                ('Try `I\vskip-\lastskip'' instead.');
                                                                                                                                                                                                                                                                                                                                If cur_chr=kern_node Then help_line[0] := 
                                                                                                                                                                                                                                                                                                                                                                          ('Try `I\kern-\lastkern'' instead.')
                                                                                                                                                                                                                                                                                                                                Else If cur_chr<>glue_node Then help_line[0] := 
                                                                                                                                                                                                                                                                                                                                                                                ('Perhaps you can make the output routine do it.');
                                                                                                                                                                                                                                                                                                                                error;
                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Apologize for inability to do the operation now, unless \.{\\unskip} follows non-glue'*)
                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            If Not is_char_node(tail) Then If Type(tail)=cur_chr Then
                                                                                                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                                                                                                               q := head;
                                                                                                                                                                                                                                                                                                                                                               Repeat
                                                                                                                                                                                                                                                                                                                                                                 p := q;
                                                                                                                                                                                                                                                                                                                                                                 If Not is_char_node(q) Then If Type(q)=disc_node Then
                                                                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                                                                 For m:=1 To replace_count(q) Do
                                                                                                                                                                                                                                                                                                                                                                                                   p := link(p);
                                                                                                                                                                                                                                                                                                                                                                                                 If p=tail Then return;
                                                                                                                                                                                                                                                                                                                                                                                               End;
                                                                                                                                                                                                                                                                                                                                                                 q := link(p);
                                                                                                                                                                                                                                                                                                                                                               Until q=tail;
                                                                                                                                                                                                                                                                                                                                                               link(p) := null;
                                                                                                                                                                                                                                                                                                                                                               flush_node_list(tail);
                                                                                                                                                                                                                                                                                                                                                               tail := p;
                                                                                                                                                                                                                                                                                                                                                             End;
                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                        exit:
                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1110*)
                                                                                                                                                                                                                                                                                                                      Procedure unpackage;

                                                                                                                                                                                                                                                                                                                      Label exit;

                                                                                                                                                                                                                                                                                                                      Var p: pointer; {the box}
                                                                                                                                                                                                                                                                                                                        c: box_code..copy_code; {should we copy?}
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        c := cur_chr;
                                                                                                                                                                                                                                                                                                                        scan_eight_bit_int;
                                                                                                                                                                                                                                                                                                                        p := box(cur_val);
                                                                                                                                                                                                                                                                                                                        If p=null Then return;
                                                                                                                                                                                                                                                                                                                        If (abs(mode)=mmode)Or((abs(mode)=vmode)And(Type(p)<>vlist_node))Or
                                                                                                                                                                                                                                                                                                                           ((abs(mode)=hmode)And(Type(p)<>hlist_node)) Then
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            print_err('Incompatible list can''t be unboxed');
(*Incompatible list...*)
                                                                                                                                                                                                                                                                                                                            help3('Sorry, Pandora. (You sneaky devil.)')

                                                                                                                                                                                                                                                                                                                            ('I refuse to unbox an \hbox in vertical mode or vice versa.')

                                                                                                                                                                                                                                                                                                                            ('And I can''t open any boxes in math mode.');

                                                                                                                                                                                                                                                                                                                            error;
                                                                                                                                                                                                                                                                                                                            return;
                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                        If c=copy_code Then link(tail) := copy_node_list(list_ptr(p))
                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            link(tail) := list_ptr(p);
                                                                                                                                                                                                                                                                                                                            box(cur_val) := null;
                                                                                                                                                                                                                                                                                                                            free_node(p,box_node_size);
                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                        While link(tail)<>null Do
                                                                                                                                                                                                                                                                                                                          tail := link(tail);
                                                                                                                                                                                                                                                                                                                        exit:
                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1113*)
                                                                                                                                                                                                                                                                                                                      Procedure append_italic_correction;

                                                                                                                                                                                                                                                                                                                      Label exit;

                                                                                                                                                                                                                                                                                                                      Var p: pointer; {|char_node| at the tail of the current list}
                                                                                                                                                                                                                                                                                                                        f: internal_font_number; {the font in the |char_node|}
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        If tail<>head Then
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            If is_char_node(tail) Then p := tail
                                                                                                                                                                                                                                                                                                                            Else If Type(tail)=ligature_node Then p := lig_char(tail)
                                                                                                                                                                                                                                                                                                                            Else return;
                                                                                                                                                                                                                                                                                                                            f := font(p);
                                                                                                                                                                                                                                                                                                                            tail_append(new_kern(char_italic(f)(char_info(f)(character(p)))));
                                                                                                                                                                                                                                                                                                                            subtype(tail) := explicit;
                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                        exit:
                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1117*)
                                                                                                                                                                                                                                                                                                                      Procedure append_discretionary;

                                                                                                                                                                                                                                                                                                                      Var c: integer; {hyphen character}
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        tail_append(new_disc);
                                                                                                                                                                                                                                                                                                                        If cur_chr=1 Then
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            c := hyphen_char[cur_font];
                                                                                                                                                                                                                                                                                                                            If c>=0 Then If c<256 Then pre_break(tail) := new_character(cur_font,c);
                                                                                                                                                                                                                                                                                                                          End
                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            incr(save_ptr);
                                                                                                                                                                                                                                                                                                                            saved(-1) := 0;
                                                                                                                                                                                                                                                                                                                            new_save_level(disc_group);
                                                                                                                                                                                                                                                                                                                            scan_left_brace;
                                                                                                                                                                                                                                                                                                                            push_nest;
                                                                                                                                                                                                                                                                                                                            mode := -hmode;
                                                                                                                                                                                                                                                                                                                            space_factor := 1000;
                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1119*)
                                                                                                                                                                                                                                                                                                                      Procedure build_discretionary;

                                                                                                                                                                                                                                                                                                                      Label done,exit;

                                                                                                                                                                                                                                                                                                                      Var p,q: pointer; {for link manipulation}
                                                                                                                                                                                                                                                                                                                        n: integer; {length of discretionary list}
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        unsave;

(*INSERT 'Prune the current list, if necessary, until it contains only |char_node|, |kern_node|, |hlist_node|, |vlist_node|, |rule_node|, and |ligature_node| items; set |n| to the length of the list, and set |q| to the list''s tail'*)(*PASCAL module 1121*)
                                                                                                                                                                                                                                                                                                                        q := head;
                                                                                                                                                                                                                                                                                                                        p := link(q);
                                                                                                                                                                                                                                                                                                                        n := 0;
                                                                                                                                                                                                                                                                                                                        While p<>null Do
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            If Not is_char_node(p) Then If Type(p)>rule_node Then
                                                                                                                                                                                                                                                                                                                                                          If Type(p)<>kern_node Then If Type(p)<>ligature_node Then
                                                                                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                                                                                         print_err('Improper discretionary list');
(*Improper discretionary list*)
                                                                                                                                                                                                                                                                                                                                                                                         help1('Discretionary lists must contain only boxes and kerns.');

                                                                                                                                                                                                                                                                                                                                                                                         error;
                                                                                                                                                                                                                                                                                                                                                                                         begin_diagnostic;
                                                                                                                                                                                                                                                                                                                                                                                         print_nl('The following discretionary sublist has been deleted:');
(*The following...deleted*)
                                                                                                                                                                                                                                                                                                                                                                                         show_box(p);
                                                                                                                                                                                                                                                                                                                                                                                         end_diagnostic(true);
                                                                                                                                                                                                                                                                                                                                                                                         flush_node_list(p);
                                                                                                                                                                                                                                                                                                                                                                                         link(q) := null;
                                                                                                                                                                                                                                                                                                                                                                                         goto done;
                                                                                                                                                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                                                                                                            q := p;
                                                                                                                                                                                                                                                                                                                            p := link(q);
                                                                                                                                                                                                                                                                                                                            incr(n);
                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                        done:

(*FIN INSERT 'Prune the current list, if necessary, until it contains only |char_node|, |kern_node|, |hlist_node|, |vlist_node|, |rule_node|, and |ligature_node| items; set |n| to the length of the list, and set |q| to the list''s tail'*)                                                                          ;
                                                                                                                                                                                                                                                                                                                        p := link(head);
                                                                                                                                                                                                                                                                                                                        pop_nest;
                                                                                                                                                                                                                                                                                                                        Case saved(-1) Of 
                                                                                                                                                                                                                                                                                                                          0: pre_break(tail) := p;
                                                                                                                                                                                                                                                                                                                          1: post_break(tail) := p;
                                                                                                                                                                                                                                                                                                                          2:
(*INSERT 'Attach list |p| to the current list, and record its length; then finish up and |return|'*)(*PASCAL module 1120*)
                                                                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                                                                               If (n>0)And(abs(mode)=mmode) Then
                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                   print_err('Illegal math ');
                                                                                                                                                                                                                                                                                                                                   print_esc('discretionary');
(*Illegal math \\disc...*)
                                                                                                                                                                                                                                                                                                                                   help2('Sorry: The third part of a discretionary break must be')

                                                                                                                                                                                                                                                                                                                                   ('empty, in math formulas. I had to delete your third part.');
                                                                                                                                                                                                                                                                                                                                   flush_node_list(p);
                                                                                                                                                                                                                                                                                                                                   n := 0;
                                                                                                                                                                                                                                                                                                                                   error;
                                                                                                                                                                                                                                                                                                                                 End
                                                                                                                                                                                                                                                                                                                               Else link(tail) := p;
                                                                                                                                                                                                                                                                                                                               If n<=max_quarterword Then replace_count(tail) := n
                                                                                                                                                                                                                                                                                                                               Else
                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                   print_err('Discretionary list is too long');
(*Discretionary list is too long*)
                                                                                                                                                                                                                                                                                                                                   help2('Wow---I never thought anybody would tweak me here.')

                                                                                                                                                                                                                                                                                                                                   ('You can''t seriously need such a huge discretionary list?');
                                                                                                                                                                                                                                                                                                                                   error;
                                                                                                                                                                                                                                                                                                                                 End;
                                                                                                                                                                                                                                                                                                                               If n>0 Then tail := q;
                                                                                                                                                                                                                                                                                                                               decr(save_ptr);
                                                                                                                                                                                                                                                                                                                               return;
                                                                                                                                                                                                                                                                                                                             End

(*FIN INSERT 'Attach list |p| to the current list, and record its length; then finish up and |return|'*)                                                                                                                                                                                                                  ;
                                                                                                                                                                                                                                                                                                                        End; {there are no other cases}
                                                                                                                                                                                                                                                                                                                        incr(saved(-1));
                                                                                                                                                                                                                                                                                                                        new_save_level(disc_group);
                                                                                                                                                                                                                                                                                                                        scan_left_brace;
                                                                                                                                                                                                                                                                                                                        push_nest;
                                                                                                                                                                                                                                                                                                                        mode := -hmode;
                                                                                                                                                                                                                                                                                                                        space_factor := 1000;
                                                                                                                                                                                                                                                                                                                        exit:
                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1123*)
                                                                                                                                                                                                                                                                                                                      Procedure make_accent;

                                                                                                                                                                                                                                                                                                                      Var s,t: real; {amount of slant}
                                                                                                                                                                                                                                                                                                                        p,q,r: pointer; {character, box, and kern nodes}
                                                                                                                                                                                                                                                                                                                        f: internal_font_number; {relevant font}
                                                                                                                                                                                                                                                                                                                        a,h,x,w,delta: scaled; {heights and widths, as explained above}
                                                                                                                                                                                                                                                                                                                        i: four_quarters; {character information}
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        scan_char_num;
                                                                                                                                                                                                                                                                                                                        f := cur_font;
                                                                                                                                                                                                                                                                                                                        p := new_character(f,cur_val);
                                                                                                                                                                                                                                                                                                                        If p<>null Then
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            x := x_height(f);
                                                                                                                                                                                                                                                                                                                            s := slant(f)/float_constant(65536);
(*real division*)
                                                                                                                                                                                                                                                                                                                            a := char_width(f)(char_info(f)(character(p)));

                                                                                                                                                                                                                                                                                                                            do_assignments;


(*INSERT 'Create a character node |q| for the next character, but set |q:=null| if problems arise'*)(*PASCAL module 1124*)
                                                                                                                                                                                                                                                                                                                            q := null;
                                                                                                                                                                                                                                                                                                                            f := cur_font;
                                                                                                                                                                                                                                                                                                                            If (cur_cmd=letter)Or(cur_cmd=other_char)Or(cur_cmd=char_given) Then
                                                                                                                                                                                                                                                                                                                              q := new_character(f,cur_chr)
                                                                                                                                                                                                                                                                                                                            Else If cur_cmd=char_num Then
                                                                                                                                                                                                                                                                                                                                   Begin
                                                                                                                                                                                                                                                                                                                                     scan_char_num;
                                                                                                                                                                                                                                                                                                                                     q := new_character(f,cur_val);
                                                                                                                                                                                                                                                                                                                                   End
                                                                                                                                                                                                                                                                                                                            Else back_input

(*FIN INSERT 'Create a character node |q| for the next character, but set |q:=null| if problems arise'*)                                                                                                                                                                                                                    ;
                                                                                                                                                                                                                                                                                                                            If q<>null Then
(*INSERT 'Append the accent with appropriate kerns, then set |p:=q|'*)(*PASCAL module 1125*)
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                t := slant(f)/float_constant(65536);
(*real division*)
                                                                                                                                                                                                                                                                                                                                i := char_info(f)(character(q));
                                                                                                                                                                                                                                                                                                                                w := char_width(f)(i);
                                                                                                                                                                                                                                                                                                                                h := char_height(f)(height_depth(i));
                                                                                                                                                                                                                                                                                                                                If h<>x Then {the accent must be shifted up or down}
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    p := hpack(p,natural);
                                                                                                                                                                                                                                                                                                                                    shift_amount(p) := x-h;
                                                                                                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                                                                                                delta := round((w-a)/float_constant(2)+h*t-x*s);
(*real multiplication*)
(*real addition*)
                                                                                                                                                                                                                                                                                                                                r := new_kern(delta);
                                                                                                                                                                                                                                                                                                                                subtype(r) := acc_kern;
                                                                                                                                                                                                                                                                                                                                link(tail) := r;
                                                                                                                                                                                                                                                                                                                                link(r) := p;
                                                                                                                                                                                                                                                                                                                                tail := new_kern(-a-delta);
                                                                                                                                                                                                                                                                                                                                subtype(tail) := acc_kern;
                                                                                                                                                                                                                                                                                                                                link(p) := tail;
                                                                                                                                                                                                                                                                                                                                p := q;
                                                                                                                                                                                                                                                                                                                              End

(*FIN INSERT 'Append the accent with appropriate kerns, then set |p:=q|'*)                                                                                                                                                                                                                                                  ;
                                                                                                                                                                                                                                                                                                                            link(tail) := p;
                                                                                                                                                                                                                                                                                                                            tail := p;
                                                                                                                                                                                                                                                                                                                            space_factor := 1000;
                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1127*)
                                                                                                                                                                                                                                                                                                                      Procedure align_error;
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        If abs(align_state)>2 Then

(*INSERT 'Express consternation over the fact that no alignment is in progress'*)(*PASCAL module 1128*)
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            print_err('Misplaced ');
                                                                                                                                                                                                                                                                                                                            print_cmd_chr(cur_cmd,cur_chr);
(*Misplaced \&*)
(*Misplaced \\span*)
(*Misplaced \\cr*)
                                                                                                                                                                                                                                                                                                                            If cur_tok=tab_token+'&' Then
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                help6('I can''t figure out why you would want to use a tab mark')

                                                                                                                                                                                                                                                                                                                                ('here. If you just want an ampersand, the remedy is')

                                                                                                                                                                                                                                                                                                                                ('simple: Just type `I\&'' now. But if some right brace')

                                                                                                                                                                                                                                                                                                                                ('up above has ended a previous alignment prematurely,')

                                                                                                                                                                                                                                                                                                                                ('you''re probably due for more error messages, and you')

                                                                                                                                                                                                                                                                                                                                ('might try typing `S'' now just to see what is salvageable.');
                                                                                                                                                                                                                                                                                                                              End
                                                                                                                                                                                                                                                                                                                            Else
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                help5('I can''t figure out why you would want to use a tab mark')

                                                                                                                                                                                                                                                                                                                                ('or \cr or \span just now. If something like a right brace')

                                                                                                                                                                                                                                                                                                                                ('up above has ended a previous alignment prematurely,')

                                                                                                                                                                                                                                                                                                                                ('you''re probably due for more error messages, and you')

                                                                                                                                                                                                                                                                                                                                ('might try typing `S'' now just to see what is salvageable.');
                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                                            error;
                                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Express consternation over the fact that no alignment is in progress'*)
                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            back_input;
                                                                                                                                                                                                                                                                                                                            If align_state<0 Then
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                print_err('Missing { inserted');
(*Missing \[
inserted*)
                                                                                                                                                                                                                                                                                                                                incr(align_state);
                                                                                                                                                                                                                                                                                                                                cur_tok := left_brace_token+'{';
                                                                                                                                                                                                                                                                                                                              End
                                                                                                                                                                                                                                                                                                                            Else
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                print_err('Missing } inserted');
(*Missing \] 
inserted*)
                                                                                                                                                                                                                                                                                                                                decr(align_state);
                                                                                                                                                                                                                                                                                                                                cur_tok := right_brace_token+'}';
                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                                            help3('I''ve put in what seems to be necessary to fix')

                                                                                                                                                                                                                                                                                                                            ('the current column of the current alignment.')

                                                                                                                                                                                                                                                                                                                            ('Try to go on, since this might almost work.');
                                                                                                                                                                                                                                                                                                                            ins_error;
                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1129*)
                                                                                                                                                                                                                                                                                                                      Procedure no_align_error;
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        print_err('Misplaced ');
                                                                                                                                                                                                                                                                                                                        print_esc('noalign');
(*Misplaced \\noalign*)
                                                                                                                                                                                                                                                                                                                        help2('I expect to see \noalign only after the \cr of')

                                                                                                                                                                                                                                                                                                                        ('an alignment. Proceed, and I''ll ignore this case.');
                                                                                                                                                                                                                                                                                                                        error;
                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                      Procedure omit_error;
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        print_err('Misplaced ');
                                                                                                                                                                                                                                                                                                                        print_esc('omit');
(*Misplaced \\omit*)
                                                                                                                                                                                                                                                                                                                        help2('I expect to see \omit only after tab marks or the \cr of')

                                                                                                                                                                                                                                                                                                                        ('an alignment. Proceed, and I''ll ignore this case.');
                                                                                                                                                                                                                                                                                                                        error;
                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1131*)
                                                                                                                                                                                                                                                                                                                      Procedure do_endv;
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        base_ptr := input_ptr;
                                                                                                                                                                                                                                                                                                                        input_stack[base_ptr] := cur_input;
                                                                                                                                                                                                                                                                                                                        While (input_stack[base_ptr].index_field<>v_template) And
                                                                                                                                                                                                                                                                                                                              (input_stack[base_ptr].loc_field=null) And
                                                                                                                                                                                                                                                                                                                              (input_stack[base_ptr].state_field=token_list) Do
                                                                                                                                                                                                                                                                                                                          decr(base_ptr);
                                                                                                                                                                                                                                                                                                                        If (input_stack[base_ptr].index_field<>v_template) Or
                                                                                                                                                                                                                                                                                                                           (input_stack[base_ptr].loc_field<>null) Or
                                                                                                                                                                                                                                                                                                                           (input_stack[base_ptr].state_field<>token_list) Then
                                                                                                                                                                                                                                                                                                                          fatal_error('(interwoven alignment preambles are not allowed)');
(*interwoven alignment preambles...*)
                                                                                                                                                                                                                                                                                                                        If cur_group=align_group Then
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            end_graf;
                                                                                                                                                                                                                                                                                                                            If fin_col Then fin_row;
                                                                                                                                                                                                                                                                                                                          End
                                                                                                                                                                                                                                                                                                                        Else off_save;
                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1135*)
                                                                                                                                                                                                                                                                                                                      Procedure cs_error;
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        print_err('Extra ');
                                                                                                                                                                                                                                                                                                                        print_esc('endcsname');
(*Extra \\endcsname*)
                                                                                                                                                                                                                                                                                                                        help1('I''m ignoring this, since I wasn''t doing a \csname.');
                                                                                                                                                                                                                                                                                                                        error;
                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1136*)
                                                                                                                                                                                                                                                                                                                      Procedure push_math(c:group_code);
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        push_nest;
                                                                                                                                                                                                                                                                                                                        mode := -mmode;
                                                                                                                                                                                                                                                                                                                        incompleat_noad := null;
                                                                                                                                                                                                                                                                                                                        new_save_level(c);
                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1138*)
                                                                                                                                                                                                                                                                                                                      Procedure init_math;

                                                                                                                                                                                                                                                                                                                      Label reswitch,found,not_found,done;

                                                                                                                                                                                                                                                                                                                      Var w: scaled; {new or partial |pre_display_size|}
                                                                                                                                                                                                                                                                                                                        l: scaled; {new |display_width|}
                                                                                                                                                                                                                                                                                                                        s: scaled; {new |display_indent|}
                                                                                                                                                                                                                                                                                                                        p: pointer; {current node when calculating |pre_display_size|}
                                                                                                                                                                                                                                                                                                                        q: pointer; {glue specification when calculating |pre_display_size|}
                                                                                                                                                                                                                                                                                                                        f: internal_font_number; {font in current |char_node|}
                                                                                                                                                                                                                                                                                                                        n: integer; {scope of paragraph shape specification}
                                                                                                                                                                                                                                                                                                                        v: scaled; {|w| plus possible glue amount}
                                                                                                                                                                                                                                                                                                                        d: scaled; {increment to |v|}
                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                        get_token; {|get_x_token| would fail on \.[\\ifmmode]\thinspace!}
                                                                                                                                                                                                                                                                                                                        If (cur_cmd=math_shift)And(mode>0) Then
(*INSERT 'Go into display math mode'*)(*PASCAL module 1145*)
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            If head=tail Then {`\.[\\noindent\$\$]' or `\.[\$\$[ ]\$\$]'}
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                pop_nest;
                                                                                                                                                                                                                                                                                                                                w := -max_dimen;
                                                                                                                                                                                                                                                                                                                              End
                                                                                                                                                                                                                                                                                                                            Else
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                line_break(display_widow_penalty);


(*INSERT 'Calculate the natural width, |w|, by which the characters of the final line extend to the right of the reference point, plus two ems; or set |w:=max_dimen| if the non-blank information on that line is affected by stretching or shrinking'*)(*PASCAL module 1146*)
                                                                                                                                                                                                                                                                                                                                v := shift_amount(just_box)+2*quad(cur_font);
                                                                                                                                                                                                                                                                                                                                w := -max_dimen;
                                                                                                                                                                                                                                                                                                                                p := list_ptr(just_box);
                                                                                                                                                                                                                                                                                                                                While p<>null Do
                                                                                                                                                                                                                                                                                                                                  Begin
(*INSERT 'Let |d| be the natural width of node |p|; if the node is ``visible,'''' |goto found|; if the node is glue that stretches or shrinks, set |v:=max_dimen|'*)(*PASCAL module 1147*)
                                                                                                                                                                                                                                                                                                                                    reswitch: If is_char_node(p) Then
                                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                                  f := font(p);
                                                                                                                                                                                                                                                                                                                                                  d := char_width(f)(char_info(f)(character(p)));
                                                                                                                                                                                                                                                                                                                                                  goto found;
                                                                                                                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                                                                                                                    Case Type(p) Of 
                                                                                                                                                                                                                                                                                                                                      hlist_node,vlist_node,rule_node:
                                                                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                                                                         d := width(p);
                                                                                                                                                                                                                                                                                                                                                                         goto found;
                                                                                                                                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                                                                                                                      ligature_node:
(*INSERT 'Make node |p| look like a |char_node| and |goto reswitch|'*)(*PASCAL module 652*)
                                                                                                                                                                                                                                                                                                                                                     Begin
                                                                                                                                                                                                                                                                                                                                                       mem[lig_trick] := mem[lig_char(p)];
                                                                                                                                                                                                                                                                                                                                                       link(lig_trick) := link(p);
                                                                                                                                                                                                                                                                                                                                                       p := lig_trick;
                                                                                                                                                                                                                                                                                                                                                       goto reswitch;
                                                                                                                                                                                                                                                                                                                                                     End

(*FIN INSERT 'Make node |p| look like a |char_node| and |goto reswitch|'*)                                                                                                                                                                                                                                                            ;
                                                                                                                                                                                                                                                                                                                                      kern_node,math_node: d := width(p);
                                                                                                                                                                                                                                                                                                                                      glue_node:
(*INSERT 'Let |d| be the natural width of this glue; if stretching or shrinking, set |v:=max_dimen|; |goto found| in the case of leaders'*)(*PASCAL module 1148*)
                                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                                   q := glue_ptr(p);
                                                                                                                                                                                                                                                                                                                                                   d := width(q);
                                                                                                                                                                                                                                                                                                                                                   If glue_sign(just_box)=stretching Then
                                                                                                                                                                                                                                                                                                                                                     Begin
                                                                                                                                                                                                                                                                                                                                                       If (glue_order(just_box)=stretch_order(q))And
                                                                                                                                                                                                                                                                                                                                                          (stretch(q)<>0) Then
                                                                                                                                                                                                                                                                                                                                                         v := max_dimen;
                                                                                                                                                                                                                                                                                                                                                     End
                                                                                                                                                                                                                                                                                                                                                   Else If glue_sign(just_box)=shrinking Then
                                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                                            If (glue_order(just_box)=shrink_order(q))And
                                                                                                                                                                                                                                                                                                                                                               (shrink(q)<>0) Then
                                                                                                                                                                                                                                                                                                                                                              v := max_dimen;
                                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                                   If subtype(p)>=a_leaders Then goto found;
                                                                                                                                                                                                                                                                                                                                                 End

(*FIN INSERT 'Let |d| be the natural width of this glue; if stretching or shrinking, set |v:=max_dimen|; |goto found| in the case of leaders'*)                                                                                                                                                                                       ;
                                                                                                                                                                                                                                                                                                                                      whatsit_node:
(*INSERT 'Let |d| be the width of the whatsit |p|'*)(*FIN INSERT 'Let |d| be the width of the whatsit |p|'*)                                                                                                                                                                                                                          ;
                                                                                                                                                                                                                                                                                                                                      othercases d := 0
                                                                                                                                                                                                                                                                                                                                                      endcases

(*FIN INSERT 'Let |d| be the natural width of node |p|; if the node is ``visible,'''' |goto found|; if the node is glue that stretches or shrinks, set |v:=max_dimen|'*)                                                                                                                                                              ;
                                                                                                                                                                                                                                                                                                                                      If v<max_dimen Then v := v+d;
                                                                                                                                                                                                                                                                                                                                      goto not_found;
                                                                                                                                                                                                                                                                                                                                      found: If v<max_dimen Then
                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                 v := v+d;
                                                                                                                                                                                                                                                                                                                                                 w := v;
                                                                                                                                                                                                                                                                                                                                               End
                                                                                                                                                                                                                                                                                                                                             Else
                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                 w := max_dimen;
                                                                                                                                                                                                                                                                                                                                                 goto done;
                                                                                                                                                                                                                                                                                                                                               End;
                                                                                                                                                                                                                                                                                                                                      not_found: p := link(p);
                                                                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                                                                                    done:

(*FIN INSERT 'Calculate the natural width, |w|, by which the characters of the final line extend to the right of the reference point, plus two ems; or set |w:=max_dimen| if the non-blank information on that line is affected by stretching or shrinking'*)                                                                       ;
                                                                                                                                                                                                                                                                                                                                  End;
{now we are in vertical mode, working on the list that will contain the display}

(*INSERT 'Calculate the length, |l|, and the shift amount, |s|, of the display lines'*)(*PASCAL module 1149*)
                                                                                                                                                                                                                                                                                                                                If par_shape_ptr=null Then
                                                                                                                                                                                                                                                                                                                                  If (hang_indent<>0)And
                                                                                                                                                                                                                                                                                                                                     (((hang_after>=0)And(prev_graf+2>hang_after))Or
                                                                                                                                                                                                                                                                                                                                     (prev_graf+1<-hang_after)) Then
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      l := hsize-abs(hang_indent);
                                                                                                                                                                                                                                                                                                                                      If hang_indent>0 Then s := hang_indentelse s:=0;
                                                                                                                                                                                                                                                                                                                                    End
                                                                                                                                                                                                                                                                                                                                Else
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    l := hsize;
                                                                                                                                                                                                                                                                                                                                    s := 0;
                                                                                                                                                                                                                                                                                                                                  End
                                                                                                                                                                                                                                                                                                                                Else
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    n := info(par_shape_ptr);
                                                                                                                                                                                                                                                                                                                                    If prev_graf+2>=n Then p := par_shape_ptr+2*n
                                                                                                                                                                                                                                                                                                                                    Else p := par_shape_ptr+2*(prev_graf+2);
                                                                                                                                                                                                                                                                                                                                    s := mem[p-1].sc;
                                                                                                                                                                                                                                                                                                                                    l := mem[p].sc;
                                                                                                                                                                                                                                                                                                                                  End

(*FIN INSERT 'Calculate the length, |l|, and the shift amount, |s|, of the display lines'*)                                                                                                                                                                                                                                     ;
                                                                                                                                                                                                                                                                                                                                push_math(math_shift_group);
                                                                                                                                                                                                                                                                                                                                mode := mmode;
                                                                                                                                                                                                                                                                                                                                eq_word_define(int_base+cur_fam_code,-1);

                                                                                                                                                                                                                                                                                                                                eq_word_define(dimen_base+pre_display_size_code,w);
                                                                                                                                                                                                                                                                                                                                eq_word_define(dimen_base+display_width_code,l);
                                                                                                                                                                                                                                                                                                                                eq_word_define(dimen_base+display_indent_code,s);
                                                                                                                                                                                                                                                                                                                                If every_display<>null Then begin_token_list(every_display,every_display_text);
                                                                                                                                                                                                                                                                                                                                If nest_ptr=1 Then build_page;
                                                                                                                                                                                                                                                                                                                              End

(*FIN INSERT 'Go into display math mode'*)
                                                                                                                                                                                                                                                                                                                            Else
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                back_input;
(*INSERT 'Go into ordinary math mode'*)(*PASCAL module 1139*)
                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                  push_math(math_shift_group);
                                                                                                                                                                                                                                                                                                                                  eq_word_define(int_base+cur_fam_code,-1);
                                                                                                                                                                                                                                                                                                                                  If every_math<>null Then begin_token_list(every_math,every_math_text);
                                                                                                                                                                                                                                                                                                                                End

(*FIN INSERT 'Go into ordinary math mode'*)                                                                                                                                                                                                                                                                                     ;
                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                                          End;

(*PASCAL module 1142*)
                                                                                                                                                                                                                                                                                                                        Procedure start_eq_no;
                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                          saved(0) := cur_chr;
                                                                                                                                                                                                                                                                                                                          incr(save_ptr);

(*INSERT 'Go into ordinary math mode'*)(*PASCAL module 1139*)
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            push_math(math_shift_group);
                                                                                                                                                                                                                                                                                                                            eq_word_define(int_base+cur_fam_code,-1);
                                                                                                                                                                                                                                                                                                                            If every_math<>null Then begin_token_list(every_math,every_math_text);
                                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Go into ordinary math mode'*)                                                                                                                                                                                                                                                                               ;
                                                                                                                                                                                                                                                                                                                        End;

(*PASCAL module 1151*)
                                                                                                                                                                                                                                                                                                                        Procedure scan_math(p:pointer);

                                                                                                                                                                                                                                                                                                                        Label restart,reswitch,exit;

                                                                                                                                                                                                                                                                                                                        Var c: integer; {math character code}
                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                          restart:
(*INSERT 'Get the next non-blank non-relax non-call token'*)(*PASCAL module 404*)
                                                                                                                                                                                                                                                                                                                                   Repeat
                                                                                                                                                                                                                                                                                                                                     get_x_token;
                                                                                                                                                                                                                                                                                                                                   Until (cur_cmd<>spacer)And(cur_cmd<>relax)

(*FIN INSERT 'Get the next non-blank non-relax non-call token'*)                                                                                                                                                                                                                                                          ;
                                                                                                                                                                                                                                                                                                                          reswitch: Case cur_cmd Of 
                                                                                                                                                                                                                                                                                                                                      letter,other_char,char_given:
                                                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                                                      c := ho(math_code(cur_chr));
                                                                                                                                                                                                                                                                                                                                                                      If c=32768 Then
                                                                                                                                                                                                                                                                                                                                                                        Begin
(*INSERT 'Treat |cur_chr| as an active character'*)(*PASCAL module 1152*)
                                                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                                                            cur_cs := cur_chr+active_base;
                                                                                                                                                                                                                                                                                                                                                                            cur_cmd := eq_type(cur_cs);
                                                                                                                                                                                                                                                                                                                                                                            cur_chr := equiv(cur_cs);
                                                                                                                                                                                                                                                                                                                                                                            x_token;
                                                                                                                                                                                                                                                                                                                                                                            back_input;
                                                                                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Treat |cur_chr| as an active character'*)                                                                                                                                                                                                                                                                                                                   ;
                                                                                                                                                                                                                                                                                                                                                                          goto restart;
                                                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                                                                                      char_num:
                                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                                  scan_char_num;
                                                                                                                                                                                                                                                                                                                                                  cur_chr := cur_val;
                                                                                                                                                                                                                                                                                                                                                  cur_cmd := char_given;
                                                                                                                                                                                                                                                                                                                                                  goto reswitch;
                                                                                                                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                                                                                                                      math_char_num:
                                                                                                                                                                                                                                                                                                                                                     Begin
                                                                                                                                                                                                                                                                                                                                                       scan_fifteen_bit_int;
                                                                                                                                                                                                                                                                                                                                                       c := cur_val;
                                                                                                                                                                                                                                                                                                                                                     End;
                                                                                                                                                                                                                                                                                                                                      math_given: c := cur_chr;
                                                                                                                                                                                                                                                                                                                                      delim_num:
                                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                                   scan_twenty_seven_bit_int;
                                                                                                                                                                                                                                                                                                                                                   c := cur_val Div 4096;
                                                                                                                                                                                                                                                                                                                                                 End;
                                                                                                                                                                                                                                                                                                                                      othercases
(*INSERT 'Scan a subformula enclosed in braces and |return|'*)(*PASCAL module 1153*)
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        back_input;
                                                                                                                                                                                                                                                                                                                                        scan_left_brace;

                                                                                                                                                                                                                                                                                                                                        saved(0) := p;
                                                                                                                                                                                                                                                                                                                                        incr(save_ptr);
                                                                                                                                                                                                                                                                                                                                        push_math(math_group);
                                                                                                                                                                                                                                                                                                                                        return;
                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Scan a subformula enclosed in braces and |return|'*)
                                                                                                                                                                                                                                                                                                                                      endcases;

                                                                                                                                                                                                                                                                                                                                      math_type(p) := math_char;
                                                                                                                                                                                                                                                                                                                                      character(p) := qi(c Mod 256);
                                                                                                                                                                                                                                                                                                                                      If (c>=var_code)And fam_in_range Then fam(p) := cur_fam
                                                                                                                                                                                                                                                                                                                                      Else fam(p) := (c Div 256) Mod 16;
                                                                                                                                                                                                                                                                                                                                      exit:
                                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1155*)
                                                                                                                                                                                                                                                                                                                          Procedure set_math_char(c:integer);

                                                                                                                                                                                                                                                                                                                          Var p: pointer; {the new noad}
                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                            If c>=32768 Then

(*INSERT 'Treat |cur_chr| as an active character'*)(*PASCAL module 1152*)
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                cur_cs := cur_chr+active_base;
                                                                                                                                                                                                                                                                                                                                cur_cmd := eq_type(cur_cs);
                                                                                                                                                                                                                                                                                                                                cur_chr := equiv(cur_cs);
                                                                                                                                                                                                                                                                                                                                x_token;
                                                                                                                                                                                                                                                                                                                                back_input;
                                                                                                                                                                                                                                                                                                                              End

(*FIN INSERT 'Treat |cur_chr| as an active character'*)
                                                                                                                                                                                                                                                                                                                            Else
                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                p := new_noad;
                                                                                                                                                                                                                                                                                                                                math_type(nucleus(p)) := math_char;
                                                                                                                                                                                                                                                                                                                                character(nucleus(p)) := qi(c Mod 256);
                                                                                                                                                                                                                                                                                                                                fam(nucleus(p)) := (c Div 256) Mod 16;
                                                                                                                                                                                                                                                                                                                                If c>=var_code Then
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    If fam_in_range Then fam(nucleus(p)) := cur_fam;

                                                                                                                                                                                                                                                                                                                                    Type (p) := ord_noad;
                                                                                                                                                                                                                                                                                                                                    End
                                                                                                                                                                                                                                                                                                                                    Else

                                                                                                                                                                                                                                                                                                                                      Type (p) := ord_noad+(c Div 4096);
                                                                                                                                                                                                                                                                                                                                        link(tail) := p;
                                                                                                                                                                                                                                                                                                                                        tail := p;
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1159*)
                                                                                                                                                                                                                                                                                                                                Procedure math_limit_switch;

                                                                                                                                                                                                                                                                                                                                Label exit;
                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                  If head<>tail Then If Type(tail)=op_noad Then
                                                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                                                         subtype(tail) := cur_chr;
                                                                                                                                                                                                                                                                                                                                                         return;
                                                                                                                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                                                                                                                  print_err('Limit controls must follow a math operator');
(*Limit controls must follow...*)
                                                                                                                                                                                                                                                                                                                                  help1('I''m ignoring this misplaced \limits or \nolimits command.');
                                                                                                                                                                                                                                                                                                                                  error;
                                                                                                                                                                                                                                                                                                                                  exit:
                                                                                                                                                                                                                                                                                                                                End;

(*PASCAL module 1160*)
                                                                                                                                                                                                                                                                                                                                Procedure scan_delimiter(p:pointer;r:boolean);
                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                  If r Then scan_twenty_seven_bit_int
                                                                                                                                                                                                                                                                                                                                  Else
                                                                                                                                                                                                                                                                                                                                    Begin
(*INSERT 'Get the next non-blank non-relax non-call token'*)(*PASCAL module 404*)
                                                                                                                                                                                                                                                                                                                                      Repeat
                                                                                                                                                                                                                                                                                                                                        get_x_token;
                                                                                                                                                                                                                                                                                                                                      Until (cur_cmd<>spacer)And(cur_cmd<>relax)

(*FIN INSERT 'Get the next non-blank non-relax non-call token'*)                                                                                                                                                                                                                                                                      ;
                                                                                                                                                                                                                                                                                                                                      Case cur_cmd Of 
                                                                                                                                                                                                                                                                                                                                        letter,other_char: cur_val := del_code(cur_chr);
                                                                                                                                                                                                                                                                                                                                        delim_num: scan_twenty_seven_bit_int;
                                                                                                                                                                                                                                                                                                                                        othercases cur_val := -1
                                                                                                                                                                                                                                                                                                                                                              endcases;
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                      If cur_val<0 Then
(*INSERT 'Report that an invalid delimiter code is being changed to null; set~|cur_val:=0|'*)(*PASCAL module 1161*)
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          print_err('Missing delimiter (. inserted)');
(*Missing delimiter...*)
                                                                                                                                                                                                                                                                                                                                          help6('I was expecting to see something like `('' or `\{'' or')

                                                                                                                                                                                                                                                                                                                                          ('`\}'' here. If you typed, e.g., `{'' instead of `\{'', you')

                                                                                                                                                                                                                                                                                                                                          ('should probably delete the `{'' by typing `1'' now, so that')

                                                                                                                                                                                                                                                                                                                                          ('braces don''t get unbalanced. Otherwise just proceed.')

                                                                                                                                                                                                                                                                                                                                          ('Acceptable delimiters are characters whose \delcode is')

                                                                                                                                                                                                                                                                                                                                          ('nonnegative, or you can use `\delimiter <delimiter code>''.');
                                                                                                                                                                                                                                                                                                                                          back_error;
                                                                                                                                                                                                                                                                                                                                          cur_val := 0;
                                                                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'Report that an invalid delimiter code is being changed to null; set~|cur_val:=0|'*)                                                                                                                                                                                                                                     ;
                                                                                                                                                                                                                                                                                                                                      small_fam(p) := (cur_val Div 1048576) Mod 16;
                                                                                                                                                                                                                                                                                                                                      small_char(p) := qi((cur_val Div 4096) Mod 256);
                                                                                                                                                                                                                                                                                                                                      large_fam(p) := (cur_val Div 256) Mod 16;
                                                                                                                                                                                                                                                                                                                                      large_char(p) := qi(cur_val Mod 256);
                                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1163*)
                                                                                                                                                                                                                                                                                                                                  Procedure math_radical;
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    tail_append(get_node(radical_noad_size));

                                                                                                                                                                                                                                                                                                                                    Type (tail) := radical_noad;
                                                                                                                                                                                                                                                                                                                                      subtype(tail) := normal;
                                                                                                                                                                                                                                                                                                                                      mem[nucleus(tail)].hh := empty_field;
                                                                                                                                                                                                                                                                                                                                      mem[subscr(tail)].hh := empty_field;
                                                                                                                                                                                                                                                                                                                                      mem[supscr(tail)].hh := empty_field;
                                                                                                                                                                                                                                                                                                                                      scan_delimiter(left_delimiter(tail),true);
                                                                                                                                                                                                                                                                                                                                      scan_math(nucleus(tail));
                                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1165*)
                                                                                                                                                                                                                                                                                                                                    Procedure math_ac;
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      If cur_cmd=accent Then

(*INSERT 'Complain that the user should have said \.{\\mathaccent}'*)(*PASCAL module 1166*)
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          print_err('Please use ');
                                                                                                                                                                                                                                                                                                                                          print_esc('mathaccent');
                                                                                                                                                                                                                                                                                                                                          print(' for accents in math mode');
(*Please use \\mathaccent...*)
                                                                                                                                                                                                                                                                                                                                          help2('I''m changing \accent to \mathaccent here; wish me luck.')

                                                                                                                                                                                                                                                                                                                                          ('(Accents are not the same in formulas as they are in text.)');
                                                                                                                                                                                                                                                                                                                                          error;
                                                                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'Complain that the user should have said \.{\\mathaccent}'*)                                                                                                                                                                                                                                                             ;
                                                                                                                                                                                                                                                                                                                                      tail_append(get_node(accent_noad_size));

                                                                                                                                                                                                                                                                                                                                      Type (tail) := accent_noad;
                                                                                                                                                                                                                                                                                                                                        subtype(tail) := normal;
                                                                                                                                                                                                                                                                                                                                        mem[nucleus(tail)].hh := empty_field;
                                                                                                                                                                                                                                                                                                                                        mem[subscr(tail)].hh := empty_field;
                                                                                                                                                                                                                                                                                                                                        mem[supscr(tail)].hh := empty_field;
                                                                                                                                                                                                                                                                                                                                        math_type(accent_chr(tail)) := math_char;
                                                                                                                                                                                                                                                                                                                                        scan_fifteen_bit_int;
                                                                                                                                                                                                                                                                                                                                        character(accent_chr(tail)) := qi(cur_val Mod 256);
                                                                                                                                                                                                                                                                                                                                        If (cur_val>=var_code)And fam_in_range Then fam(accent_chr(tail)) := cur_fam
                                                                                                                                                                                                                                                                                                                                        Else fam(accent_chr(tail)) := (cur_val Div 256) Mod 16;
                                                                                                                                                                                                                                                                                                                                        scan_math(nucleus(tail));
                                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1172*)
                                                                                                                                                                                                                                                                                                                                      Procedure append_choices;
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        tail_append(new_choice);
                                                                                                                                                                                                                                                                                                                                        incr(save_ptr);
                                                                                                                                                                                                                                                                                                                                        saved(-1) := 0;
                                                                                                                                                                                                                                                                                                                                        push_math(math_choice_group);
                                                                                                                                                                                                                                                                                                                                        scan_left_brace;
                                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1174*)
(*\4*)
(*INSERT 'Declare the function called |fin_mlist|'*)(*PASCAL module 1184*)
                                                                                                                                                                                                                                                                                                                                      Function fin_mlist(p:pointer): pointer;

                                                                                                                                                                                                                                                                                                                                      Var q: pointer; {the mlist to return}
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        If incompleat_noad<>null Then
(*INSERT 'Compleat the incompleat noad'*)(*PASCAL module 1185*)
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            math_type(denominator(incompleat_noad)) := sub_mlist;
                                                                                                                                                                                                                                                                                                                                            info(denominator(incompleat_noad)) := link(head);
                                                                                                                                                                                                                                                                                                                                            If p=null Then q := incompleat_noad
                                                                                                                                                                                                                                                                                                                                            Else
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                q := info(numerator(incompleat_noad));
                                                                                                                                                                                                                                                                                                                                                If Type(q)<>left_noad Then confusion('right');
(*this can''t happen right][\quad right*)
                                                                                                                                                                                                                                                                                                                                                info(numerator(incompleat_noad)) := link(q);
                                                                                                                                                                                                                                                                                                                                                link(q) := incompleat_noad;
                                                                                                                                                                                                                                                                                                                                                link(incompleat_noad) := p;
                                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Compleat the incompleat noad'*)
                                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            link(tail) := p;
                                                                                                                                                                                                                                                                                                                                            q := link(head);
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        pop_nest;
                                                                                                                                                                                                                                                                                                                                        fin_mlist := q;
                                                                                                                                                                                                                                                                                                                                      End;

(*FIN INSERT 'Declare the function called |fin_mlist|'*)(*@>;
*)(*@>;
*)
                                                                                                                                                                                                                                                                                                                                      Procedure build_choices;

                                                                                                                                                                                                                                                                                                                                      Label exit;

                                                                                                                                                                                                                                                                                                                                      Var p: pointer; {the current mlist}
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        unsave;
                                                                                                                                                                                                                                                                                                                                        p := fin_mlist(null);
                                                                                                                                                                                                                                                                                                                                        Case saved(-1) Of 
                                                                                                                                                                                                                                                                                                                                          0: display_mlist(tail) := p;
                                                                                                                                                                                                                                                                                                                                          1: text_mlist(tail) := p;
                                                                                                                                                                                                                                                                                                                                          2: script_mlist(tail) := p;
                                                                                                                                                                                                                                                                                                                                          3:
                                                                                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                                                                                               script_script_mlist(tail) := p;
                                                                                                                                                                                                                                                                                                                                               decr(save_ptr);
                                                                                                                                                                                                                                                                                                                                               return;
                                                                                                                                                                                                                                                                                                                                             End;
                                                                                                                                                                                                                                                                                                                                        End; {there are no other cases}
                                                                                                                                                                                                                                                                                                                                        incr(saved(-1));
                                                                                                                                                                                                                                                                                                                                        push_math(math_choice_group);
                                                                                                                                                                                                                                                                                                                                        scan_left_brace;
                                                                                                                                                                                                                                                                                                                                        exit:
                                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1176*)
                                                                                                                                                                                                                                                                                                                                      Procedure sub_sup;

                                                                                                                                                                                                                                                                                                                                      Var t: small_number; {type of previous sub/superscript}
                                                                                                                                                                                                                                                                                                                                        p: pointer; {field to be filled by |scan_math|}
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        t := empty;
                                                                                                                                                                                                                                                                                                                                        p := null;
                                                                                                                                                                                                                                                                                                                                        If tail<>head Then If scripts_allowed(tail) Then
                                                                                                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                                                                                                               p := supscr(tail)+cur_cmd-sup_mark; {|supscr| or |subscr|}
                                                                                                                                                                                                                                                                                                                                                               t := math_type(p);
                                                                                                                                                                                                                                                                                                                                                             End;
                                                                                                                                                                                                                                                                                                                                        If (p=null)Or(t<>empty) Then
(*INSERT 'Insert a dummy noad to be sub/superscripted'*)(*PASCAL module 1177*)
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            tail_append(new_noad);
                                                                                                                                                                                                                                                                                                                                            p := supscr(tail)+cur_cmd-sup_mark; {|supscr| or |subscr|}
                                                                                                                                                                                                                                                                                                                                            If t<>empty Then
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                If cur_cmd=sup_mark Then
                                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                                    print_err('Double superscript');
(*Double superscript*)
                                                                                                                                                                                                                                                                                                                                                help1('I treat `x^1^2'' essentially like `x^1{}^2''.');
                                                                                                                                                                                                                                                                                                                                              End
                                                                                                                                                                                                                                                                                                                                            Else
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                print_err('Double subscript');
(*Double subscript*)
                                                                                                                                                                                                                                                                                                                                                help1('I treat `x_1_2'' essentially like `x_1{}_2''.');
                                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                                                            error;
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Insert a dummy noad to be sub/superscripted'*)                                                                                                                                                                                                                                                                          ;
                                                                                                                                                                                                                                                                                                                                      scan_math(p);
                                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1181*)
                                                                                                                                                                                                                                                                                                                                    Procedure math_fraction;

                                                                                                                                                                                                                                                                                                                                    Var c: small_number; {the type of generalized fraction we are scanning}
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      c := cur_chr;
                                                                                                                                                                                                                                                                                                                                      If incompleat_noad<>null Then

(*INSERT 'Ignore the fraction operation and complain about this ambiguous case'*)(*PASCAL module 1183*)
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          If c>=delimited_code Then
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              scan_delimiter(garbage,false);
                                                                                                                                                                                                                                                                                                                                              scan_delimiter(garbage,false);
                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                          If c Mod delimited_code=above_code Then scan_normal_dimen;
                                                                                                                                                                                                                                                                                                                                          print_err('Ambiguous; you need another { and }');
(*Ambiguous...*)
                                                                                                                                                                                                                                                                                                                                          help3('I''m ignoring this fraction specification, since I don''t')

                                                                                                                                                                                                                                                                                                                                          ('know whether a construction like `x \over y \over z''')

                                                                                                                                                                                                                                                                                                                                          ('means `{x \over y} \over z'' or `x \over {y \over z}''.');
                                                                                                                                                                                                                                                                                                                                          error;
                                                                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'Ignore the fraction operation and complain about this ambiguous case'*)
                                                                                                                                                                                                                                                                                                                                      Else
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          incompleat_noad := get_node(fraction_noad_size);

                                                                                                                                                                                                                                                                                                                                          Type (incompleat_noad) := fraction_noad;
                                                                                                                                                                                                                                                                                                                                            subtype(incompleat_noad) := normal;
                                                                                                                                                                                                                                                                                                                                            math_type(numerator(incompleat_noad)) := sub_mlist;
                                                                                                                                                                                                                                                                                                                                            info(numerator(incompleat_noad)) := link(head);
                                                                                                                                                                                                                                                                                                                                            mem[denominator(incompleat_noad)].hh := empty_field;
                                                                                                                                                                                                                                                                                                                                            mem[left_delimiter(incompleat_noad)].qqqq := null_delimiter;
                                                                                                                                                                                                                                                                                                                                            mem[right_delimiter(incompleat_noad)].qqqq := null_delimiter;

                                                                                                                                                                                                                                                                                                                                            link(head) := null;
                                                                                                                                                                                                                                                                                                                                            tail := head;

(*INSERT 'Use code |c| to distinguish between generalized fractions'*)(*PASCAL module 1182*)
                                                                                                                                                                                                                                                                                                                                            If c>=delimited_code Then
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                scan_delimiter(left_delimiter(incompleat_noad),false);
                                                                                                                                                                                                                                                                                                                                                scan_delimiter(right_delimiter(incompleat_noad),false);
                                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                                                            Case c Mod delimited_code Of 
                                                                                                                                                                                                                                                                                                                                              above_code:
                                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                                            scan_normal_dimen;
                                                                                                                                                                                                                                                                                                                                                            thickness(incompleat_noad) := cur_val;
                                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                              over_code: thickness(incompleat_noad) := default_code;
                                                                                                                                                                                                                                                                                                                                              atop_code: thickness(incompleat_noad) := 0;
                                                                                                                                                                                                                                                                                                                                            End {there are no other cases}

(*FIN INSERT 'Use code |c| to distinguish between generalized fractions'*)                                                                                                                                                                                                                                                                  ;
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        End;

(*PASCAL module 1191*)
                                                                                                                                                                                                                                                                                                                                      Procedure math_left_right;

                                                                                                                                                                                                                                                                                                                                      Var t: small_number; {|left_noad| or |right_noad|}
                                                                                                                                                                                                                                                                                                                                        p: pointer; {new noad}
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        t := cur_chr;
                                                                                                                                                                                                                                                                                                                                        If (t=right_noad)And(cur_group<>math_left_group) Then

(*INSERT 'Try to recover from mismatched \.{\\right}'*)(*PASCAL module 1192*)
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            If cur_group=math_shift_group Then
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                scan_delimiter(garbage,false);
                                                                                                                                                                                                                                                                                                                                                print_err('Extra ');
                                                                                                                                                                                                                                                                                                                                                print_esc('right');
(*Extra \\right.*)
                                                                                                                                                                                                                                                                                                                                                help1('I''m ignoring a \right that had no matching \left.');
                                                                                                                                                                                                                                                                                                                                                error;
                                                                                                                                                                                                                                                                                                                                              End
                                                                                                                                                                                                                                                                                                                                            Else off_save;
                                                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Try to recover from mismatched \.{\\right}'*)
                                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            p := new_noad;

                                                                                                                                                                                                                                                                                                                                            Type (p) := t;
                                                                                                                                                                                                                                                                                                                                              scan_delimiter(delimiter(p),false);
                                                                                                                                                                                                                                                                                                                                              If t=left_noad Then
                                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                                  push_math(math_left_group);
                                                                                                                                                                                                                                                                                                                                                  link(head) := p;
                                                                                                                                                                                                                                                                                                                                                  tail := p;
                                                                                                                                                                                                                                                                                                                                                End
                                                                                                                                                                                                                                                                                                                                              Else
                                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                                  p := fin_mlist(p);
                                                                                                                                                                                                                                                                                                                                                  unsave; {end of |math_left_group|}
                                                                                                                                                                                                                                                                                                                                                  tail_append(new_noad);

                                                                                                                                                                                                                                                                                                                                                  Type (tail) := inner_noad;
                                                                                                                                                                                                                                                                                                                                                  math_type(nucleus(tail)) := sub_mlist;
                                                                                                                                                                                                                                                                                                                                                  info(nucleus(tail)) := p;
                                                                                                                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                          End;

(*PASCAL module 1194*)
                                                                                                                                                                                                                                                                                                                                        Procedure after_math;

                                                                                                                                                                                                                                                                                                                                        Var l: boolean; {`\.[\\leqno]' instead of `\.[\\eqno]'}
                                                                                                                                                                                                                                                                                                                                          danger: boolean; {not enough symbol fonts are present}
                                                                                                                                                                                                                                                                                                                                          m: integer; {|mmode| or |-mmode|}
                                                                                                                                                                                                                                                                                                                                          p: pointer; {the formula}
                                                                                                                                                                                                                                                                                                                                          a: pointer; {box containing equation number}

(*INSERT 'Local variables for finishing a displayed formula'*)(*PASCAL module 1198*)
                                                                                                                                                                                                                                                                                                                                          b: pointer; {box containing the equation}
                                                                                                                                                                                                                                                                                                                                          w: scaled; {width of the equation}
                                                                                                                                                                                                                                                                                                                                          z: scaled; {width of the line}
                                                                                                                                                                                                                                                                                                                                          e: scaled; {width of equation number}
                                                                                                                                                                                                                                                                                                                                          q: scaled; {width of equation number plus space to separate from equation}
                                                                                                                                                                                                                                                                                                                                          d: scaled; {displacement of equation in the line}
                                                                                                                                                                                                                                                                                                                                          s: scaled; {move the line right this much}
                                                                                                                                                                                                                                                                                                                                          g1,g2: small_number; {glue parameter codes for before and after}
                                                                                                                                                                                                                                                                                                                                          r: pointer; {kern node used to position the display}
                                                                                                                                                                                                                                                                                                                                          t: pointer; {tail of adjustment list}

(*FIN INSERT 'Local variables for finishing a displayed formula'*)                                                                                                                                                                                                                                                                        ;
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          danger := false;

(*INSERT 'Check that the necessary fonts for math symbols are present; if not, flush the current math lists and set |danger:=true|'*)(*PASCAL module 1195*)
                                                                                                                                                                                                                                                                                                                                          If (font_params[fam_fnt(2+text_size)]<total_mathsy_params)Or
                                                                                                                                                                                                                                                                                                                                             (font_params[fam_fnt(2+script_size)]<total_mathsy_params)Or
                                                                                                                                                                                                                                                                                                                                             (font_params[fam_fnt(2+script_script_size)]<total_mathsy_params) Then
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              print_err('Math formula deleted: Insufficient symbol fonts');

(*Math formula deleted...*)
                                                                                                                                                                                                                                                                                                                                              help3('Sorry, but I can''t typeset math unless \textfont 2')

                                                                                                                                                                                                                                                                                                                                              ('and \scriptfont 2 and \scriptscriptfont 2 have all')

                                                                                                                                                                                                                                                                                                                                              ('the \fontdimen values needed in math symbol fonts.');
                                                                                                                                                                                                                                                                                                                                              error;
                                                                                                                                                                                                                                                                                                                                              flush_math;
                                                                                                                                                                                                                                                                                                                                              danger := true;
                                                                                                                                                                                                                                                                                                                                            End
                                                                                                                                                                                                                                                                                                                                          Else If (font_params[fam_fnt(3+text_size)]<total_mathex_params)Or
                                                                                                                                                                                                                                                                                                                                                  (font_params[fam_fnt(3+script_size)]<total_mathex_params)Or
                                                                                                                                                                                                                                                                                                                                                  (font_params[fam_fnt(3+script_script_size)]<total_mathex_params) Then
                                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                                   print_err('Math formula deleted: Insufficient extension fonts');

                                                                                                                                                                                                                                                                                                                                                   help3('Sorry, but I can''t typeset math unless \textfont 3')

                                                                                                                                                                                                                                                                                                                                                   ('and \scriptfont 3 and \scriptscriptfont 3 have all')

                                                                                                                                                                                                                                                                                                                                                   ('the \fontdimen values needed in math extension fonts.');
                                                                                                                                                                                                                                                                                                                                                   error;
                                                                                                                                                                                                                                                                                                                                                   flush_math;
                                                                                                                                                                                                                                                                                                                                                   danger := true;
                                                                                                                                                                                                                                                                                                                                                 End

(*FIN INSERT 'Check that the necessary fonts for math symbols are present; if not, flush the current math lists and set |danger:=true|'*)                                                                                                                                                                                                 ;
                                                                                                                                                                                                                                                                                                                                          m := mode;
                                                                                                                                                                                                                                                                                                                                          l := false;
                                                                                                                                                                                                                                                                                                                                          p := fin_mlist(null); {this pops the nest}
                                                                                                                                                                                                                                                                                                                                          If mode=-m Then {end of equation number}
                                                                                                                                                                                                                                                                                                                                            Begin
(*INSERT 'Check that another \.\$ follows'*)(*PASCAL module 1197*)
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                get_x_token;
                                                                                                                                                                                                                                                                                                                                                If cur_cmd<>math_shift Then
                                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                                    print_err('Display math should end with $$');
(*Display math...with \$\$*)
                                                                                                                                                                                                                                                                                                                                                help2('The `$'' that I just saw supposedly matches a previous `$$''.')

                                                                                                                                                                                                                                                                                                                                                ('So I shall assume that you typed `$$'' both times.');
                                                                                                                                                                                                                                                                                                                                                back_error;
                                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                                                            End

(*FIN INSERT 'Check that another \.\$ follows'*)                                                                                                                                                                                                                                                                                          ;
                                                                                                                                                                                                                                                                                                                                          cur_mlist := p;
                                                                                                                                                                                                                                                                                                                                          cur_style := text_style;
                                                                                                                                                                                                                                                                                                                                          mlist_penalties := false;
                                                                                                                                                                                                                                                                                                                                          mlist_to_hlist;
                                                                                                                                                                                                                                                                                                                                          a := hpack(link(temp_head),natural);
                                                                                                                                                                                                                                                                                                                                          unsave;
                                                                                                                                                                                                                                                                                                                                          decr(save_ptr); {now |cur_group=math_shift_group|}
                                                                                                                                                                                                                                                                                                                                          If saved(0)=1 Then l := true;
                                                                                                                                                                                                                                                                                                                                          danger := false;

(*INSERT 'Check that the necessary fonts for math symbols are present; if not, flush the current math lists and set |danger:=true|'*)(*PASCAL module 1195*)
                                                                                                                                                                                                                                                                                                                                          If (font_params[fam_fnt(2+text_size)]<total_mathsy_params)Or
                                                                                                                                                                                                                                                                                                                                             (font_params[fam_fnt(2+script_size)]<total_mathsy_params)Or
                                                                                                                                                                                                                                                                                                                                             (font_params[fam_fnt(2+script_script_size)]<total_mathsy_params) Then
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              print_err('Math formula deleted: Insufficient symbol fonts');

(*Math formula deleted...*)
                                                                                                                                                                                                                                                                                                                                              help3('Sorry, but I can''t typeset math unless \textfont 2')

                                                                                                                                                                                                                                                                                                                                              ('and \scriptfont 2 and \scriptscriptfont 2 have all')

                                                                                                                                                                                                                                                                                                                                              ('the \fontdimen values needed in math symbol fonts.');
                                                                                                                                                                                                                                                                                                                                              error;
                                                                                                                                                                                                                                                                                                                                              flush_math;
                                                                                                                                                                                                                                                                                                                                              danger := true;
                                                                                                                                                                                                                                                                                                                                            End
                                                                                                                                                                                                                                                                                                                                          Else If (font_params[fam_fnt(3+text_size)]<total_mathex_params)Or
                                                                                                                                                                                                                                                                                                                                                  (font_params[fam_fnt(3+script_size)]<total_mathex_params)Or
                                                                                                                                                                                                                                                                                                                                                  (font_params[fam_fnt(3+script_script_size)]<total_mathex_params) Then
                                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                                   print_err('Math formula deleted: Insufficient extension fonts');

                                                                                                                                                                                                                                                                                                                                                   help3('Sorry, but I can''t typeset math unless \textfont 3')

                                                                                                                                                                                                                                                                                                                                                   ('and \scriptfont 3 and \scriptscriptfont 3 have all')

                                                                                                                                                                                                                                                                                                                                                   ('the \fontdimen values needed in math extension fonts.');
                                                                                                                                                                                                                                                                                                                                                   error;
                                                                                                                                                                                                                                                                                                                                                   flush_math;
                                                                                                                                                                                                                                                                                                                                                   danger := true;
                                                                                                                                                                                                                                                                                                                                                 End

(*FIN INSERT 'Check that the necessary fonts for math symbols are present; if not, flush the current math lists and set |danger:=true|'*)                                                                                                                                                                                                 ;
                                                                                                                                                                                                                                                                                                                                          m := mode;
                                                                                                                                                                                                                                                                                                                                          p := fin_mlist(null);
                                                                                                                                                                                                                                                                                                                                        End
                                                                                                                                                                                                                                                                                                                                        Else a := null;
                                                                                                                                                                                                                                                                                                                                        If m<0 Then
(*INSERT 'Finish math in text'*)(*PASCAL module 1196*)
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            tail_append(new_math(math_surround,before));
                                                                                                                                                                                                                                                                                                                                            cur_mlist := p;
                                                                                                                                                                                                                                                                                                                                            cur_style := text_style;
                                                                                                                                                                                                                                                                                                                                            mlist_penalties := (mode>0);
                                                                                                                                                                                                                                                                                                                                            mlist_to_hlist;
                                                                                                                                                                                                                                                                                                                                            link(tail) := link(temp_head);
                                                                                                                                                                                                                                                                                                                                            While link(tail)<>null Do
                                                                                                                                                                                                                                                                                                                                              tail := link(tail);
                                                                                                                                                                                                                                                                                                                                            tail_append(new_math(math_surround,after));
                                                                                                                                                                                                                                                                                                                                            space_factor := 1000;
                                                                                                                                                                                                                                                                                                                                            unsave;
                                                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Finish math in text'*)
                                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            If a=null Then
(*INSERT 'Check that another \.\$ follows'*)(*PASCAL module 1197*)
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                get_x_token;
                                                                                                                                                                                                                                                                                                                                                If cur_cmd<>math_shift Then
                                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                                    print_err('Display math should end with $$');
(*Display math...with \$\$*)
                                                                                                                                                                                                                                                                                                                                                help2('The `$'' that I just saw supposedly matches a previous `$$''.')

                                                                                                                                                                                                                                                                                                                                                ('So I shall assume that you typed `$$'' both times.');
                                                                                                                                                                                                                                                                                                                                                back_error;
                                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Check that another \.\$ follows'*)                                                                                                                                                                                                                                                                                        ;

(*INSERT 'Finish displayed math'*)(*PASCAL module 1199*)
                                                                                                                                                                                                                                                                                                                                        cur_mlist := p;
                                                                                                                                                                                                                                                                                                                                        cur_style := display_style;
                                                                                                                                                                                                                                                                                                                                        mlist_penalties := false;
                                                                                                                                                                                                                                                                                                                                        mlist_to_hlist;
                                                                                                                                                                                                                                                                                                                                        p := link(temp_head);

                                                                                                                                                                                                                                                                                                                                        adjust_tail := adjust_head;
                                                                                                                                                                                                                                                                                                                                        b := hpack(p,natural);
                                                                                                                                                                                                                                                                                                                                        p := list_ptr(b);
                                                                                                                                                                                                                                                                                                                                        t := adjust_tail;
                                                                                                                                                                                                                                                                                                                                        adjust_tail := null;

                                                                                                                                                                                                                                                                                                                                        w := width(b);
                                                                                                                                                                                                                                                                                                                                        z := display_width;
                                                                                                                                                                                                                                                                                                                                        s := display_indent;
                                                                                                                                                                                                                                                                                                                                        If (a=null)Or danger Then
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            e := 0;
                                                                                                                                                                                                                                                                                                                                            q := 0;
                                                                                                                                                                                                                                                                                                                                          End
                                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            e := width(a);
                                                                                                                                                                                                                                                                                                                                            q := e+math_quad(text_size);
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        If w+q>z Then

(*INSERT 'Squeeze the equation as much as possible; if there is an equation number that should go on a separate line by itself, set~|e:=0|'*)(*PASCAL module 1201*)
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            If (e<>0)And((w-total_shrink[normal]+q<=z)Or
                                                                                                                                                                                                                                                                                                                                               (total_shrink[fil]<>0)Or(total_shrink[fill]<>0)Or
                                                                                                                                                                                                                                                                                                                                               (total_shrink[filll]<>0)) Then
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                free_node(b,box_node_size);
                                                                                                                                                                                                                                                                                                                                                b := hpack(p,z-q,exactly);
                                                                                                                                                                                                                                                                                                                                              End
                                                                                                                                                                                                                                                                                                                                            Else
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                e := 0;
                                                                                                                                                                                                                                                                                                                                                If w>z Then
                                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                                    free_node(b,box_node_size);
                                                                                                                                                                                                                                                                                                                                                b := hpack(p,z,exactly);
                                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        w := width(b);
                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Squeeze the equation as much as possible; if there is an equation number that should go on a separate line by itself, set~|e:=0|'*)                                                                                                                                                                                     ;

(*INSERT 'Determine the displacement, |d|, of the left edge of the equation, with respect to the line size |z|, assuming that |l=false|'*)(*PASCAL module 1202*)
                                                                                                                                                                                                                                                                                                                                      d := half(z-w);
                                                                                                                                                                                                                                                                                                                                      If (e>0)And(d<2*e) Then {too close}
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          d := half(z-w-e);
                                                                                                                                                                                                                                                                                                                                          If p<>null Then If Not is_char_node(p) Then If Type(p)=glue_node Then d := 0;
                                                                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'Determine the displacement, |d|, of the left edge of the equation, with respect to the line size |z|, assuming that |l=false|'*)                                                                                                                                                                                        ;

(*INSERT 'Append the glue or equation number preceding the display'*)(*PASCAL module 1203*)
                                                                                                                                                                                                                                                                                                                                      tail_append(new_penalty(pre_display_penalty));

                                                                                                                                                                                                                                                                                                                                      If (d+s<=pre_display_size)Or l Then {not enough clearance}
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          g1 := above_display_skip_code;
                                                                                                                                                                                                                                                                                                                                          g2 := below_display_skip_code;
                                                                                                                                                                                                                                                                                                                                        End
                                                                                                                                                                                                                                                                                                                                      Else
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          g1 := above_display_short_skip_code;
                                                                                                                                                                                                                                                                                                                                          g2 := below_display_short_skip_code;
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      If l And(e=0) Then {it follows that |type(a)=hlist_node|}
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          shift_amount(a) := s;
                                                                                                                                                                                                                                                                                                                                          append_to_vlist(a);
                                                                                                                                                                                                                                                                                                                                          tail_append(new_penalty(inf_penalty));
                                                                                                                                                                                                                                                                                                                                        End
                                                                                                                                                                                                                                                                                                                                      Else tail_append(new_param_glue(g1))

(*FIN INSERT 'Append the glue or equation number preceding the display'*)                                                                                                                                                                                                                                                             ;

(*INSERT 'Append the display and perhaps also the equation number'*)(*PASCAL module 1204*)
                                                                                                                                                                                                                                                                                                                                      If e<>0 Then
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          r := new_kern(z-w-e-d);
                                                                                                                                                                                                                                                                                                                                          If l Then
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              link(a) := r;
                                                                                                                                                                                                                                                                                                                                              link(r) := b;
                                                                                                                                                                                                                                                                                                                                              b := a;
                                                                                                                                                                                                                                                                                                                                              d := 0;
                                                                                                                                                                                                                                                                                                                                            End
                                                                                                                                                                                                                                                                                                                                          Else
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              link(b) := r;
                                                                                                                                                                                                                                                                                                                                              link(r) := a;
                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                          b := hpack(b,natural);
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      shift_amount(b) := s+d;
                                                                                                                                                                                                                                                                                                                                      append_to_vlist(b)

(*FIN INSERT 'Append the display and perhaps also the equation number'*)                                                                                                                                                                                                                                                              ;

(*INSERT 'Append the glue or equation number following the display'*)(*PASCAL module 1205*)
                                                                                                                                                                                                                                                                                                                                      If (a<>null)And(e=0)And Not l Then
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          tail_append(new_penalty(inf_penalty));
                                                                                                                                                                                                                                                                                                                                          shift_amount(a) := s+z-width(a);
                                                                                                                                                                                                                                                                                                                                          append_to_vlist(a);
                                                                                                                                                                                                                                                                                                                                          g2 := 0;
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      If t<>adjust_head Then {migrating material comes after equation number}
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          link(tail) := link(adjust_head);
                                                                                                                                                                                                                                                                                                                                          tail := t;
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      tail_append(new_penalty(post_display_penalty));
                                                                                                                                                                                                                                                                                                                                      If g2>0 Then tail_append(new_param_glue(g2))

(*FIN INSERT 'Append the glue or equation number following the display'*)                                                                                                                                                                                                                                                             ;
                                                                                                                                                                                                                                                                                                                                      resume_after_display

(*FIN INSERT 'Finish displayed math'*)                                                                                                                                                                                                                                                                                                ;
                                                                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1200*)
                                                                                                                                                                                                                                                                                                                                  Procedure resume_after_display;
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    If cur_group<>math_shift_group Then confusion('display');
(*this can''t happen display][\quad display*)
                                                                                                                                                                                                                                                                                                                                    unsave;
                                                                                                                                                                                                                                                                                                                                    prev_graf := prev_graf+3;
                                                                                                                                                                                                                                                                                                                                    push_nest;
                                                                                                                                                                                                                                                                                                                                    mode := hmode;
                                                                                                                                                                                                                                                                                                                                    space_factor := 1000;
                                                                                                                                                                                                                                                                                                                                    set_cur_lang;
                                                                                                                                                                                                                                                                                                                                    clang := cur_lang;
                                                                                                                                                                                                                                                                                                                                    prev_graf := (norm_min(left_hyphen_min)*64+norm_min(right_hyphen_min))
                                                                                                                                                                                                                                                                                                                                                 *65536+cur_lang;

(*INSERT 'Scan an optional space'*)(*PASCAL module 443*)
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      get_x_token;
                                                                                                                                                                                                                                                                                                                                      If cur_cmd<>spacer Then back_input;
                                                                                                                                                                                                                                                                                                                                    End

(*FIN INSERT 'Scan an optional space'*)                                                                                                                                                                                                                                                                                             ;
                                                                                                                                                                                                                                                                                                                                    If nest_ptr=1 Then build_page;
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1211*)
(*\4*)
(*INSERT 'Declare subprocedures for |prefixed_command|'*)(*PASCAL module 1215*)
                                                                                                                                                                                                                                                                                                                                  Procedure get_r_token;

                                                                                                                                                                                                                                                                                                                                  Label restart;
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    restart: Repeat
                                                                                                                                                                                                                                                                                                                                               get_token;
                                                                                                                                                                                                                                                                                                                                             Until cur_tok<>space_token;
                                                                                                                                                                                                                                                                                                                                    If (cur_cs=0)Or(cur_cs>frozen_control_sequence) Then
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        print_err('Missing control sequence inserted');
(*Missing control...*)
                                                                                                                                                                                                                                                                                                                                        help5('Please don''t say `\def cs{...}'', say `\def\cs{...}''.')

                                                                                                                                                                                                                                                                                                                                        ('I''ve inserted an inaccessible control sequence so that your')

                                                                                                                                                                                                                                                                                                                                        ('definition will be completed without mixing me up too badly.')

                                                                                                                                                                                                                                                                                                                                        ('You can recover graciously from this error, if you''re')

                                                                                                                                                                                                                                                                                                                                        ('careful; see exercise 27.2 in The TeXbook.');
(*TeXbook][\sl The \TeX book*)
                                                                                                                                                                                                                                                                                                                                        If cur_cs=0 Then back_input;
                                                                                                                                                                                                                                                                                                                                        cur_tok := cs_token_flag+frozen_protection;
                                                                                                                                                                                                                                                                                                                                        ins_error;
                                                                                                                                                                                                                                                                                                                                        goto restart;
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1229*)
                                                                                                                                                                                                                                                                                                                                  Procedure trap_zero_glue;
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    If (width(cur_val)=0)And(stretch(cur_val)=0)And(shrink(cur_val)=0) Then
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        add_glue_ref(zero_glue);
                                                                                                                                                                                                                                                                                                                                        delete_glue_ref(cur_val);
                                                                                                                                                                                                                                                                                                                                        cur_val := zero_glue;
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1236*)
                                                                                                                                                                                                                                                                                                                                  Procedure do_register_command(a:small_number);

                                                                                                                                                                                                                                                                                                                                  Label found,exit;

                                                                                                                                                                                                                                                                                                                                  Var l,q,r,s: pointer; {for list manipulation}
                                                                                                                                                                                                                                                                                                                                    p: int_val..mu_val; {type of register involved}
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    q := cur_cmd;

(*INSERT 'Compute the register location |l| and its type |p|; but |return| if invalid'*)(*PASCAL module 1237*)
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      If q<>register Then
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          get_x_token;
                                                                                                                                                                                                                                                                                                                                          If (cur_cmd>=assign_int)And(cur_cmd<=assign_mu_glue) Then
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              l := cur_chr;
                                                                                                                                                                                                                                                                                                                                              p := cur_cmd-assign_int;
                                                                                                                                                                                                                                                                                                                                              goto found;
                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                          If cur_cmd<>register Then
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              print_err('You can''t use `');
                                                                                                                                                                                                                                                                                                                                              print_cmd_chr(cur_cmd,cur_chr);
(*You can''t use x after ...*)
                                                                                                                                                                                                                                                                                                                                              print(''' after ');
                                                                                                                                                                                                                                                                                                                                              print_cmd_chr(q,0);
                                                                                                                                                                                                                                                                                                                                              help1('I''m forgetting what you said and not changing anything.');
                                                                                                                                                                                                                                                                                                                                              error;
                                                                                                                                                                                                                                                                                                                                              return;
                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      p := cur_chr;
                                                                                                                                                                                                                                                                                                                                      scan_eight_bit_int;
                                                                                                                                                                                                                                                                                                                                      Case p Of 
                                                                                                                                                                                                                                                                                                                                        int_val: l := cur_val+count_base;
                                                                                                                                                                                                                                                                                                                                        dimen_val: l := cur_val+scaled_base;
                                                                                                                                                                                                                                                                                                                                        glue_val: l := cur_val+skip_base;
                                                                                                                                                                                                                                                                                                                                        mu_val: l := cur_val+mu_skip_base;
                                                                                                                                                                                                                                                                                                                                      End; {there are no other cases}
                                                                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                                                                                    found:

(*FIN INSERT 'Compute the register location |l| and its type |p|; but |return| if invalid'*)                                                                                                                                                                                                                                        ;
                                                                                                                                                                                                                                                                                                                                    If q=register Then scan_optional_equals
                                                                                                                                                                                                                                                                                                                                    Else If scan_keyword('by') Then do_nothing; {optional `\.[by]''}
(*by*)
                                                                                                                                                                                                                                                                                                                                    arith_error := false;
                                                                                                                                                                                                                                                                                                                                    If q<multiply Then
(*INSERT 'Compute result of |register| or |advance|, put it in |cur_val|'*)(*PASCAL module 1238*)
                                                                                                                                                                                                                                                                                                                                      If p<glue_val Then
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          If p=int_val Then scan_intelse scan_normal_dimen;
                                                                                                                                                                                                                                                                                                                                          If q=advance Then cur_val := cur_val+eqtb[l].int;
                                                                                                                                                                                                                                                                                                                                        End
                                                                                                                                                                                                                                                                                                                                    Else
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        scan_glue(p);
                                                                                                                                                                                                                                                                                                                                        If q=advance Then
(*INSERT 'Compute the sum of two glue specs'*)(*PASCAL module 1239*)
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            q := new_spec(cur_val);
                                                                                                                                                                                                                                                                                                                                            r := equiv(l);
                                                                                                                                                                                                                                                                                                                                            delete_glue_ref(cur_val);
                                                                                                                                                                                                                                                                                                                                            width(q) := width(q)+width(r);
                                                                                                                                                                                                                                                                                                                                            If stretch(q)=0 Then stretch_order(q) := normal;
                                                                                                                                                                                                                                                                                                                                            If stretch_order(q)=stretch_order(r) Then stretch(q) := stretch(q)+stretch(r)
                                                                                                                                                                                                                                                                                                                                            Else If (stretch_order(q)<stretch_order(r))And(stretch(r)<>0) Then
                                                                                                                                                                                                                                                                                                                                                   Begin
                                                                                                                                                                                                                                                                                                                                                     stretch(q) := stretch(r);
                                                                                                                                                                                                                                                                                                                                                     stretch_order(q) := stretch_order(r);
                                                                                                                                                                                                                                                                                                                                                   End;
                                                                                                                                                                                                                                                                                                                                            If shrink(q)=0 Then shrink_order(q) := normal;
                                                                                                                                                                                                                                                                                                                                            If shrink_order(q)=shrink_order(r) Then shrink(q) := shrink(q)+shrink(r)
                                                                                                                                                                                                                                                                                                                                            Else If (shrink_order(q)<shrink_order(r))And(shrink(r)<>0) Then
                                                                                                                                                                                                                                                                                                                                                   Begin
                                                                                                                                                                                                                                                                                                                                                     shrink(q) := shrink(r);
                                                                                                                                                                                                                                                                                                                                                     shrink_order(q) := shrink_order(r);
                                                                                                                                                                                                                                                                                                                                                   End;
                                                                                                                                                                                                                                                                                                                                            cur_val := q;
                                                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Compute the sum of two glue specs'*)                                                                                                                                                                                                                                                                                      ;
                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Compute result of |register| or |advance|, put it in |cur_val|'*)
                                                                                                                                                                                                                                                                                                                                    Else
(*INSERT 'Compute result of |multiply| or |divide|, put it in |cur_val|'*)(*PASCAL module 1240*)
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        scan_int;
                                                                                                                                                                                                                                                                                                                                        If p<glue_val Then
                                                                                                                                                                                                                                                                                                                                          If q=multiply Then
                                                                                                                                                                                                                                                                                                                                            If p=int_val Then cur_val := mult_integers(eqtb[l].int,cur_val)
                                                                                                                                                                                                                                                                                                                                        Else cur_val := nx_plus_y(eqtb[l].int,cur_val,0)
                                                                                                                                                                                                                                                                                                                                        Else cur_val := x_over_n(eqtb[l].int,cur_val)
                                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            s := equiv(l);
                                                                                                                                                                                                                                                                                                                                            r := new_spec(s);
                                                                                                                                                                                                                                                                                                                                            If q=multiply Then
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                width(r) := nx_plus_y(width(s),cur_val,0);
                                                                                                                                                                                                                                                                                                                                                stretch(r) := nx_plus_y(stretch(s),cur_val,0);
                                                                                                                                                                                                                                                                                                                                                shrink(r) := nx_plus_y(shrink(s),cur_val,0);
                                                                                                                                                                                                                                                                                                                                              End
                                                                                                                                                                                                                                                                                                                                            Else
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                width(r) := x_over_n(width(s),cur_val);
                                                                                                                                                                                                                                                                                                                                                stretch(r) := x_over_n(stretch(s),cur_val);
                                                                                                                                                                                                                                                                                                                                                shrink(r) := x_over_n(shrink(s),cur_val);
                                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                                                            cur_val := r;
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Compute result of |multiply| or |divide|, put it in |cur_val|'*)                                                                                                                                                                                                                                                      ;
                                                                                                                                                                                                                                                                                                                                    If arith_error Then
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        print_err('Arithmetic overflow');
(*Arithmetic overflow*)
                                                                                                                                                                                                                                                                                                                                        help2('I can''t carry out that multiplication or division,')

                                                                                                                                                                                                                                                                                                                                        ('since the result is out of range.');
                                                                                                                                                                                                                                                                                                                                        If p>=glue_val Then delete_glue_ref(cur_val);
                                                                                                                                                                                                                                                                                                                                        error;
                                                                                                                                                                                                                                                                                                                                        return;
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                    If p<glue_val Then word_define(l,cur_val)
                                                                                                                                                                                                                                                                                                                                    Else
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        trap_zero_glue;
                                                                                                                                                                                                                                                                                                                                        define(l,glue_ref,cur_val);
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                    exit:
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1243*)
                                                                                                                                                                                                                                                                                                                                  Procedure alter_aux;

                                                                                                                                                                                                                                                                                                                                  Var c: halfword; {|hmode| or |vmode|}
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    If cur_chr<>abs(mode) Then report_illegal_case
                                                                                                                                                                                                                                                                                                                                    Else
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        c := cur_chr;
                                                                                                                                                                                                                                                                                                                                        scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                        If c=vmode Then
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            scan_normal_dimen;
                                                                                                                                                                                                                                                                                                                                            prev_depth := cur_val;
                                                                                                                                                                                                                                                                                                                                          End
                                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            scan_int;
                                                                                                                                                                                                                                                                                                                                            If (cur_val<=0)Or(cur_val>32767) Then
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                print_err('Bad space factor');
(*Bad space factor*)
                                                                                                                                                                                                                                                                                                                                                help1('I allow only values in the range 1..32767 here.');
                                                                                                                                                                                                                                                                                                                                                int_error(cur_val);
                                                                                                                                                                                                                                                                                                                                              End
                                                                                                                                                                                                                                                                                                                                            Else space_factor := cur_val;
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1244*)
                                                                                                                                                                                                                                                                                                                                  Procedure alter_prev_graf;

                                                                                                                                                                                                                                                                                                                                  Var p: 0..nest_size; {index into |nest|}
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    nest[nest_ptr] := cur_list;
                                                                                                                                                                                                                                                                                                                                    p := nest_ptr;
                                                                                                                                                                                                                                                                                                                                    While abs(nest[p].mode_field)<>vmode Do
                                                                                                                                                                                                                                                                                                                                      decr(p);
                                                                                                                                                                                                                                                                                                                                    scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                    scan_int;
                                                                                                                                                                                                                                                                                                                                    If cur_val<0 Then
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        print_err('Bad ');
                                                                                                                                                                                                                                                                                                                                        print_esc('prevgraf');
(*Bad \\prevgraf*)
                                                                                                                                                                                                                                                                                                                                        help1('I allow only nonnegative values here.');
                                                                                                                                                                                                                                                                                                                                        int_error(cur_val);
                                                                                                                                                                                                                                                                                                                                      End
                                                                                                                                                                                                                                                                                                                                    Else
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        nest[p].pg_field := cur_val;
                                                                                                                                                                                                                                                                                                                                        cur_list := nest[nest_ptr];
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1245*)
                                                                                                                                                                                                                                                                                                                                  Procedure alter_page_so_far;

                                                                                                                                                                                                                                                                                                                                  Var c: 0..7; {index into |page_so_far|}
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    c := cur_chr;
                                                                                                                                                                                                                                                                                                                                    scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                    scan_normal_dimen;
                                                                                                                                                                                                                                                                                                                                    page_so_far[c] := cur_val;
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1246*)
                                                                                                                                                                                                                                                                                                                                  Procedure alter_integer;

                                                                                                                                                                                                                                                                                                                                  Var c: 0..1; {0 for \.[\\deadcycles], 1 for \.[\\insertpenalties]}
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    c := cur_chr;
                                                                                                                                                                                                                                                                                                                                    scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                    scan_int;
                                                                                                                                                                                                                                                                                                                                    If c=0 Then dead_cycles := cur_val
                                                                                                                                                                                                                                                                                                                                    Else insert_penalties := cur_val;
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1247*)
                                                                                                                                                                                                                                                                                                                                  Procedure alter_box_dimen;

                                                                                                                                                                                                                                                                                                                                  Var c: small_number; {|width_offset| or |height_offset| or |depth_offset|}
                                                                                                                                                                                                                                                                                                                                    b: eight_bits; {box number}
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    c := cur_chr;
                                                                                                                                                                                                                                                                                                                                    scan_eight_bit_int;
                                                                                                                                                                                                                                                                                                                                    b := cur_val;
                                                                                                                                                                                                                                                                                                                                    scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                    scan_normal_dimen;
                                                                                                                                                                                                                                                                                                                                    If box(b)<>null Then mem[box(b)+c].sc := cur_val;
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1257*)
                                                                                                                                                                                                                                                                                                                                  Procedure new_font(a:small_number);

                                                                                                                                                                                                                                                                                                                                  Label common_ending;

                                                                                                                                                                                                                                                                                                                                  Var u: pointer; {user's font identifier}
                                                                                                                                                                                                                                                                                                                                    s: scaled; {stated ``at'' size, or negative of scaled magnification}
                                                                                                                                                                                                                                                                                                                                    f: internal_font_number; {runs through existing fonts}
                                                                                                                                                                                                                                                                                                                                    t: str_number; {name for the frozen font identifier}
                                                                                                                                                                                                                                                                                                                                    old_setting: 0..max_selector; {holds |selector| setting}
                                                                                                                                                                                                                                                                                                                                    flushable_string: str_number; {string not yet referenced}
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    If job_name=0 Then open_log_file;
  {avoid confusing \.[texput] with the font name}
(*texput*)
                                                                                                                                                                                                                                                                                                                                    get_r_token;
                                                                                                                                                                                                                                                                                                                                    u := cur_cs;
                                                                                                                                                                                                                                                                                                                                    If u>=hash_base Then t := text(u)
                                                                                                                                                                                                                                                                                                                                    Else If u>=single_base Then
                                                                                                                                                                                                                                                                                                                                           If u=null_cs Then t := 'FONT'
                                                                                                                                                                                                                                                                                                                                    Else t := u-single_base
                                                                                                                                                                                                                                                                                                                                    Else
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        old_setting := selector;
                                                                                                                                                                                                                                                                                                                                        selector := new_string;
                                                                                                                                                                                                                                                                                                                                        print('FONT');
                                                                                                                                                                                                                                                                                                                                        print(u-active_base);
                                                                                                                                                                                                                                                                                                                                        selector := old_setting;
(*FONTx*)
                                                                                                                                                                                                                                                                                                                                        str_room(1);
                                                                                                                                                                                                                                                                                                                                        t := make_string;
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                    define(u,set_font,null_font);
                                                                                                                                                                                                                                                                                                                                    scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                    scan_file_name;

(*INSERT 'Scan the font size specification'*)(*PASCAL module 1258*)
                                                                                                                                                                                                                                                                                                                                    name_in_progress := true; {this keeps |cur_name| from being changed}
                                                                                                                                                                                                                                                                                                                                    If scan_keyword('at') Then
(*INSERT 'Put the \(p)(positive) `at'''' size into |s|'*)(*FIN INSERT 'Put the \(p)(positive) `at'''' size into |s|'*)
(*at*)
                                                                                                                                                                                                                                                                                                                                    Else If scan_keyword('scaled') Then
(*scaled*)
                                                                                                                                                                                                                                                                                                                                           Begin
                                                                                                                                                                                                                                                                                                                                             scan_int;
                                                                                                                                                                                                                                                                                                                                             s := -cur_val;
                                                                                                                                                                                                                                                                                                                                             If (cur_val<=0)Or(cur_val>32768) Then
                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                 print_err('Illegal magnification has been changed to 1000');

(*Illegal magnification...*)
                                                                                                                                                                                                                                                                                                                                                 help1('The magnification ratio must be between 1 and 32768.');
                                                                                                                                                                                                                                                                                                                                                 int_error(cur_val);
                                                                                                                                                                                                                                                                                                                                                 s := -1000;
                                                                                                                                                                                                                                                                                                                                               End;
                                                                                                                                                                                                                                                                                                                                           End
                                                                                                                                                                                                                                                                                                                                    Else s := -1000;
                                                                                                                                                                                                                                                                                                                                    name_in_progress := false

(*FIN INSERT 'Scan the font size specification'*)                                                                                                                                                                                                                                                                                   ;

(*INSERT 'If this font has already been loaded, set |f| to the internal font number and |goto common_ending|'*)(*PASCAL module 1260*)
                                                                                                                                                                                                                                                                                                                                    flushable_string := str_ptr-1;
                                                                                                                                                                                                                                                                                                                                    For f:=font_base+1 To font_ptr Do
                                                                                                                                                                                                                                                                                                                                      If str_eq_str(font_name[f],cur_name)And str_eq_str(font_area[f],cur_area) Then
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          If cur_name=flushable_string Then
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              flush_string;
                                                                                                                                                                                                                                                                                                                                              cur_name := font_name[f];
                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                          If s>0 Then
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              If s=font_size[f] Then goto common_ending;
                                                                                                                                                                                                                                                                                                                                            End
                                                                                                                                                                                                                                                                                                                                          Else If font_size[f]=xn_over_d(font_dsize[f],-s,1000) Then
                                                                                                                                                                                                                                                                                                                                                 goto common_ending;
                                                                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'If this font has already been loaded, set |f| to the internal font number and |goto common_ending|'*)                                                                                                                                                                                                                 ;
                                                                                                                                                                                                                                                                                                                                    f := read_font_info(u,cur_name,cur_area,s);
                                                                                                                                                                                                                                                                                                                                    common_ending: equiv(u) := f;
                                                                                                                                                                                                                                                                                                                                    eqtb[font_id_base+f] := eqtb[u];
                                                                                                                                                                                                                                                                                                                                    font_id_text(f) := t;
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1265*)
                                                                                                                                                                                                                                                                                                                                  Procedure new_interaction;
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    print_ln;
                                                                                                                                                                                                                                                                                                                                    interaction := cur_chr;

(*INSERT 'Initialize the print |selector| based on |interaction|'*)(*PASCAL module 75*)
                                                                                                                                                                                                                                                                                                                                    If interaction=batch_mode Then selector := no_printelse selector:=term_only

(*FIN INSERT 'Initialize the print |selector| based on |interaction|'*)                                                                                                                                                                                                                                                             ;
                                                                                                                                                                                                                                                                                                                                    If log_opened Then selector := selector+2;
                                                                                                                                                                                                                                                                                                                                  End;

(*FIN INSERT 'Declare subprocedures for |prefixed_command|'*)(*@>;
*)(*@>;
*)
                                                                                                                                                                                                                                                                                                                                  Procedure prefixed_command;

                                                                                                                                                                                                                                                                                                                                  Label done,exit;

                                                                                                                                                                                                                                                                                                                                  Var a: small_number; {accumulated prefix codes so far}
                                                                                                                                                                                                                                                                                                                                    f: internal_font_number; {identifies a font}
                                                                                                                                                                                                                                                                                                                                    j: halfword; {index into a \.[\\parshape] specification}
                                                                                                                                                                                                                                                                                                                                    k: font_index; {index into |font_info|}
                                                                                                                                                                                                                                                                                                                                    p,q: pointer; {for temporary short-term use}
                                                                                                                                                                                                                                                                                                                                    n: integer; {ditto}
                                                                                                                                                                                                                                                                                                                                    e: boolean; {should a definition be expanded? or was \.[\\let] not done?}
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    a := 0;
                                                                                                                                                                                                                                                                                                                                    While cur_cmd=prefix Do
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        If Not odd(a Div cur_chr) Then a := a+cur_chr;

(*INSERT 'Get the next non-blank non-relax non-call token'*)(*PASCAL module 404*)
                                                                                                                                                                                                                                                                                                                                        Repeat
                                                                                                                                                                                                                                                                                                                                          get_x_token;
                                                                                                                                                                                                                                                                                                                                        Until (cur_cmd<>spacer)And(cur_cmd<>relax)

(*FIN INSERT 'Get the next non-blank non-relax non-call token'*)                                                                                                                                                                                                                                                                        ;
                                                                                                                                                                                                                                                                                                                                        If cur_cmd<=max_non_prefixed_command Then

(*INSERT 'Discard erroneous prefixes and |return|'*)(*PASCAL module 1212*)
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            print_err('You can''t use a prefix with `');
(*You can''t use a prefix with x*)
                                                                                                                                                                                                                                                                                                                                            print_cmd_chr(cur_cmd,cur_chr);
                                                                                                                                                                                                                                                                                                                                            print_char('''');
                                                                                                                                                                                                                                                                                                                                            help1('I''ll pretend you didn''t say \long or \outer or \global.');
                                                                                                                                                                                                                                                                                                                                            back_error;
                                                                                                                                                                                                                                                                                                                                            return;
                                                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Discard erroneous prefixes and |return|'*)                                                                                                                                                                                                                                                                                ;
                                                                                                                                                                                                                                                                                                                                      End;

(*INSERT 'Discard the prefixes \.{\\long} and \.{\\outer} if they are irrelevant'*)(*PASCAL module 1213*)
                                                                                                                                                                                                                                                                                                                                    If (cur_cmd<>def)And(a Mod 4<>0) Then
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        print_err('You can''t use `');
                                                                                                                                                                                                                                                                                                                                        print_esc('long');
                                                                                                                                                                                                                                                                                                                                        print(''' or `');
                                                                                                                                                                                                                                                                                                                                        print_esc('outer');
                                                                                                                                                                                                                                                                                                                                        print(''' with `');
(*You can''t use \\long...*)
                                                                                                                                                                                                                                                                                                                                        print_cmd_chr(cur_cmd,cur_chr);
                                                                                                                                                                                                                                                                                                                                        print_char('''');
                                                                                                                                                                                                                                                                                                                                        help1('I''ll pretend you didn''t say \long or \outer here.');
                                                                                                                                                                                                                                                                                                                                        error;
                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Discard the prefixes \.{\\long} and \.{\\outer} if they are irrelevant'*)                                                                                                                                                                                                                                             ;

(*INSERT 'Adjust \(f)for the setting of \.{\\globaldefs}'*)(*PASCAL module 1214*)
                                                                                                                                                                                                                                                                                                                                    If global_defs<>0 Then
                                                                                                                                                                                                                                                                                                                                      If global_defs<0 Then
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          If global Then a := a-4;
                                                                                                                                                                                                                                                                                                                                        End
                                                                                                                                                                                                                                                                                                                                    Else
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        If Not global Then a := a+4;
                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Adjust \(f)for the setting of \.{\\globaldefs}'*)                                                                                                                                                                                                                                                                     ;
                                                                                                                                                                                                                                                                                                                                    Case cur_cmd Of 
(*\4*)
(*INSERT 'Assignments '*)(*PASCAL module 1217*)
                                                                                                                                                                                                                                                                                                                                      set_font: define(cur_font_loc,data,cur_chr);

(*PASCAL module 1218*)
                                                                                                                                                                                                                                                                                                                                      def:
                                                                                                                                                                                                                                                                                                                                           Begin
                                                                                                                                                                                                                                                                                                                                             If odd(cur_chr)And Not global And(global_defs>=0) Then a := a+4;
                                                                                                                                                                                                                                                                                                                                             e := (cur_chr>=2);
                                                                                                                                                                                                                                                                                                                                             get_r_token;
                                                                                                                                                                                                                                                                                                                                             p := cur_cs;
                                                                                                                                                                                                                                                                                                                                             q := scan_toks(true,e);
                                                                                                                                                                                                                                                                                                                                             define(p,call+(a Mod 4),def_ref);
                                                                                                                                                                                                                                                                                                                                           End;

(*PASCAL module 1221*)
                                                                                                                                                                                                                                                                                                                                      let:
                                                                                                                                                                                                                                                                                                                                           Begin
                                                                                                                                                                                                                                                                                                                                             n := cur_chr;
                                                                                                                                                                                                                                                                                                                                             get_r_token;
                                                                                                                                                                                                                                                                                                                                             p := cur_cs;
                                                                                                                                                                                                                                                                                                                                             If n=normal Then
                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                 Repeat
                                                                                                                                                                                                                                                                                                                                                   get_token;
                                                                                                                                                                                                                                                                                                                                                 Until cur_cmd<>spacer;
                                                                                                                                                                                                                                                                                                                                                 If cur_tok=other_token+'=' Then
                                                                                                                                                                                                                                                                                                                                                   Begin
                                                                                                                                                                                                                                                                                                                                                     get_token;
                                                                                                                                                                                                                                                                                                                                                     If cur_cmd=spacer Then get_token;
                                                                                                                                                                                                                                                                                                                                                   End;
                                                                                                                                                                                                                                                                                                                                               End
                                                                                                                                                                                                                                                                                                                                             Else
                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                 get_token;
                                                                                                                                                                                                                                                                                                                                                 q := cur_tok;
                                                                                                                                                                                                                                                                                                                                                 get_token;
                                                                                                                                                                                                                                                                                                                                                 back_input;
                                                                                                                                                                                                                                                                                                                                                 cur_tok := q;
                                                                                                                                                                                                                                                                                                                                                 back_input; {look ahead, then back up}
                                                                                                                                                                                                                                                                                                                                               End; {note that |back_input| doesn't affect |cur_cmd|, |cur_chr|}
                                                                                                                                                                                                                                                                                                                                             If cur_cmd>=call Then add_token_ref(cur_chr);
                                                                                                                                                                                                                                                                                                                                             define(p,cur_cmd,cur_chr);
                                                                                                                                                                                                                                                                                                                                           End;

(*PASCAL module 1224*)
                                                                                                                                                                                                                                                                                                                                      shorthand_def:
                                                                                                                                                                                                                                                                                                                                                     Begin
                                                                                                                                                                                                                                                                                                                                                       n := cur_chr;
                                                                                                                                                                                                                                                                                                                                                       get_r_token;
                                                                                                                                                                                                                                                                                                                                                       p := cur_cs;
                                                                                                                                                                                                                                                                                                                                                       define(p,relax,256);
                                                                                                                                                                                                                                                                                                                                                       scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                                       Case n Of 
                                                                                                                                                                                                                                                                                                                                                         char_def_code:
                                                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                                                          scan_char_num;
                                                                                                                                                                                                                                                                                                                                                                          define(p,char_given,cur_val);
                                                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                                         math_char_def_code:
                                                                                                                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                                                                                                                               scan_fifteen_bit_int;
                                                                                                                                                                                                                                                                                                                                                                               define(p,math_given,cur_val);
                                                                                                                                                                                                                                                                                                                                                                             End;
                                                                                                                                                                                                                                                                                                                                                         othercases
                                                                                                                                                                                                                                                                                                                                                         Begin
                                                                                                                                                                                                                                                                                                                                                           scan_eight_bit_int;
                                                                                                                                                                                                                                                                                                                                                           Case n Of 
                                                                                                                                                                                                                                                                                                                                                             count_def_code: define(p,assign_int,count_base+cur_val);
                                                                                                                                                                                                                                                                                                                                                             dimen_def_code: define(p,assign_dimen,scaled_base+cur_val);
                                                                                                                                                                                                                                                                                                                                                             skip_def_code: define(p,assign_glue,skip_base+cur_val);
                                                                                                                                                                                                                                                                                                                                                             mu_skip_def_code: define(p,assign_mu_glue,mu_skip_base+cur_val);
                                                                                                                                                                                                                                                                                                                                                             toks_def_code: define(p,assign_toks,toks_base+cur_val);
                                                                                                                                                                                                                                                                                                                                                           End; {there are no other cases}
                                                                                                                                                                                                                                                                                                                                                         End
                                                                                                                                                                                                                                                                                                                                                         endcases;
                                                                                                                                                                                                                                                                                                                                                       End;

(*PASCAL module 1225*)
                                                                                                                                                                                                                                                                                                                                                       read_to_cs:
                                                                                                                                                                                                                                                                                                                                                                   Begin
                                                                                                                                                                                                                                                                                                                                                                     scan_int;
                                                                                                                                                                                                                                                                                                                                                                     n := cur_val;
                                                                                                                                                                                                                                                                                                                                                                     If Not scan_keyword('to') Then
(*to*)
                                                                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                                                                         print_err('Missing `to'' inserted');
(*Missing `to''...*)
                                                                                                                                                                                                                                                                                                                                                                         help2('You should have said `\read<number> to \cs''.')

                                                                                                                                                                                                                                                                                                                                                                         ('I''m going to look for the \cs now.');
                                                                                                                                                                                                                                                                                                                                                                         error;
                                                                                                                                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                                                                                                                                                     get_r_token;
                                                                                                                                                                                                                                                                                                                                                                     p := cur_cs;
                                                                                                                                                                                                                                                                                                                                                                     read_toks(n,p);
                                                                                                                                                                                                                                                                                                                                                                     define(p,call,cur_val);
                                                                                                                                                                                                                                                                                                                                                                   End;

(*PASCAL module 1226*)
                                                                                                                                                                                                                                                                                                                                                       toks_register,assign_toks:
                                                                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                                                                    q := cur_cs;
                                                                                                                                                                                                                                                                                                                                                                                    If cur_cmd=toks_register Then
                                                                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                                                                        scan_eight_bit_int;
                                                                                                                                                                                                                                                                                                                                                                                        p := toks_base+cur_val;
                                                                                                                                                                                                                                                                                                                                                                                      End
                                                                                                                                                                                                                                                                                                                                                                                    Else p := cur_chr; {|p=every_par_loc| or |output_routine_loc| or \dots}
                                                                                                                                                                                                                                                                                                                                                                                    scan_optional_equals;

(*INSERT 'Get the next non-blank non-relax non-call token'*)(*PASCAL module 404*)
                                                                                                                                                                                                                                                                                                                                                                                    Repeat
                                                                                                                                                                                                                                                                                                                                                                                      get_x_token;
                                                                                                                                                                                                                                                                                                                                                                                    Until (cur_cmd<>spacer)And(cur_cmd<>relax)

(*FIN INSERT 'Get the next non-blank non-relax non-call token'*)                                                                                                                                                                                                                                                                                                                    ;
                                                                                                                                                                                                                                                                                                                                                                                    If cur_cmd<>left_brace Then
(*INSERT 'If the right-hand side is a token parameter or token register, finish the assignment and |goto done|'*)(*PASCAL module 1227*)
                                                                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                                                                        If cur_cmd=toks_register Then
                                                                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                                                                          scan_eight_bit_int;
                                                                                                                                                                                                                                                                                                                                                                                          cur_cmd := assign_toks;
                                                                                                                                                                                                                                                                                                                                                                                        cur_chr := toks_base+cur_val;
                                                                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                                                                    If cur_cmd=assign_toks Then
                                                                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                                                                        q := equiv(cur_chr);
                                                                                                                                                                                                                                                                                                                                                                                        If q=null Then define(p,undefined_cs,null)
                                                                                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                                                                            add_token_ref(q);
                                                                                                                                                                                                                                                                                                                                                                                        define(p,call,q);
                                                                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                                                                    goto done;
                                                                                                                                                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                                                                                                                     End

(*FIN INSERT 'If the right-hand side is a token parameter or token register, finish the assignment and |goto done|'*)                                                                                                                                                                                                                 ;
                                                                                                                                                                                                                                                                                                                                      back_input;
                                                                                                                                                                                                                                                                                                                                      cur_cs := q;
                                                                                                                                                                                                                                                                                                                                      q := scan_toks(false,false);
                                                                                                                                                                                                                                                                                                                                      If link(def_ref)=null Then {empty list: revert to the default}
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          define(p,undefined_cs,null);
                                                                                                                                                                                                                                                                                                                                          free_avail(def_ref);
                                                                                                                                                                                                                                                                                                                                        End
                                                                                                                                                                                                                                                                                                                                      Else
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          If p=output_routine_loc Then {enclose in curlies}
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              link(q) := get_avail;
                                                                                                                                                                                                                                                                                                                                              q := link(q);
                                                                                                                                                                                                                                                                                                                                              info(q) := right_brace_token+'}';
                                                                                                                                                                                                                                                                                                                                              q := get_avail;
                                                                                                                                                                                                                                                                                                                                              info(q) := left_brace_token+'{';
                                                                                                                                                                                                                                                                                                                                              link(q) := link(def_ref);
                                                                                                                                                                                                                                                                                                                                              link(def_ref) := q;
                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                          define(p,call,def_ref);
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1228*)
                                                                                                                                                                                                                                                                                                                                    assign_int:
                                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                                  p := cur_chr;
                                                                                                                                                                                                                                                                                                                                                  scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                                  scan_int;
                                                                                                                                                                                                                                                                                                                                                  word_define(p,cur_val);
                                                                                                                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                                                                                                                    assign_dimen:
                                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                                    p := cur_chr;
                                                                                                                                                                                                                                                                                                                                                    scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                                    scan_normal_dimen;
                                                                                                                                                                                                                                                                                                                                                    word_define(p,cur_val);
                                                                                                                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                                                                                                    assign_glue,assign_mu_glue:
                                                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                                                  p := cur_chr;
                                                                                                                                                                                                                                                                                                                                                                  n := cur_cmd;
                                                                                                                                                                                                                                                                                                                                                                  scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                                                  If n=assign_mu_glue Then scan_glue(mu_val)
                                                                                                                                                                                                                                                                                                                                                                  Else scan_glue(glue_val);
                                                                                                                                                                                                                                                                                                                                                                  trap_zero_glue;
                                                                                                                                                                                                                                                                                                                                                                  define(p,glue_ref,cur_val);
                                                                                                                                                                                                                                                                                                                                                                End;

(*PASCAL module 1232*)
                                                                                                                                                                                                                                                                                                                                    def_code:
                                                                                                                                                                                                                                                                                                                                              Begin
(*INSERT 'Let |n| be the largest legal code value, based on |cur_chr|'*)(*PASCAL module 1233*)
                                                                                                                                                                                                                                                                                                                                                If cur_chr=cat_code_base Then n := max_char_code
                                                                                                                                                                                                                                                                                                                                                Else If cur_chr=math_code_base Then n := 32768
                                                                                                                                                                                                                                                                                                                                                Else If cur_chr=sf_code_base Then n := 32767
                                                                                                                                                                                                                                                                                                                                                Else If cur_chr=del_code_base Then n := 16777215
                                                                                                                                                                                                                                                                                                                                                Else n := 255

(*FIN INSERT 'Let |n| be the largest legal code value, based on |cur_chr|'*)                                                                                                                                                                                                                                                                    ;
                                                                                                                                                                                                                                                                                                                                                p := cur_chr;
                                                                                                                                                                                                                                                                                                                                                scan_char_num;
                                                                                                                                                                                                                                                                                                                                                p := p+cur_val;
                                                                                                                                                                                                                                                                                                                                                scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                                scan_int;
                                                                                                                                                                                                                                                                                                                                                If ((cur_val<0)And(p<del_code_base))Or(cur_val>n) Then
                                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                                    print_err('Invalid code (');
                                                                                                                                                                                                                                                                                                                                                    print_int(cur_val);
(*Invalid code*)
                                                                                                                                                                                                                                                                                                                                                    If p<del_code_base Then print('), should be in the range 0..')
                                                                                                                                                                                                                                                                                                                                                    Else print('), should be at most ');
                                                                                                                                                                                                                                                                                                                                                    print_int(n);
                                                                                                                                                                                                                                                                                                                                                    help1('I''m going to use 0 instead of that illegal code value.');

                                                                                                                                                                                                                                                                                                                                                    error;
                                                                                                                                                                                                                                                                                                                                                    cur_val := 0;
                                                                                                                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                                                                                                                If p<math_code_base Then define(p,data,cur_val)
                                                                                                                                                                                                                                                                                                                                                Else If p<del_code_base Then define(p,data,hi(cur_val))
                                                                                                                                                                                                                                                                                                                                                Else word_define(p,cur_val);
                                                                                                                                                                                                                                                                                                                                              End;

(*PASCAL module 1234*)
                                                                                                                                                                                                                                                                                                                                    def_family:
                                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                                  p := cur_chr;
                                                                                                                                                                                                                                                                                                                                                  scan_four_bit_int;
                                                                                                                                                                                                                                                                                                                                                  p := p+cur_val;
                                                                                                                                                                                                                                                                                                                                                  scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                                  scan_font_ident;
                                                                                                                                                                                                                                                                                                                                                  define(p,data,cur_val);
                                                                                                                                                                                                                                                                                                                                                End;

(*PASCAL module 1235*)
                                                                                                                                                                                                                                                                                                                                    register,advance,multiply,divide: do_register_command(a);

(*PASCAL module 1241*)
                                                                                                                                                                                                                                                                                                                                    set_box:
                                                                                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                                                                                               scan_eight_bit_int;
                                                                                                                                                                                                                                                                                                                                               If global Then n := 256+cur_valelse n:=cur_val;
                                                                                                                                                                                                                                                                                                                                               scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                               If set_box_allowed Then scan_box(box_flag+n)
                                                                                                                                                                                                                                                                                                                                               Else
                                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                                   print_err('Improper ');
                                                                                                                                                                                                                                                                                                                                                   print_esc('setbox');
(*Improper \\setbox*)
                                                                                                                                                                                                                                                                                                                                                   help2('Sorry, \setbox is not allowed after \halign in a display,')

                                                                                                                                                                                                                                                                                                                                                   ('or between \accent and an accented character.');
                                                                                                                                                                                                                                                                                                                                                   error;
                                                                                                                                                                                                                                                                                                                                                 End;
                                                                                                                                                                                                                                                                                                                                             End;

(*PASCAL module 1242*)
                                                                                                                                                                                                                                                                                                                                    set_aux: alter_aux;
                                                                                                                                                                                                                                                                                                                                    set_prev_graf: alter_prev_graf;
                                                                                                                                                                                                                                                                                                                                    set_page_dimen: alter_page_so_far;
                                                                                                                                                                                                                                                                                                                                    set_page_int: alter_integer;
                                                                                                                                                                                                                                                                                                                                    set_box_dimen: alter_box_dimen;

(*PASCAL module 1248*)
                                                                                                                                                                                                                                                                                                                                    set_shape:
                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                 scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                                 scan_int;
                                                                                                                                                                                                                                                                                                                                                 n := cur_val;
                                                                                                                                                                                                                                                                                                                                                 If n<=0 Then p := null
                                                                                                                                                                                                                                                                                                                                                 Else
                                                                                                                                                                                                                                                                                                                                                   Begin
                                                                                                                                                                                                                                                                                                                                                     p := get_node(2*n+1);
                                                                                                                                                                                                                                                                                                                                                     info(p) := n;
                                                                                                                                                                                                                                                                                                                                                     For j:=1 To n Do
                                                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                                                         scan_normal_dimen;
                                                                                                                                                                                                                                                                                                                                                         mem[p+2*j-1].sc := cur_val; {indentation}
                                                                                                                                                                                                                                                                                                                                                         scan_normal_dimen;
                                                                                                                                                                                                                                                                                                                                                         mem[p+2*j].sc := cur_val; {width}
                                                                                                                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                                                                                                                                   End;
                                                                                                                                                                                                                                                                                                                                                 define(par_shape_loc,shape_ref,p);
                                                                                                                                                                                                                                                                                                                                               End;

(*PASCAL module 1252*)
                                                                                                                                                                                                                                                                                                                                    hyph_data: If cur_chr=1 Then
                                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                                   init new_patterns;
                                                                                                                                                                                                                                                                                                                                                   goto done;;
                                                                                                                                                                                                                                                                                                                                                   tini

                                                                                                                                                                                                                                                                                                                                                   print_err('Patterns can be loaded only by INITEX');
(*Patterns can be...*)
                                                                                                                                                                                                                                                                                                                                                   help0;
                                                                                                                                                                                                                                                                                                                                                   error;
                                                                                                                                                                                                                                                                                                                                                   Repeat
                                                                                                                                                                                                                                                                                                                                                     get_token;
                                                                                                                                                                                                                                                                                                                                                   Until cur_cmd=right_brace; {flush the patterns}
                                                                                                                                                                                                                                                                                                                                                   return;
                                                                                                                                                                                                                                                                                                                                                 End
                                                                                                                                                                                                                                                                                                                                               Else
                                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                                   new_hyph_exceptions;
                                                                                                                                                                                                                                                                                                                                                   goto done;
                                                                                                                                                                                                                                                                                                                                                 End;

(*PASCAL module 1253*)
                                                                                                                                                                                                                                                                                                                                    assign_font_dimen:
                                                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                                                         find_font_dimen(true);
                                                                                                                                                                                                                                                                                                                                                         k := cur_val;
                                                                                                                                                                                                                                                                                                                                                         scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                                         scan_normal_dimen;
                                                                                                                                                                                                                                                                                                                                                         font_info[k].sc := cur_val;
                                                                                                                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                                                                                                                    assign_font_int:
                                                                                                                                                                                                                                                                                                                                                     Begin
                                                                                                                                                                                                                                                                                                                                                       n := cur_chr;
                                                                                                                                                                                                                                                                                                                                                       scan_font_ident;
                                                                                                                                                                                                                                                                                                                                                       f := cur_val;
                                                                                                                                                                                                                                                                                                                                                       scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                                       scan_int;
                                                                                                                                                                                                                                                                                                                                                       If n=0 Then hyphen_char[f] := cur_valelse skew_char[f]:=cur_val;
                                                                                                                                                                                                                                                                                                                                                     End;

(*PASCAL module 1256*)
                                                                                                                                                                                                                                                                                                                                    def_font: new_font(a);

(*PASCAL module 1264*)
                                                                                                                                                                                                                                                                                                                                    set_interaction: new_interaction;

(*FIN INSERT 'Assignments '*)                                                                                                                                                                                                                                                                                                       ;
                                                                                                                                                                                                                                                                                                                                    othercases confusion('prefix')
(*this can''t happen prefix][\quad prefix*)
                                                                                                                                                                                                                                                                                                                                    endcases;
                                                                                                                                                                                                                                                                                                                                    done:
(*INSERT 'Insert a token saved by \.{\\afterassignment}, if any'*)(*PASCAL module 1269*)
                                                                                                                                                                                                                                                                                                                                          If after_token<>0 Then
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              cur_tok := after_token;
                                                                                                                                                                                                                                                                                                                                              back_input;
                                                                                                                                                                                                                                                                                                                                              after_token := 0;
                                                                                                                                                                                                                                                                                                                                            End

(*FIN INSERT 'Insert a token saved by \.{\\afterassignment}, if any'*)                                                                                                                                                                                                                                                              ;
                                                                                                                                                                                                                                                                                                                                    exit:
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1270*)
                                                                                                                                                                                                                                                                                                                                  Procedure do_assignments;

                                                                                                                                                                                                                                                                                                                                  Label exit;
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    loop
                                                                                                                                                                                                                                                                                                                                    Begin
(*INSERT 'Get the next non-blank non-relax non-call token'*)(*PASCAL module 404*)
                                                                                                                                                                                                                                                                                                                                      Repeat
                                                                                                                                                                                                                                                                                                                                        get_x_token;
                                                                                                                                                                                                                                                                                                                                      Until (cur_cmd<>spacer)And(cur_cmd<>relax)

(*FIN INSERT 'Get the next non-blank non-relax non-call token'*)                                                                                                                                                                                                                                                                      ;
                                                                                                                                                                                                                                                                                                                                      If cur_cmd<=max_non_prefixed_command Then return;
                                                                                                                                                                                                                                                                                                                                      set_box_allowed := false;
                                                                                                                                                                                                                                                                                                                                      prefixed_command;
                                                                                                                                                                                                                                                                                                                                      set_box_allowed := true;
                                                                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                                                                                    exit:
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1275*)
                                                                                                                                                                                                                                                                                                                                  Procedure open_or_close_in;

                                                                                                                                                                                                                                                                                                                                  Var c: 0..1; {1 for \.[\\openin], 0 for \.[\\closein]}
                                                                                                                                                                                                                                                                                                                                    n: 0..15; {stream number}
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    c := cur_chr;
                                                                                                                                                                                                                                                                                                                                    scan_four_bit_int;
                                                                                                                                                                                                                                                                                                                                    n := cur_val;
                                                                                                                                                                                                                                                                                                                                    If read_open[n]<>closed Then
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        a_close(read_file[n]);
                                                                                                                                                                                                                                                                                                                                        read_open[n] := closed;
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                    If c<>0 Then
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                        scan_file_name;
                                                                                                                                                                                                                                                                                                                                        If cur_ext='' Then cur_ext := '.tex';
                                                                                                                                                                                                                                                                                                                                        pack_cur_name;
                                                                                                                                                                                                                                                                                                                                        If a_open_in(read_file[n]) Then read_open[n] := just_open;
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1279*)
                                                                                                                                                                                                                                                                                                                                  Procedure issue_message;

                                                                                                                                                                                                                                                                                                                                  Var old_setting: 0..max_selector; {holds |selector| setting}
                                                                                                                                                                                                                                                                                                                                    c: 0..1; {identifies \.[\\message] and \.[\\errmessage]}
                                                                                                                                                                                                                                                                                                                                    s: str_number; {the message}
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    c := cur_chr;
                                                                                                                                                                                                                                                                                                                                    link(garbage) := scan_toks(false,true);
                                                                                                                                                                                                                                                                                                                                    old_setting := selector;
                                                                                                                                                                                                                                                                                                                                    selector := new_string;
                                                                                                                                                                                                                                                                                                                                    token_show(def_ref);
                                                                                                                                                                                                                                                                                                                                    selector := old_setting;
                                                                                                                                                                                                                                                                                                                                    flush_list(def_ref);
                                                                                                                                                                                                                                                                                                                                    str_room(1);
                                                                                                                                                                                                                                                                                                                                    s := make_string;
                                                                                                                                                                                                                                                                                                                                    If c=0 Then
(*INSERT 'Print string |s| on the terminal'*)(*PASCAL module 1280*)
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        If term_offset+length(s)>max_print_line-2 Then print_ln
                                                                                                                                                                                                                                                                                                                                        Else If (term_offset>0)Or(file_offset>0) Then print_char(' ');
                                                                                                                                                                                                                                                                                                                                        slow_print(s);
                                                                                                                                                                                                                                                                                                                                        update_terminal;
                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Print string |s| on the terminal'*)
                                                                                                                                                                                                                                                                                                                                    Else
(*INSERT 'Print string |s| as an error message'*)(*PASCAL module 1283*)
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        print_err('');
                                                                                                                                                                                                                                                                                                                                        slow_print(s);
                                                                                                                                                                                                                                                                                                                                        If err_help<>null Then use_err_help := true
                                                                                                                                                                                                                                                                                                                                        Else If long_help_seen Then help1('(That was another \errmessage.)')
                                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            If interaction<error_stop_mode Then long_help_seen := true;
                                                                                                                                                                                                                                                                                                                                            help4('This error message was generated by an \errmessage')

                                                                                                                                                                                                                                                                                                                                            ('command, so I can''t give any explicit help.')

                                                                                                                                                                                                                                                                                                                                            ('Pretend that you''re Hercule Poirot: Examine all clues,')

(*Poirot, Hercule*)
                                                                                                                                                                                                                                                                                                                                            ('and deduce the truth by order and method.');
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        error;
                                                                                                                                                                                                                                                                                                                                        use_err_help := false;
                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Print string |s| as an error message'*)                                                                                                                                                                                                                                                                               ;
                                                                                                                                                                                                                                                                                                                                    flush_string;
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1288*)
                                                                                                                                                                                                                                                                                                                                  Procedure shift_case;

                                                                                                                                                                                                                                                                                                                                  Var b: pointer; {|lc_code_base| or |uc_code_base|}
                                                                                                                                                                                                                                                                                                                                    p: pointer; {runs through the token list}
                                                                                                                                                                                                                                                                                                                                    t: halfword; {token}
                                                                                                                                                                                                                                                                                                                                    c: eight_bits; {character code}
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    b := cur_chr;
                                                                                                                                                                                                                                                                                                                                    p := scan_toks(false,false);
                                                                                                                                                                                                                                                                                                                                    p := link(def_ref);
                                                                                                                                                                                                                                                                                                                                    While p<>null Do
                                                                                                                                                                                                                                                                                                                                      Begin
(*INSERT 'Change the case of the token in |p|, if a change is appropriate'*)(*PASCAL module 1289*)
                                                                                                                                                                                                                                                                                                                                        t := info(p);
                                                                                                                                                                                                                                                                                                                                        If t<cs_token_flag+single_base Then
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            c := t Mod 256;
                                                                                                                                                                                                                                                                                                                                            If equiv(b+c)<>0 Then info(p) := t-c+equiv(b+c);
                                                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Change the case of the token in |p|, if a change is appropriate'*)                                                                                                                                                                                                                                                        ;
                                                                                                                                                                                                                                                                                                                                        p := link(p);
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                    back_list(link(def_ref));
                                                                                                                                                                                                                                                                                                                                    free_avail(def_ref); {omit reference count}
                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1293*)
                                                                                                                                                                                                                                                                                                                                  Procedure show_whatever;

                                                                                                                                                                                                                                                                                                                                  Label common_ending;

                                                                                                                                                                                                                                                                                                                                  Var p: pointer; {tail of a token list to show}
                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                    Case cur_chr Of 
                                                                                                                                                                                                                                                                                                                                      show_lists:
                                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                                    begin_diagnostic;
                                                                                                                                                                                                                                                                                                                                                    show_activities;
                                                                                                                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                                                                                                      show_box_code:
(*INSERT 'Show the current contents of a box'*)(*PASCAL module 1296*)
                                                                                                                                                                                                                                                                                                                                                     Begin
                                                                                                                                                                                                                                                                                                                                                       scan_eight_bit_int;
                                                                                                                                                                                                                                                                                                                                                       begin_diagnostic;
                                                                                                                                                                                                                                                                                                                                                       print_nl('> \box');
                                                                                                                                                                                                                                                                                                                                                       print_int(cur_val);
                                                                                                                                                                                                                                                                                                                                                       print_char('=');
                                                                                                                                                                                                                                                                                                                                                       If box(cur_val)=null Then print('void')
                                                                                                                                                                                                                                                                                                                                                       Else show_box(box(cur_val));
                                                                                                                                                                                                                                                                                                                                                     End

(*FIN INSERT 'Show the current contents of a box'*)                                                                                                                                                                                                                                                                                   ;
                                                                                                                                                                                                                                                                                                                                      show_code:
(*INSERT 'Show the current meaning of a token, then |goto common_ending|'*)(*PASCAL module 1294*)
                                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                                   get_token;
                                                                                                                                                                                                                                                                                                                                                   If interaction=error_stop_mode Then wake_up_terminal;
                                                                                                                                                                                                                                                                                                                                                   print_nl('> ');
                                                                                                                                                                                                                                                                                                                                                   If cur_cs<>0 Then
                                                                                                                                                                                                                                                                                                                                                     Begin
                                                                                                                                                                                                                                                                                                                                                       sprint_cs(cur_cs);
                                                                                                                                                                                                                                                                                                                                                       print_char('=');
                                                                                                                                                                                                                                                                                                                                                     End;
                                                                                                                                                                                                                                                                                                                                                   print_meaning;
                                                                                                                                                                                                                                                                                                                                                   goto common_ending;
                                                                                                                                                                                                                                                                                                                                                 End

(*FIN INSERT 'Show the current meaning of a token, then |goto common_ending|'*)                                                                                                                                                                                                                                                       ;
                                                                                                                                                                                                                                                                                                                                      othercases
(*INSERT 'Show the current value of some parameter or register, then |goto common_ending|'*)(*PASCAL module 1297*)
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        p := the_toks;
                                                                                                                                                                                                                                                                                                                                        If interaction=error_stop_mode Then wake_up_terminal;
                                                                                                                                                                                                                                                                                                                                        print_nl('> ');
                                                                                                                                                                                                                                                                                                                                        token_show(temp_head);
                                                                                                                                                                                                                                                                                                                                        flush_list(link(temp_head));
                                                                                                                                                                                                                                                                                                                                        goto common_ending;
                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Show the current value of some parameter or register, then |goto common_ending|'*)
                                                                                                                                                                                                                                                                                                                                      endcases;


(*INSERT 'Complete a potentially long \.{\\show} command'*)(*PASCAL module 1298*)
                                                                                                                                                                                                                                                                                                                                      end_diagnostic(true);
                                                                                                                                                                                                                                                                                                                                      print_err('OK');
(*OK*)
                                                                                                                                                                                                                                                                                                                                      If selector=term_and_log Then If tracing_online<=0 Then
                                                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                                                        selector := term_only;
                                                                                                                                                                                                                                                                                                                                                                        print(' (see the transcript file)');
                                                                                                                                                                                                                                                                                                                                                                        selector := term_and_log;
                                                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Complete a potentially long \.{\\show} command'*)                                                                                                                                                                                                                                                                       ;
                                                                                                                                                                                                                                                                                                                                      common_ending: If interaction<error_stop_mode Then
                                                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                                                         help0;
                                                                                                                                                                                                                                                                                                                                                         decr(error_count);
                                                                                                                                                                                                                                                                                                                                                       End
                                                                                                                                                                                                                                                                                                                                                     Else If tracing_online>0 Then
                                                                                                                                                                                                                                                                                                                                                            Begin
(**)                                                                                                                                                                                                                                                                                                                                                          ;

                                                                                                                                                                                                                                                                                                                                                              help3('This isn''t an error message; I''m just \showing something.')

                                                                                                                                                                                                                                                                                                                                                              ('Type `I\show...'' to show more (e.g., \show\cs,')

                                                                                                                                                                                                                                                                                                                                                              ('\showthe\count10, \showbox255, \showlists).');
                                                                                                                                                                                                                                                                                                                                                            End
                                                                                                                                                                                                                                                                                                                                                     Else
                                                                                                                                                                                                                                                                                                                                                       Begin
(**)                                                                                                                                                                                                                                                                                                                                                     ;

                                                                                                                                                                                                                                                                                                                                                         help5('This isn''t an error message; I''m just \showing something.')

                                                                                                                                                                                                                                                                                                                                                         ('Type `I\show...'' to show more (e.g., \show\cs,')

                                                                                                                                                                                                                                                                                                                                                         ('\showthe\count10, \showbox255, \showlists).')

                                                                                                                                                                                                                                                                                                                                                         ('And type `I\tracingonline=1\show...'' to show boxes and')

                                                                                                                                                                                                                                                                                                                                                         ('lists on your terminal as well as in the transcript file.');
                                                                                                                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                                                                                                                      error;
                                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1302*)
                                                                                                                                                                                                                                                                                                                                    init Procedure store_fmt_file;

                                                                                                                                                                                                                                                                                                                                    Label found1,found2,done1,done2;

                                                                                                                                                                                                                                                                                                                                    Var j,k,l: integer; {all-purpose indices}
                                                                                                                                                                                                                                                                                                                                      p,q: pointer; {all-purpose pointers}
                                                                                                                                                                                                                                                                                                                                      x: integer; {something to dump}
                                                                                                                                                                                                                                                                                                                                      w: four_quarters; {four ASCII codes}
                                                                                                                                                                                                                                                                                                                                    Begin
(*INSERT 'If dumping is not allowed, abort'*)(*PASCAL module 1304*)
                                                                                                                                                                                                                                                                                                                                      If save_ptr<>0 Then
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          print_err('You can''t dump inside a group');
(*You can''t dump...*)
                                                                                                                                                                                                                                                                                                                                          help1('`{...\dump}'' is a no-no.');
                                                                                                                                                                                                                                                                                                                                          succumb;
                                                                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'If dumping is not allowed, abort'*)                                                                                                                                                                                                                                                                                     ;

(*INSERT 'Create the |format_ident|, open the format file, and inform the user that dumping has begun'*)(*PASCAL module 1328*)
                                                                                                                                                                                                                                                                                                                                      selector := new_string;
                                                                                                                                                                                                                                                                                                                                      print(' (preloaded format=');
                                                                                                                                                                                                                                                                                                                                      print(job_name);
                                                                                                                                                                                                                                                                                                                                      print_char(' ');
                                                                                                                                                                                                                                                                                                                                      print_int(year);
                                                                                                                                                                                                                                                                                                                                      print_char('.');
                                                                                                                                                                                                                                                                                                                                      print_int(month);
                                                                                                                                                                                                                                                                                                                                      print_char('.');
                                                                                                                                                                                                                                                                                                                                      print_int(day);
                                                                                                                                                                                                                                                                                                                                      print_char(')');
                                                                                                                                                                                                                                                                                                                                      If interaction=batch_mode Then selector := log_only
                                                                                                                                                                                                                                                                                                                                      Else selector := term_and_log;
                                                                                                                                                                                                                                                                                                                                      str_room(1);
                                                                                                                                                                                                                                                                                                                                      format_ident := make_string;
                                                                                                                                                                                                                                                                                                                                      pack_job_name(format_extension);
                                                                                                                                                                                                                                                                                                                                      While Not w_open_out(fmt_file) Do
                                                                                                                                                                                                                                                                                                                                        prompt_file_name('format file name',format_extension);
                                                                                                                                                                                                                                                                                                                                      print_nl('Beginning to dump on file ');
(*Beginning to dump...*)
                                                                                                                                                                                                                                                                                                                                      slow_print(w_make_name_string(fmt_file));
                                                                                                                                                                                                                                                                                                                                      flush_string;
                                                                                                                                                                                                                                                                                                                                      print_nl('');
                                                                                                                                                                                                                                                                                                                                      slow_print(format_ident)

(*FIN INSERT 'Create the |format_ident|, open the format file, and inform the user that dumping has begun'*)                                                                                                                                                                                                                          ;

(*INSERT 'Dump constants for consistency check'*)(*PASCAL module 1307*)
                                                                                                                                                                                                                                                                                                                                      dump_int(@$);

                                                                                                                                                                                                                                                                                                                                      dump_int(mem_bot);

                                                                                                                                                                                                                                                                                                                                      dump_int(mem_top);

                                                                                                                                                                                                                                                                                                                                      dump_int(eqtb_size);

                                                                                                                                                                                                                                                                                                                                      dump_int(hash_prime);

                                                                                                                                                                                                                                                                                                                                      dump_int(hyph_size)

(*FIN INSERT 'Dump constants for consistency check'*)                                                                                                                                                                                                                                                                                 ;

(*INSERT 'Dump the string pool'*)(*PASCAL module 1309*)
                                                                                                                                                                                                                                                                                                                                      dump_int(pool_ptr);
                                                                                                                                                                                                                                                                                                                                      dump_int(str_ptr);
                                                                                                                                                                                                                                                                                                                                      For k:=0 To str_ptr Do
                                                                                                                                                                                                                                                                                                                                        dump_int(str_start[k]);
                                                                                                                                                                                                                                                                                                                                      k := 0;
                                                                                                                                                                                                                                                                                                                                      While k+4<pool_ptr Do
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          dump_four_ASCII;
                                                                                                                                                                                                                                                                                                                                          k := k+4;
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      k := pool_ptr-4;
                                                                                                                                                                                                                                                                                                                                      dump_four_ASCII;
                                                                                                                                                                                                                                                                                                                                      print_ln;
                                                                                                                                                                                                                                                                                                                                      print_int(str_ptr);
                                                                                                                                                                                                                                                                                                                                      print(' strings of total length ');
                                                                                                                                                                                                                                                                                                                                      print_int(pool_ptr)

(*FIN INSERT 'Dump the string pool'*)                                                                                                                                                                                                                                                                                                 ;

(*INSERT 'Dump the dynamic memory'*)(*PASCAL module 1311*)
                                                                                                                                                                                                                                                                                                                                      sort_avail;
                                                                                                                                                                                                                                                                                                                                      var_used := 0;
                                                                                                                                                                                                                                                                                                                                      dump_int(lo_mem_max);
                                                                                                                                                                                                                                                                                                                                      dump_int(rover);
                                                                                                                                                                                                                                                                                                                                      p := mem_bot;
                                                                                                                                                                                                                                                                                                                                      q := rover;
                                                                                                                                                                                                                                                                                                                                      x := 0;
                                                                                                                                                                                                                                                                                                                                      Repeat
                                                                                                                                                                                                                                                                                                                                        For k:=p To q+1 Do
                                                                                                                                                                                                                                                                                                                                          dump_wd(mem[k]);
                                                                                                                                                                                                                                                                                                                                        x := x+q+2-p;
                                                                                                                                                                                                                                                                                                                                        var_used := var_used+q-p;
                                                                                                                                                                                                                                                                                                                                        p := q+node_size(q);
                                                                                                                                                                                                                                                                                                                                        q := rlink(q);
                                                                                                                                                                                                                                                                                                                                      Until q=rover;
                                                                                                                                                                                                                                                                                                                                      var_used := var_used+lo_mem_max-p;
                                                                                                                                                                                                                                                                                                                                      dyn_used := mem_end+1-hi_mem_min;

                                                                                                                                                                                                                                                                                                                                      For k:=p To lo_mem_max Do
                                                                                                                                                                                                                                                                                                                                        dump_wd(mem[k]);
                                                                                                                                                                                                                                                                                                                                      x := x+lo_mem_max+1-p;
                                                                                                                                                                                                                                                                                                                                      dump_int(hi_mem_min);
                                                                                                                                                                                                                                                                                                                                      dump_int(avail);
                                                                                                                                                                                                                                                                                                                                      For k:=hi_mem_min To mem_end Do
                                                                                                                                                                                                                                                                                                                                        dump_wd(mem[k]);
                                                                                                                                                                                                                                                                                                                                      x := x+mem_end+1-hi_mem_min;
                                                                                                                                                                                                                                                                                                                                      p := avail;
                                                                                                                                                                                                                                                                                                                                      While p<>null Do
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          decr(dyn_used);
                                                                                                                                                                                                                                                                                                                                          p := link(p);
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      dump_int(var_used);
                                                                                                                                                                                                                                                                                                                                      dump_int(dyn_used);
                                                                                                                                                                                                                                                                                                                                      print_ln;
                                                                                                                                                                                                                                                                                                                                      print_int(x);
                                                                                                                                                                                                                                                                                                                                      print(' memory locations dumped; current usage is ');
                                                                                                                                                                                                                                                                                                                                      print_int(var_used);
                                                                                                                                                                                                                                                                                                                                      print_char('&');
                                                                                                                                                                                                                                                                                                                                      print_int(dyn_used)

(*FIN INSERT 'Dump the dynamic memory'*)                                                                                                                                                                                                                                                                                              ;

(*INSERT 'Dump the table of equivalents'*)(*PASCAL module 1313*)

(*INSERT 'Dump regions 1 to 4 of |eqtb|'*)(*PASCAL module 1315*)
                                                                                                                                                                                                                                                                                                                                      k := active_base;
                                                                                                                                                                                                                                                                                                                                      Repeat
                                                                                                                                                                                                                                                                                                                                        j := k;
                                                                                                                                                                                                                                                                                                                                        While j<int_base-1 Do
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            If (equiv(j)=equiv(j+1))And(eq_type(j)=eq_type(j+1))And
                                                                                                                                                                                                                                                                                                                                               (eq_level(j)=eq_level(j+1)) Then goto found1;
                                                                                                                                                                                                                                                                                                                                            incr(j);
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        l := int_base;
                                                                                                                                                                                                                                                                                                                                        goto done1; {|j=int_base-1|}
                                                                                                                                                                                                                                                                                                                                        found1: incr(j);
                                                                                                                                                                                                                                                                                                                                        l := j;
                                                                                                                                                                                                                                                                                                                                        While j<int_base-1 Do
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            If (equiv(j)<>equiv(j+1))Or(eq_type(j)<>eq_type(j+1))Or
                                                                                                                                                                                                                                                                                                                                               (eq_level(j)<>eq_level(j+1)) Then goto done1;
                                                                                                                                                                                                                                                                                                                                            incr(j);
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        done1: dump_int(l-k);
                                                                                                                                                                                                                                                                                                                                        While k<l Do
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            dump_wd(eqtb[k]);
                                                                                                                                                                                                                                                                                                                                            incr(k);
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        k := j+1;
                                                                                                                                                                                                                                                                                                                                        dump_int(k-l);
                                                                                                                                                                                                                                                                                                                                      Until k=int_base

(*FIN INSERT 'Dump regions 1 to 4 of |eqtb|'*)                                                                                                                                                                                                                                                                                        ;

(*INSERT 'Dump regions 5 and 6 of |eqtb|'*)(*PASCAL module 1316*)
                                                                                                                                                                                                                                                                                                                                      Repeat
                                                                                                                                                                                                                                                                                                                                        j := k;
                                                                                                                                                                                                                                                                                                                                        While j<eqtb_size Do
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            If eqtb[j].int=eqtb[j+1].int Then goto found2;
                                                                                                                                                                                                                                                                                                                                            incr(j);
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        l := eqtb_size+1;
                                                                                                                                                                                                                                                                                                                                        goto done2; {|j=eqtb_size|}
                                                                                                                                                                                                                                                                                                                                        found2: incr(j);
                                                                                                                                                                                                                                                                                                                                        l := j;
                                                                                                                                                                                                                                                                                                                                        While j<eqtb_size Do
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            If eqtb[j].int<>eqtb[j+1].int Then goto done2;
                                                                                                                                                                                                                                                                                                                                            incr(j);
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        done2: dump_int(l-k);
                                                                                                                                                                                                                                                                                                                                        While k<l Do
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            dump_wd(eqtb[k]);
                                                                                                                                                                                                                                                                                                                                            incr(k);
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        k := j+1;
                                                                                                                                                                                                                                                                                                                                        dump_int(k-l);
                                                                                                                                                                                                                                                                                                                                      Until k>eqtb_size

(*FIN INSERT 'Dump regions 5 and 6 of |eqtb|'*)                                                                                                                                                                                                                                                                                       ;
                                                                                                                                                                                                                                                                                                                                      dump_int(par_loc);
                                                                                                                                                                                                                                                                                                                                      dump_int(write_loc);


(*INSERT 'Dump the hash table'*)(*PASCAL module 1318*)
                                                                                                                                                                                                                                                                                                                                      dump_int(hash_used);
                                                                                                                                                                                                                                                                                                                                      cs_count := frozen_control_sequence-1-hash_used;
                                                                                                                                                                                                                                                                                                                                      For p:=hash_base To hash_used Do
                                                                                                                                                                                                                                                                                                                                        If text(p)<>0 Then
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            dump_int(p);
                                                                                                                                                                                                                                                                                                                                            dump_hh(hash[p]);
                                                                                                                                                                                                                                                                                                                                            incr(cs_count);
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                      For p:=hash_used+1 To undefined_control_sequence-1 Do
                                                                                                                                                                                                                                                                                                                                        dump_hh(hash[p]);
                                                                                                                                                                                                                                                                                                                                      dump_int(cs_count);

                                                                                                                                                                                                                                                                                                                                      print_ln;
                                                                                                                                                                                                                                                                                                                                      print_int(cs_count);
                                                                                                                                                                                                                                                                                                                                      print(' multiletter control sequences')

(*FIN INSERT 'Dump the hash table'*)

(*FIN INSERT 'Dump the table of equivalents'*)                                                                                                                                                                                                                                                                                        ;

(*INSERT 'Dump the font information'*)(*PASCAL module 1320*)
                                                                                                                                                                                                                                                                                                                                      dump_int(fmem_ptr);
                                                                                                                                                                                                                                                                                                                                      For k:=0 To fmem_ptr-1 Do
                                                                                                                                                                                                                                                                                                                                        dump_wd(font_info[k]);
                                                                                                                                                                                                                                                                                                                                      dump_int(font_ptr);
                                                                                                                                                                                                                                                                                                                                      For k:=null_font To font_ptr Do

(*INSERT 'Dump the array info for internal font number |k|'*)(*PASCAL module 1322*)
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          dump_qqqq(font_check[k]);
                                                                                                                                                                                                                                                                                                                                          dump_int(font_size[k]);
                                                                                                                                                                                                                                                                                                                                          dump_int(font_dsize[k]);
                                                                                                                                                                                                                                                                                                                                          dump_int(font_params[k]);

                                                                                                                                                                                                                                                                                                                                          dump_int(hyphen_char[k]);
                                                                                                                                                                                                                                                                                                                                          dump_int(skew_char[k]);

                                                                                                                                                                                                                                                                                                                                          dump_int(font_name[k]);
                                                                                                                                                                                                                                                                                                                                          dump_int(font_area[k]);

                                                                                                                                                                                                                                                                                                                                          dump_int(font_bc[k]);
                                                                                                                                                                                                                                                                                                                                          dump_int(font_ec[k]);

                                                                                                                                                                                                                                                                                                                                          dump_int(char_base[k]);
                                                                                                                                                                                                                                                                                                                                          dump_int(width_base[k]);
                                                                                                                                                                                                                                                                                                                                          dump_int(height_base[k]);

                                                                                                                                                                                                                                                                                                                                          dump_int(depth_base[k]);
                                                                                                                                                                                                                                                                                                                                          dump_int(italic_base[k]);
                                                                                                                                                                                                                                                                                                                                          dump_int(lig_kern_base[k]);

                                                                                                                                                                                                                                                                                                                                          dump_int(kern_base[k]);
                                                                                                                                                                                                                                                                                                                                          dump_int(exten_base[k]);
                                                                                                                                                                                                                                                                                                                                          dump_int(param_base[k]);

                                                                                                                                                                                                                                                                                                                                          dump_int(font_glue[k]);

                                                                                                                                                                                                                                                                                                                                          dump_int(bchar_label[k]);
                                                                                                                                                                                                                                                                                                                                          dump_int(font_bchar[k]);
                                                                                                                                                                                                                                                                                                                                          dump_int(font_false_bchar[k]);

                                                                                                                                                                                                                                                                                                                                          print_nl('\font');
                                                                                                                                                                                                                                                                                                                                          print_esc(font_id_text(k));
                                                                                                                                                                                                                                                                                                                                          print_char('=');
                                                                                                                                                                                                                                                                                                                                          print_file_name(font_name[k],font_area[k],'');
                                                                                                                                                                                                                                                                                                                                          If font_size[k]<>font_dsize[k] Then
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              print(' at ');
                                                                                                                                                                                                                                                                                                                                              print_scaled(font_size[k]);
                                                                                                                                                                                                                                                                                                                                              print('pt');
                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'Dump the array info for internal font number |k|'*)                                                                                                                                                                                                                                                                     ;
                                                                                                                                                                                                                                                                                                                                      print_ln;
                                                                                                                                                                                                                                                                                                                                      print_int(fmem_ptr-7);
                                                                                                                                                                                                                                                                                                                                      print(' words of font info for ');
                                                                                                                                                                                                                                                                                                                                      print_int(font_ptr-font_base);
                                                                                                                                                                                                                                                                                                                                      print(' preloaded font');
                                                                                                                                                                                                                                                                                                                                      If font_ptr<>font_base+1 Then print_char('s')

(*FIN INSERT 'Dump the font information'*)                                                                                                                                                                                                                                                                                            ;

(*INSERT 'Dump the hyphenation tables'*)(*PASCAL module 1324*)
                                                                                                                                                                                                                                                                                                                                      dump_int(hyph_count);
                                                                                                                                                                                                                                                                                                                                      For k:=0 To hyph_size Do
                                                                                                                                                                                                                                                                                                                                        If hyph_word[k]<>0 Then
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            dump_int(k);
                                                                                                                                                                                                                                                                                                                                            dump_int(hyph_word[k]);
                                                                                                                                                                                                                                                                                                                                            dump_int(hyph_list[k]);
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                      print_ln;
                                                                                                                                                                                                                                                                                                                                      print_int(hyph_count);
                                                                                                                                                                                                                                                                                                                                      print(' hyphenation exception');
                                                                                                                                                                                                                                                                                                                                      If hyph_count<>1 Then print_char('s');
                                                                                                                                                                                                                                                                                                                                      If trie_not_ready Then init_trie;
                                                                                                                                                                                                                                                                                                                                      dump_int(trie_max);
                                                                                                                                                                                                                                                                                                                                      For k:=0 To trie_max Do
                                                                                                                                                                                                                                                                                                                                        dump_hh(trie[k]);
                                                                                                                                                                                                                                                                                                                                      dump_int(trie_op_ptr);
                                                                                                                                                                                                                                                                                                                                      For k:=1 To trie_op_ptr Do
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          dump_int(hyf_distance[k]);
                                                                                                                                                                                                                                                                                                                                          dump_int(hyf_num[k]);
                                                                                                                                                                                                                                                                                                                                          dump_int(hyf_next[k]);
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      print_nl('Hyphenation trie of length ');
                                                                                                                                                                                                                                                                                                                                      print_int(trie_max);
(*Hyphenation trie...*)
                                                                                                                                                                                                                                                                                                                                      print(' has ');
                                                                                                                                                                                                                                                                                                                                      print_int(trie_op_ptr);
                                                                                                                                                                                                                                                                                                                                      print(' op');
                                                                                                                                                                                                                                                                                                                                      If trie_op_ptr<>1 Then print_char('s');
                                                                                                                                                                                                                                                                                                                                      print(' out of ');
                                                                                                                                                                                                                                                                                                                                      print_int(trie_op_size);
                                                                                                                                                                                                                                                                                                                                      For k:=255 Downto 0 Do
                                                                                                                                                                                                                                                                                                                                        If trie_used[k]>min_quarterword Then
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            print_nl('  ');
                                                                                                                                                                                                                                                                                                                                            print_int(qo(trie_used[k]));
                                                                                                                                                                                                                                                                                                                                            print(' for language ');
                                                                                                                                                                                                                                                                                                                                            print_int(k);
                                                                                                                                                                                                                                                                                                                                            dump_int(k);
                                                                                                                                                                                                                                                                                                                                            dump_int(qo(trie_used[k]));
                                                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Dump the hyphenation tables'*)                                                                                                                                                                                                                                                                                          ;

(*INSERT 'Dump a couple more things and the closing check word'*)(*PASCAL module 1326*)
                                                                                                                                                                                                                                                                                                                                      dump_int(interaction);
                                                                                                                                                                                                                                                                                                                                      dump_int(format_ident);
                                                                                                                                                                                                                                                                                                                                      dump_int(69069);
                                                                                                                                                                                                                                                                                                                                      tracing_stats := 0

(*FIN INSERT 'Dump a couple more things and the closing check word'*)                                                                                                                                                                                                                                                                 ;

(*INSERT 'Close the format file'*)(*PASCAL module 1329*)
                                                                                                                                                                                                                                                                                                                                      w_close(fmt_file)

(*FIN INSERT 'Close the format file'*)                                                                                                                                                                                                                                                                                                ;
                                                                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                                                                                    tini

(*PASCAL module 1348*)
(*\4*)
(*INSERT 'Declare procedures needed in |do_extension|'*)(*PASCAL module 1349*)
                                                                                                                                                                                                                                                                                                                                    Procedure new_whatsit(s:small_number;w:small_number);

                                                                                                                                                                                                                                                                                                                                    Var p: pointer; {the new node}
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      p := get_node(w);

                                                                                                                                                                                                                                                                                                                                      Type (p) := whatsit_node;
                                                                                                                                                                                                                                                                                                                                        subtype(p) := s;
                                                                                                                                                                                                                                                                                                                                        link(tail) := p;
                                                                                                                                                                                                                                                                                                                                        tail := p;
                                                                                                                                                                                                                                                                                                                                      End;

(*PASCAL module 1350*)
                                                                                                                                                                                                                                                                                                                                      Procedure new_write_whatsit(w:small_number);
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        new_whatsit(cur_chr,w);
                                                                                                                                                                                                                                                                                                                                        If w<>write_node_size Then scan_four_bit_int
                                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            scan_int;
                                                                                                                                                                                                                                                                                                                                            If cur_val<0 Then cur_val := 17
                                                                                                                                                                                                                                                                                                                                            Else If cur_val>15 Then cur_val := 16;
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        write_stream(tail) := cur_val;
                                                                                                                                                                                                                                                                                                                                      End;

(*FIN INSERT 'Declare procedures needed in |do_extension|'*)                                                                                                                                                                                                                                                                          ;
                                                                                                                                                                                                                                                                                                                                      Procedure do_extension;

                                                                                                                                                                                                                                                                                                                                      Var i,j,k: integer; {all-purpose integers}
                                                                                                                                                                                                                                                                                                                                        p,q,r: pointer; {all-purpose pointers}
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        Case cur_chr Of 
                                                                                                                                                                                                                                                                                                                                          open_node:
(*INSERT 'Implement \.{\\openout}'*)(*PASCAL module 1351*)
                                                                                                                                                                                                                                                                                                                                                     Begin
                                                                                                                                                                                                                                                                                                                                                       new_write_whatsit(open_node_size);
                                                                                                                                                                                                                                                                                                                                                       scan_optional_equals;
                                                                                                                                                                                                                                                                                                                                                       scan_file_name;

                                                                                                                                                                                                                                                                                                                                                       open_name(tail) := cur_name;
                                                                                                                                                                                                                                                                                                                                                       open_area(tail) := cur_area;
                                                                                                                                                                                                                                                                                                                                                       open_ext(tail) := cur_ext;
                                                                                                                                                                                                                                                                                                                                                     End

(*FIN INSERT 'Implement \.{\\openout}'*)                                                                                                                                                                                                                                                                                                  ;
                                                                                                                                                                                                                                                                                                                                          write_node:
(*INSERT 'Implement \.{\\write}'*)(*PASCAL module 1352*)
                                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                                        k := cur_cs;
                                                                                                                                                                                                                                                                                                                                                        new_write_whatsit(write_node_size);

                                                                                                                                                                                                                                                                                                                                                        cur_cs := k;
                                                                                                                                                                                                                                                                                                                                                        p := scan_toks(false,false);
                                                                                                                                                                                                                                                                                                                                                        write_tokens(tail) := def_ref;
                                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Implement \.{\\write}'*)                                                                                                                                                                                                                                                                                                    ;
                                                                                                                                                                                                                                                                                                                                          close_node:
(*INSERT 'Implement \.{\\closeout}'*)(*PASCAL module 1353*)
                                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                                        new_write_whatsit(write_node_size);
                                                                                                                                                                                                                                                                                                                                                        write_tokens(tail) := null;
                                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Implement \.{\\closeout}'*)                                                                                                                                                                                                                                                                                                 ;
                                                                                                                                                                                                                                                                                                                                          special_node:
(*INSERT 'Implement \.{\\special}'*)(*PASCAL module 1354*)
                                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                                          new_whatsit(special_node,write_node_size);
                                                                                                                                                                                                                                                                                                                                                          write_stream(tail) := null;
                                                                                                                                                                                                                                                                                                                                                          p := scan_toks(false,true);
                                                                                                                                                                                                                                                                                                                                                          write_tokens(tail) := def_ref;
                                                                                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'Implement \.{\\special}'*)                                                                                                                                                                                                                                                                                                  ;
                                                                                                                                                                                                                                                                                                                                          immediate_code:
(*INSERT 'Implement \.{\\immediate}'*)(*PASCAL module 1375*)
                                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                                            get_x_token;
                                                                                                                                                                                                                                                                                                                                                            If (cur_cmd=extension)And(cur_chr<=close_node) Then
                                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                                p := tail;
                                                                                                                                                                                                                                                                                                                                                                do_extension; {append a whatsit node}
                                                                                                                                                                                                                                                                                                                                                                out_what(tail); {do the action immediately}
                                                                                                                                                                                                                                                                                                                                                                flush_node_list(tail);
                                                                                                                                                                                                                                                                                                                                                                tail := p;
                                                                                                                                                                                                                                                                                                                                                                link(p) := null;
                                                                                                                                                                                                                                                                                                                                                              End
                                                                                                                                                                                                                                                                                                                                                            Else back_input;
                                                                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Implement \.{\\immediate}'*)                                                                                                                                                                                                                                                                                                ;
                                                                                                                                                                                                                                                                                                                                          set_language_code:
(*INSERT 'Implement \.{\\setlanguage}'*)(*PASCAL module 1377*)
                                                                                                                                                                                                                                                                                                                                                             If abs(mode)<>hmode Then report_illegal_case
                                                                                                                                                                                                                                                                                                                                                             Else
                                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                                 new_whatsit(language_node,small_node_size);
                                                                                                                                                                                                                                                                                                                                                                 scan_int;
                                                                                                                                                                                                                                                                                                                                                                 If cur_val<=0 Then clang := 0
                                                                                                                                                                                                                                                                                                                                                                 Else If cur_val>255 Then clang := 0
                                                                                                                                                                                                                                                                                                                                                                 Else clang := cur_val;
                                                                                                                                                                                                                                                                                                                                                                 what_lang(tail) := clang;
                                                                                                                                                                                                                                                                                                                                                                 what_lhm(tail) := norm_min(left_hyphen_min);
                                                                                                                                                                                                                                                                                                                                                                 what_rhm(tail) := norm_min(right_hyphen_min);
                                                                                                                                                                                                                                                                                                                                                               End

(*FIN INSERT 'Implement \.{\\setlanguage}'*)                                                                                                                                                                                                                                                                                              ;
                                                                                                                                                                                                                                                                                                                                          othercases confusion('ext1')
(*this can''t happen ext1][\quad ext1*)
                                                                                                                                                                                                                                                                                                                                          endcases;
                                                                                                                                                                                                                                                                                                                                        End;

(*PASCAL module 1376*)
                                                                                                                                                                                                                                                                                                                                        Procedure fix_language;

                                                                                                                                                                                                                                                                                                                                        Var l: ASCII_code; {the new current language}
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          If language<=0 Then l := 0
                                                                                                                                                                                                                                                                                                                                          Else If language>255 Then l := 0
                                                                                                                                                                                                                                                                                                                                          Else l := language;
                                                                                                                                                                                                                                                                                                                                          If l<>clang Then
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              new_whatsit(language_node,small_node_size);
                                                                                                                                                                                                                                                                                                                                              what_lang(tail) := l;
                                                                                                                                                                                                                                                                                                                                              clang := l;

                                                                                                                                                                                                                                                                                                                                              what_lhm(tail) := norm_min(left_hyphen_min);
                                                                                                                                                                                                                                                                                                                                              what_rhm(tail) := norm_min(right_hyphen_min);
                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                        End;

(*FIN INSERT 'Declare action procedures for use by |main_control|'*)                                                                                                                                                                                                                                                                    ;
(*\4*)
(*INSERT 'Declare the procedure called |handle_right_brace|'*)(*PASCAL module 1068*)
                                                                                                                                                                                                                                                                                                                                        Procedure handle_right_brace;

                                                                                                                                                                                                                                                                                                                                        Var p,q: pointer; {for short-term use}
                                                                                                                                                                                                                                                                                                                                          d: scaled; {holds |split_max_depth| in |insert_group|}
                                                                                                                                                                                                                                                                                                                                          f: integer; {holds |floating_penalty| in |insert_group|}
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          Case cur_group Of 
                                                                                                                                                                                                                                                                                                                                            simple_group: unsave;
                                                                                                                                                                                                                                                                                                                                            bottom_level:
                                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                                            print_err('Too many }''s');
(*Too many \]''s*)

                                                                                                                                                                                                                                                                                                                                                            help2('You''ve closed more groups than you opened.')

                                                                                                                                                                                                                                                                                                                                                            ('Such booboos are generally harmless, so keep going.');
                                                                                                                                                                                                                                                                                                                                                            error;
                                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                            semi_simple_group,math_shift_group,math_left_group: extra_right_brace;
(*\4*)
(*INSERT 'Cases of |handle_right_brace| where a |right_brace| triggers a delayed action'*)(*PASCAL module 1085*)
                                                                                                                                                                                                                                                                                                                                            hbox_group: package(0);
                                                                                                                                                                                                                                                                                                                                            adjusted_hbox_group:
                                                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                                                   adjust_tail := adjust_head;
                                                                                                                                                                                                                                                                                                                                                                   package(0);
                                                                                                                                                                                                                                                                                                                                                                 End;
                                                                                                                                                                                                                                                                                                                                            vbox_group:
                                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                                          end_graf;
                                                                                                                                                                                                                                                                                                                                                          package(0);
                                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                            vtop_group:
                                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                                          end_graf;
                                                                                                                                                                                                                                                                                                                                                          package(vtop_code);
                                                                                                                                                                                                                                                                                                                                                        End;

(*PASCAL module 1100*)
                                                                                                                                                                                                                                                                                                                                            insert_group:
                                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                                            end_graf;
                                                                                                                                                                                                                                                                                                                                                            q := split_top_skip;
                                                                                                                                                                                                                                                                                                                                                            add_glue_ref(q);
                                                                                                                                                                                                                                                                                                                                                            d := split_max_depth;
                                                                                                                                                                                                                                                                                                                                                            f := floating_penalty;
                                                                                                                                                                                                                                                                                                                                                            unsave;
                                                                                                                                                                                                                                                                                                                                                            decr(save_ptr);
  {now |saved(0)| is the insertion number, or 255 for |vadjust|}
                                                                                                                                                                                                                                                                                                                                                            p := vpack(link(head),natural);
                                                                                                                                                                                                                                                                                                                                                            pop_nest;
                                                                                                                                                                                                                                                                                                                                                            If saved(0)<255 Then
                                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                                tail_append(get_node(ins_node_size));

                                                                                                                                                                                                                                                                                                                                                            Type (tail) := ins_node;
                                                                                                                                                                                                                                                                                                                                                              subtype(tail) := qi(saved(0));
                                                                                                                                                                                                                                                                                                                                                              height(tail) := height(p)+depth(p);
                                                                                                                                                                                                                                                                                                                                                              ins_ptr(tail) := list_ptr(p);
                                                                                                                                                                                                                                                                                                                                                              split_top_ptr(tail) := q;
                                                                                                                                                                                                                                                                                                                                                              depth(tail) := d;
                                                                                                                                                                                                                                                                                                                                                              float_cost(tail) := f;
                                                                                                                                                                                                                                                                                                                                                            End
                                                                                                                                                                                                                                                                                                                                                            Else
                                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                                tail_append(get_node(small_node_size));

                                                                                                                                                                                                                                                                                                                                                            Type (tail) := adjust_node;

                                                                                                                                                                                                                                                                                                                                                              subtype(tail) := 0; {the |subtype| is not used}
                                                                                                                                                                                                                                                                                                                                                              adjust_ptr(tail) := list_ptr(p);
                                                                                                                                                                                                                                                                                                                                                              delete_glue_ref(q);
                                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                                            free_node(p,box_node_size);
                                                                                                                                                                                                                                                                                                                                                            If nest_ptr=0 Then build_page;
                                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                            output_group:
(*INSERT 'Resume the page builder after an output routine has come to an end'*)(*PASCAL module 1026*)
                                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                                            If (loc<>null) Or
                                                                                                                                                                                                                                                                                                                                                               ((token_type<>output_text)And(token_type<>backed_up)) Then

(*INSERT 'Recover from an unbalanced output routine'*)(*PASCAL module 1027*)
                                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                                print_err('Unbalanced output routine');
(*Unbalanced output routine*)
                                                                                                                                                                                                                                                                                                                                                            help2('Your sneaky output routine has problematic {''s and/or }''s.')

                                                                                                                                                                                                                                                                                                                                                            ('I can''t handle that very well; good luck.');
                                                                                                                                                                                                                                                                                                                                                            error;
                                                                                                                                                                                                                                                                                                                                                            Repeat
                                                                                                                                                                                                                                                                                                                                                              get_token;
                                                                                                                                                                                                                                                                                                                                                            Until loc=null;
                                                                                                                                                                                                                                                                                                                                                          End {loops forever if reading from a file, since |null=min_halfword<=0|}

(*FIN INSERT 'Recover from an unbalanced output routine'*)                                                                                                                                                                                                                                                                                  ;
                                                                                                                                                                                                                                                                                                                                            end_token_list; {conserve stack space in case more outputs are triggered}
                                                                                                                                                                                                                                                                                                                                            end_graf;
                                                                                                                                                                                                                                                                                                                                            unsave;
                                                                                                                                                                                                                                                                                                                                            output_active := false;
                                                                                                                                                                                                                                                                                                                                            insert_penalties := 0;


(*INSERT 'Ensure that box 255 is empty after output'*)(*PASCAL module 1028*)
                                                                                                                                                                                                                                                                                                                                            If box(255)<>null Then
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                print_err('Output routine didn''t use all of ');
                                                                                                                                                                                                                                                                                                                                                print_esc('box');
                                                                                                                                                                                                                                                                                                                                                print_int(255);
(*Output routine didn''t use...*)
                                                                                                                                                                                                                                                                                                                                                help3('Your \output commands should empty \box255,')

                                                                                                                                                                                                                                                                                                                                                ('e.g., by saying `\shipout\box255''.')

                                                                                                                                                                                                                                                                                                                                                ('Proceed; I''ll discard its present contents.');
                                                                                                                                                                                                                                                                                                                                                box_error(255);
                                                                                                                                                                                                                                                                                                                                              End

(*FIN INSERT 'Ensure that box 255 is empty after output'*)                                                                                                                                                                                                                                                                                  ;
                                                                                                                                                                                                                                                                                                                                            If tail<>head Then {current list goes after heldover insertions}
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                link(page_tail) := link(head);
                                                                                                                                                                                                                                                                                                                                                page_tail := tail;
                                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                                                            If link(page_head)<>null Then {and both go before heldover contributions}
                                                                                                                                                                                                                                                                                                                                              Begin
                                                                                                                                                                                                                                                                                                                                                If link(contrib_head)=null Then contrib_tail := page_tail;
                                                                                                                                                                                                                                                                                                                                                link(page_tail) := link(contrib_head);
                                                                                                                                                                                                                                                                                                                                                link(contrib_head) := link(page_head);
                                                                                                                                                                                                                                                                                                                                                link(page_head) := null;
                                                                                                                                                                                                                                                                                                                                                page_tail := page_head;
                                                                                                                                                                                                                                                                                                                                              End;
                                                                                                                                                                                                                                                                                                                                            pop_nest;
                                                                                                                                                                                                                                                                                                                                            build_page;
                                                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Resume the page builder after an output routine has come to an end'*)                                                                                                                                                                                                                                                       ;

(*PASCAL module 1118*)
                                                                                                                                                                                                                                                                                                                                          disc_group: build_discretionary;

(*PASCAL module 1132*)
                                                                                                                                                                                                                                                                                                                                          align_group:
                                                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                                                         back_input;
                                                                                                                                                                                                                                                                                                                                                         cur_tok := cs_token_flag+frozen_cr;
                                                                                                                                                                                                                                                                                                                                                         print_err('Missing ');
                                                                                                                                                                                                                                                                                                                                                         print_esc('cr');
                                                                                                                                                                                                                                                                                                                                                         print(' inserted');
(*Missing \\cr inserted*)
                                                                                                                                                                                                                                                                                                                                                         help1('I''m guessing that you meant to end an alignment here.');
                                                                                                                                                                                                                                                                                                                                                         ins_error;
                                                                                                                                                                                                                                                                                                                                                       End;

(*PASCAL module 1133*)
                                                                                                                                                                                                                                                                                                                                          no_align_group:
                                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                                            end_graf;
                                                                                                                                                                                                                                                                                                                                                            unsave;
                                                                                                                                                                                                                                                                                                                                                            align_peek;
                                                                                                                                                                                                                                                                                                                                                          End;

(*PASCAL module 1168*)
                                                                                                                                                                                                                                                                                                                                          vcenter_group:
                                                                                                                                                                                                                                                                                                                                                         Begin
                                                                                                                                                                                                                                                                                                                                                           end_graf;
                                                                                                                                                                                                                                                                                                                                                           unsave;
                                                                                                                                                                                                                                                                                                                                                           save_ptr := save_ptr-2;
                                                                                                                                                                                                                                                                                                                                                           p := vpack(link(head),saved(1),saved(0));
                                                                                                                                                                                                                                                                                                                                                           pop_nest;
                                                                                                                                                                                                                                                                                                                                                           tail_append(new_noad);

                                                                                                                                                                                                                                                                                                                                                           Type (tail) := vcenter_noad;
                                                                                                                                                                                                                                                                                                                                                             math_type(nucleus(tail)) := sub_box;
                                                                                                                                                                                                                                                                                                                                                             info(nucleus(tail)) := p;
                                                                                                                                                                                                                                                                                                                                                           End;

(*PASCAL module 1173*)
                                                                                                                                                                                                                                                                                                                                                           math_choice_group: build_choices;

(*PASCAL module 1186*)
                                                                                                                                                                                                                                                                                                                                                           math_group:
                                                                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                                                                         unsave;
                                                                                                                                                                                                                                                                                                                                                                         decr(save_ptr);

                                                                                                                                                                                                                                                                                                                                                                         math_type(saved(0)) := sub_mlist;
                                                                                                                                                                                                                                                                                                                                                                         p := fin_mlist(null);
                                                                                                                                                                                                                                                                                                                                                                         info(saved(0)) := p;
                                                                                                                                                                                                                                                                                                                                                                         If p<>null Then If link(p)=null Then
                                                                                                                                                                                                                                                                                                                                                                         If Type(p)=ord_noad Then
                                                                                                                                                                                                                                                                                                                                                                         Begin
                                                                                                                                                                                                                                                                                                                                                                           If math_type(subscr(p))=empty Then
                                                                                                                                                                                                                                                                                                                                                                         If math_type(supscr(p))=empty Then
                                                                                                                                                                                                                                                                                                                                                                         Begin
                                                                                                                                                                                                                                                                                                                                                                           mem[saved(0)].hh := mem[nucleus(p)].hh;
                                                                                                                                                                                                                                                                                                                                                                         free_node(p,noad_size);
                                                                                                                                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                                                                                                                                         End
                                                                                                                                                                                                                                                                                                                                                         Else If Type(p)=accent_noad Then If saved(0)=nucleus(tail) Then
                                                                                                                                                                                                                                                                                                                                                                                            If Type(tail)=ord_noad Then
(*INSERT 'Replace the tail of the list by |p|'*)(*PASCAL module 1187*)
                                                                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                                                                              q := head;
                                                                                                                                                                                                                                                                                                                                          While link(q)<>tail Do
                                                                                                                                                                                                                                                                                                                                            q := link(q);
                                                                                                                                                                                                                                                                                                                                          link(q) := p;
                                                                                                                                                                                                                                                                                                                                          free_node(tail,noad_size);
                                                                                                                                                                                                                                                                                                                                          tail := p;
                                                                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'Replace the tail of the list by |p|'*)                                                                                                                                                                                                                                                                                    ;
                                                                                                                                                                                                                                                                                                                                      End;

(*FIN INSERT 'Cases of |handle_right_brace| where a |right_brace| triggers a delayed action'*)                                                                                                                                                                                                                                        ;
                                                                                                                                                                                                                                                                                                                                      othercases confusion('rightbrace')
(*this can''t happen rightbrace][\quad rightbrace*)
                                                                                                                                                                                                                                                                                                                                      endcases;
                                                                                                                                                                                                                                                                                                                                    End;

(*FIN INSERT 'Declare the procedure called |handle_right_brace|'*)                                                                                                                                                                                                                                                                  ;
                                                                                                                                                                                                                                                                                                                                    Procedure main_control; {governs \TeX's activities}

                                                                                                                                                                                                                                                                                                                                    Label big_switch,reswitch,main_loop,main_loop_wrapup,
                                                                                                                                                                                                                                                                                                                                      main_loop_move,main_loop_move+1,main_loop_move+2,main_loop_move_lig,
                                                                                                                                                                                                                                                                                                                                      main_loop_lookahead,main_loop_lookahead+1,
                                                                                                                                                                                                                                                                                                                                      main_lig_loop,main_lig_loop+1,main_lig_loop+2,
                                                                                                                                                                                                                                                                                                                                      append_normal_space,exit;
                                                                                                                                                                                                                                                                                                                                      vart: integer; {general-purpose temporary variable}
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      If every_job<>null Then begin_token_list(every_job,every_job_text);
                                                                                                                                                                                                                                                                                                                                      big_switch: get_x_token;

                                                                                                                                                                                                                                                                                                                                      reswitch:
(*INSERT 'Give diagnostic information, if requested'*)(*PASCAL module 1031*)
                                                                                                                                                                                                                                                                                                                                                If interrupt<>0 Then If OK_to_interrupt Then
                                                                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                                                                         back_input;
                                                                                                                                                                                                                                                                                                                                                                         check_interrupt;
                                                                                                                                                                                                                                                                                                                                                                         goto big_switch;
                                                                                                                                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                                                                                                                      debug If panicking Then check_mem(false);;
                                                                                                                                                                                                                                                                                                                                      gubed
                                                                                                                                                                                                                                                                                                                                      If tracing_commands>0 Then show_cur_cmd_chr

(*FIN INSERT 'Give diagnostic information, if requested'*)                                                                                                                                                                                                                                                                            ;
                                                                                                                                                                                                                                                                                                                                      Case abs(mode)+cur_cmd Of 
                                                                                                                                                                                                                                                                                                                                        hmode+letter,hmode+other_char,hmode+char_given: goto main_loop;
                                                                                                                                                                                                                                                                                                                                        hmode+char_num:
                                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                                          scan_char_num;
                                                                                                                                                                                                                                                                                                                                                          cur_chr := cur_val;
                                                                                                                                                                                                                                                                                                                                                          goto main_loop;
                                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                        hmode+no_boundary:
                                                                                                                                                                                                                                                                                                                                                           Begin
                                                                                                                                                                                                                                                                                                                                                             get_x_token;
                                                                                                                                                                                                                                                                                                                                                             If (cur_cmd=letter)Or(cur_cmd=other_char)Or(cur_cmd=char_given)Or
                                                                                                                                                                                                                                                                                                                                                                (cur_cmd=char_num) Then cancel_boundary := true;
                                                                                                                                                                                                                                                                                                                                                             goto reswitch;
                                                                                                                                                                                                                                                                                                                                                           End;
                                                                                                                                                                                                                                                                                                                                        hmode+spacer: If space_factor=1000 Then goto append_normal_space
                                                                                                                                                                                                                                                                                                                                                      Else app_space;
                                                                                                                                                                                                                                                                                                                                        hmode+ex_space,mmode+ex_space: goto append_normal_space;
(*\4*)
(*INSERT 'Cases of |main_control| that are not part of the inner loop'*)(*PASCAL module 1045*)
                                                                                                                                                                                                                                                                                                                                        any_mode(relax),vmode+spacer,mmode+spacer,mmode+no_boundary: do_nothing;
                                                                                                                                                                                                                                                                                                                                        any_mode(ignore_spaces):
                                                                                                                                                                                                                                                                                                                                                                 Begin
(*INSERT 'Get the next non-blank non-call token'*)(*PASCAL module 406*)
                                                                                                                                                                                                                                                                                                                                                                   Repeat
                                                                                                                                                                                                                                                                                                                                                                     get_x_token;
                                                                                                                                                                                                                                                                                                                                                                   Until cur_cmd<>spacer

(*FIN INSERT 'Get the next non-blank non-call token'*)                                                                                                                                                                                                                                                                                                             ;
                                                                                                                                                                                                                                                                                                                                                                   goto reswitch;
                                                                                                                                                                                                                                                                                                                                                                 End;
                                                                                                                                                                                                                                                                                                                                        vmode+stop: If its_all_over Then return; {this is the only way out}
(*\4*)
(*INSERT 'Forbidden cases detected in |main_control|'*)(*PASCAL module 1048*)
                                                                                                                                                                                                                                                                                                                                        vmode+vmove,hmode+hmove,mmode+hmove,any_mode(last_item),

(*PASCAL module 1098*)
                                                                                                                                                                                                                                                                                                                                        vmode+vadjust,

(*FIN INSERT 'Forbidden cases detected in |main_control|'*)                                                                                                                                                                                                                                                                             any_mode(mac_param):
                                                                                                                                                                                                                                                                                                                                                             report_illegal_case;

(*INSERT 'Math-only cases in non-math modes, or vice versa'*)(*PASCAL module 1046*)
                                                                                                                                                                                                                                                                                                                                        non_math(sup_mark), non_math(sub_mark), non_math(math_char_num),
                                                                                                                                                                                                                                                                                                                                        non_math(math_given), non_math(math_comp), non_math(delim_num),
                                                                                                                                                                                                                                                                                                                                        non_math(left_right), non_math(above), non_math(radical),
                                                                                                                                                                                                                                                                                                                                        non_math(math_style), non_math(math_choice), non_math(vcenter),
                                                                                                                                                                                                                                                                                                                                        non_math(non_script), non_math(mkern), non_math(limit_switch),
                                                                                                                                                                                                                                                                                                                                        non_math(mskip), non_math(math_accent),
                                                                                                                                                                                                                                                                                                                                        mmode+endv, mmode+par_end, mmode+stop, mmode+vskip, mmode+un_vbox,
                                                                                                                                                                                                                                                                                                                                        mmode+valign, mmode+hrule

(*FIN INSERT 'Math-only cases in non-math modes, or vice versa'*)                                                                                                                                                                                                                                                                       : insert_dollar_sign;
(*\4*)
(*INSERT 'Cases of |main_control| that build boxes and lists'*)(*PASCAL module 1056*)
                                                                                                                                                                                                                                                                                                                                        vmode+hrule,hmode+vrule,mmode+vrule:
                                                                                                                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                                                                                                                               tail_append(scan_rule_spec);
                                                                                                                                                                                                                                                                                                                                                                               If abs(mode)=vmode Then prev_depth := ignore_depth
                                                                                                                                                                                                                                                                                                                                                                               Else If abs(mode)=hmode Then space_factor := 1000;
                                                                                                                                                                                                                                                                                                                                                                             End;

(*PASCAL module 1057*)
                                                                                                                                                                                                                                                                                                                                        vmode+vskip,hmode+hskip,mmode+hskip,mmode+mskip: append_glue;
                                                                                                                                                                                                                                                                                                                                        any_mode(kern),mmode+mkern: append_kern;

(*PASCAL module 1063*)
                                                                                                                                                                                                                                                                                                                                        non_math(left_brace): new_save_level(simple_group);
                                                                                                                                                                                                                                                                                                                                        any_mode(begin_group): new_save_level(semi_simple_group);
                                                                                                                                                                                                                                                                                                                                        any_mode(end_group): If cur_group=semi_simple_group Then unsave
                                                                                                                                                                                                                                                                                                                                                             Else off_save;

(*PASCAL module 1067*)
                                                                                                                                                                                                                                                                                                                                        any_mode(right_brace): handle_right_brace;

(*PASCAL module 1073*)
                                                                                                                                                                                                                                                                                                                                        vmode+hmove,hmode+vmove,mmode+vmove:
                                                                                                                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                                                                                                                               t := cur_chr;
                                                                                                                                                                                                                                                                                                                                                                               scan_normal_dimen;
                                                                                                                                                                                                                                                                                                                                                                               If t=0 Then scan_box(cur_val)
                                                                                                                                                                                                                                                                                                                                                                               Else scan_box(-cur_val);
                                                                                                                                                                                                                                                                                                                                                                             End;
                                                                                                                                                                                                                                                                                                                                        any_mode(leader_ship): scan_box(leader_flag-a_leaders+cur_chr);
                                                                                                                                                                                                                                                                                                                                        any_mode(make_box): begin_box(0);

(*PASCAL module 1090*)
                                                                                                                                                                                                                                                                                                                                        vmode+start_par: new_graf(cur_chr>0);
                                                                                                                                                                                                                                                                                                                                        vmode+letter,vmode+other_char,vmode+char_num,vmode+char_given,
                                                                                                                                                                                                                                                                                                                                        vmode+math_shift,vmode+un_hbox,vmode+vrule,
                                                                                                                                                                                                                                                                                                                                        vmode+accent,vmode+discretionary,vmode+hskip,vmode+valign,
                                                                                                                                                                                                                                                                                                                                        vmode+ex_space,vmode+no_boundary:(**);

                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          back_input;
                                                                                                                                                                                                                                                                                                                                          new_graf(true);
                                                                                                                                                                                                                                                                                                                                        End;

(*PASCAL module 1092*)
                                                                                                                                                                                                                                                                                                                                        hmode+start_par,mmode+start_par: indent_in_hmode;

(*PASCAL module 1094*)
                                                                                                                                                                                                                                                                                                                                        vmode+par_end:
                                                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                                                         normal_paragraph;
                                                                                                                                                                                                                                                                                                                                                         If mode>0 Then build_page;
                                                                                                                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                                                                                                                        hmode+par_end:
                                                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                                                         If align_state<0 Then off_save; {this tries to 
    recover from an alignment that didn't end properly}
                                                                                                                                                                                                                                                                                                                                                         end_graf; {this takes us to the enclosing mode, if |mode>0|}
                                                                                                                                                                                                                                                                                                                                                         If mode=vmode Then build_page;
                                                                                                                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                                                                                                                        hmode+stop,hmode+vskip,hmode+hrule,hmode+un_vbox,hmode+halign: head_for_vmode;

(*PASCAL module 1097*)
                                                                                                                                                                                                                                                                                                                                        any_mode(insert),hmode+vadjust,mmode+vadjust: begin_insert_or_adjust;
                                                                                                                                                                                                                                                                                                                                        any_mode(mark): make_mark;

(*PASCAL module 1102*)
                                                                                                                                                                                                                                                                                                                                        any_mode(break_penalty): append_penalty;

(*PASCAL module 1104*)
                                                                                                                                                                                                                                                                                                                                        any_mode(remove_item): delete_last;

(*PASCAL module 1109*)
                                                                                                                                                                                                                                                                                                                                        vmode+un_vbox,hmode+un_hbox,mmode+un_hbox: unpackage;

(*PASCAL module 1112*)
                                                                                                                                                                                                                                                                                                                                        hmode+ital_corr: append_italic_correction;
                                                                                                                                                                                                                                                                                                                                        mmode+ital_corr: tail_append(new_kern(0));

(*PASCAL module 1116*)
                                                                                                                                                                                                                                                                                                                                        hmode+discretionary,mmode+discretionary: append_discretionary;

(*PASCAL module 1122*)
                                                                                                                                                                                                                                                                                                                                        hmode+accent: make_accent;

(*PASCAL module 1126*)
                                                                                                                                                                                                                                                                                                                                        any_mode(car_ret), any_mode(tab_mark): align_error;
                                                                                                                                                                                                                                                                                                                                        any_mode(no_align): no_align_error;
                                                                                                                                                                                                                                                                                                                                        any_mode(omit): omit_error;

(*PASCAL module 1130*)
                                                                                                                                                                                                                                                                                                                                        vmode+halign,hmode+valign: init_align;
                                                                                                                                                                                                                                                                                                                                        mmode+halign: If privileged Then
                                                                                                                                                                                                                                                                                                                                                        If cur_group=math_shift_group Then init_align
                                                                                                                                                                                                                                                                                                                                                      Else off_save;
                                                                                                                                                                                                                                                                                                                                        vmode+endv,hmode+endv: do_endv;

(*PASCAL module 1134*)
                                                                                                                                                                                                                                                                                                                                        any_mode(end_cs_name): cs_error;

(*PASCAL module 1137*)
                                                                                                                                                                                                                                                                                                                                        hmode+math_shift: init_math;

(*PASCAL module 1140*)
                                                                                                                                                                                                                                                                                                                                        mmode+eq_no: If privileged Then
                                                                                                                                                                                                                                                                                                                                                       If cur_group=math_shift_group Then start_eq_no
                                                                                                                                                                                                                                                                                                                                                     Else off_save;

(*PASCAL module 1150*)
                                                                                                                                                                                                                                                                                                                                        mmode+left_brace:
                                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                                            tail_append(new_noad);
                                                                                                                                                                                                                                                                                                                                                            back_input;
                                                                                                                                                                                                                                                                                                                                                            scan_math(nucleus(tail));
                                                                                                                                                                                                                                                                                                                                                          End;

(*PASCAL module 1154*)
                                                                                                                                                                                                                                                                                                                                        mmode+letter,mmode+other_char,mmode+char_given:
                                                                                                                                                                                                                                                                                                                                                                                        set_math_char(ho(math_code(cur_chr)));
                                                                                                                                                                                                                                                                                                                                        mmode+char_num:
                                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                                          scan_char_num;
                                                                                                                                                                                                                                                                                                                                                          cur_chr := cur_val;
                                                                                                                                                                                                                                                                                                                                                          set_math_char(ho(math_code(cur_chr)));
                                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                        mmode+math_char_num:
                                                                                                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                                                                                                               scan_fifteen_bit_int;
                                                                                                                                                                                                                                                                                                                                                               set_math_char(cur_val);
                                                                                                                                                                                                                                                                                                                                                             End;
                                                                                                                                                                                                                                                                                                                                        mmode+math_given: set_math_char(cur_chr);
                                                                                                                                                                                                                                                                                                                                        mmode+delim_num:
                                                                                                                                                                                                                                                                                                                                                         Begin
                                                                                                                                                                                                                                                                                                                                                           scan_twenty_seven_bit_int;
                                                                                                                                                                                                                                                                                                                                                           set_math_char(cur_val Div 4096);
                                                                                                                                                                                                                                                                                                                                                         End;

(*PASCAL module 1158*)
                                                                                                                                                                                                                                                                                                                                        mmode+math_comp:
                                                                                                                                                                                                                                                                                                                                                         Begin
                                                                                                                                                                                                                                                                                                                                                           tail_append(new_noad);

                                                                                                                                                                                                                                                                                                                                                           Type (tail) := cur_chr;
                                                                                                                                                                                                                                                                                                                                                             scan_math(nucleus(tail));
                                                                                                                                                                                                                                                                                                                                                           End;
                                                                                                                                                                                                                                                                                                                                                           mmode+limit_switch: math_limit_switch;

(*PASCAL module 1162*)
                                                                                                                                                                                                                                                                                                                                                           mmode+radical: math_radical;

(*PASCAL module 1164*)
                                                                                                                                                                                                                                                                                                                                                           mmode+accent,mmode+math_accent: math_ac;

(*PASCAL module 1167*)
                                                                                                                                                                                                                                                                                                                                                           mmode+vcenter:
                                                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                                                            scan_spec(vcenter_group,false);
                                                                                                                                                                                                                                                                                                                                                                            normal_paragraph;
                                                                                                                                                                                                                                                                                                                                                                            push_nest;
                                                                                                                                                                                                                                                                                                                                                                            mode := -vmode;
                                                                                                                                                                                                                                                                                                                                                                            prev_depth := ignore_depth;
                                                                                                                                                                                                                                                                                                                                                                            If every_vbox<>null Then begin_token_list(every_vbox,every_vbox_text);
                                                                                                                                                                                                                                                                                                                                                                          End;

(*PASCAL module 1171*)
                                                                                                                                                                                                                                                                                                                                                           mmode+math_style: tail_append(new_style(cur_chr));
                                                                                                                                                                                                                                                                                                                                                           mmode+non_script:
                                                                                                                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                                                                                                                               tail_append(new_glue(zero_glue));
                                                                                                                                                                                                                                                                                                                                                                               subtype(tail) := cond_math_glue;
                                                                                                                                                                                                                                                                                                                                                                             End;
                                                                                                                                                                                                                                                                                                                                                           mmode+math_choice: append_choices;

(*PASCAL module 1175*)
                                                                                                                                                                                                                                                                                                                                                           mmode+sub_mark,mmode+sup_mark: sub_sup;

(*PASCAL module 1180*)
                                                                                                                                                                                                                                                                                                                                                           mmode+above: math_fraction;

(*PASCAL module 1190*)
                                                                                                                                                                                                                                                                                                                                                           mmode+left_right: math_left_right;

(*PASCAL module 1193*)
                                                                                                                                                                                                                                                                                                                                                           mmode+math_shift: If cur_group=math_shift_group Then after_math
                                                                                                                                                                                                                                                                                                                                                                             Else off_save;

(*FIN INSERT 'Cases of |main_control| that build boxes and lists'*)                                                                                                                                                                                                                                                                                        ;
(*\4*)
(*INSERT 'Cases of |main_control| that don''t depend on |mode|'*)(*PASCAL module 1210*)
                                                                                                                                                                                                                                                                                                                                                           any_mode(toks_register),
                                                                                                                                                                                                                                                                                                                                                           any_mode(assign_toks),
                                                                                                                                                                                                                                                                                                                                                           any_mode(assign_int),
                                                                                                                                                                                                                                                                                                                                                           any_mode(assign_dimen),
                                                                                                                                                                                                                                                                                                                                                           any_mode(assign_glue),
                                                                                                                                                                                                                                                                                                                                                           any_mode(assign_mu_glue),
                                                                                                                                                                                                                                                                                                                                                           any_mode(assign_font_dimen),
                                                                                                                                                                                                                                                                                                                                                           any_mode(assign_font_int),
                                                                                                                                                                                                                                                                                                                                                           any_mode(set_aux),
                                                                                                                                                                                                                                                                                                                                                           any_mode(set_prev_graf),
                                                                                                                                                                                                                                                                                                                                                           any_mode(set_page_dimen),
                                                                                                                                                                                                                                                                                                                                                           any_mode(set_page_int),
                                                                                                                                                                                                                                                                                                                                                           any_mode(set_box_dimen),
                                                                                                                                                                                                                                                                                                                                                           any_mode(set_shape),
                                                                                                                                                                                                                                                                                                                                                           any_mode(def_code),
                                                                                                                                                                                                                                                                                                                                                           any_mode(def_family),
                                                                                                                                                                                                                                                                                                                                                           any_mode(set_font),
                                                                                                                                                                                                                                                                                                                                                           any_mode(def_font),
                                                                                                                                                                                                                                                                                                                                                           any_mode(register),
                                                                                                                                                                                                                                                                                                                                                           any_mode(advance),
                                                                                                                                                                                                                                                                                                                                                           any_mode(multiply),
                                                                                                                                                                                                                                                                                                                                                           any_mode(divide),
                                                                                                                                                                                                                                                                                                                                                           any_mode(prefix),
                                                                                                                                                                                                                                                                                                                                                           any_mode(let),
                                                                                                                                                                                                                                                                                                                                                           any_mode(shorthand_def),
                                                                                                                                                                                                                                                                                                                                                           any_mode(read_to_cs),
                                                                                                                                                                                                                                                                                                                                                           any_mode(def),
                                                                                                                                                                                                                                                                                                                                                           any_mode(set_box),
                                                                                                                                                                                                                                                                                                                                                           any_mode(hyph_data),
                                                                                                                                                                                                                                                                                                                                                           any_mode(set_interaction): prefixed_command;

(*PASCAL module 1268*)
                                                                                                                                                                                                                                                                                                                                                           any_mode(after_assignment):
                                                                                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                                                                                         get_token;
                                                                                                                                                                                                                                                                                                                                                                                         after_token := cur_tok;
                                                                                                                                                                                                                                                                                                                                                                                       End;

(*PASCAL module 1271*)
                                                                                                                                                                                                                                                                                                                                                           any_mode(after_group):
                                                                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                                                                    get_token;
                                                                                                                                                                                                                                                                                                                                                                                    save_for_after(cur_tok);
                                                                                                                                                                                                                                                                                                                                                                                  End;

(*PASCAL module 1274*)
                                                                                                                                                                                                                                                                                                                                                           any_mode(in_stream): open_or_close_in;

(*PASCAL module 1276*)
                                                                                                                                                                                                                                                                                                                                                           any_mode(message): issue_message;

(*PASCAL module 1285*)
                                                                                                                                                                                                                                                                                                                                                           any_mode(case_shift): shift_case;

(*PASCAL module 1290*)
                                                                                                                                                                                                                                                                                                                                                           any_mode(xray): show_whatever;

(*FIN INSERT 'Cases of |main_control| that don''t depend on |mode|'*)                                                                                                                                                                                                                                                                                      ;
(*\4*)
(*INSERT 'Cases of |main_control| that are for extensions to \TeX'*)(*PASCAL module 1347*)
                                                                                                                                                                                                                                                                                                                                                           any_mode(extension): do_extension;

(*FIN INSERT 'Cases of |main_control| that are for extensions to \TeX'*)                                                                                                                                                                                                                                                                                   ;

(*FIN INSERT 'Cases of |main_control| that are not part of the inner loop'*)                                                                                                                                                                                                                                                                               ;
                                                                                                                                                                                                                                                                                                                                                         End; {of the big |case| statement}
                                                                                                                                                                                                                                                                                                                                        goto big_switch;
                                                                                                                                                                                                                                                                                                                                        main_loop:
(*INSERT 'Append character |cur_chr| and the following characters (if~any) to the current hlist in the current font; |goto reswitch| when a non-character has been fetched'*)(*PASCAL module 1034*)
                                                                                                                                                                                                                                                                                                                                                   adjust_space_factor;

                                                                                                                                                                                                                                                                                                                                        main_f := cur_font;
                                                                                                                                                                                                                                                                                                                                        bchar := font_bchar[main_f];
                                                                                                                                                                                                                                                                                                                                        false_bchar := font_false_bchar[main_f];
                                                                                                                                                                                                                                                                                                                                        If mode>0 Then If language<>clang Then fix_language;
                                                                                                                                                                                                                                                                                                                                        fast_get_avail(lig_stack);
                                                                                                                                                                                                                                                                                                                                        font(lig_stack) := main_f;
                                                                                                                                                                                                                                                                                                                                        cur_l := qi(cur_chr);
                                                                                                                                                                                                                                                                                                                                        character(lig_stack) := cur_l;

                                                                                                                                                                                                                                                                                                                                        cur_q := tail;
                                                                                                                                                                                                                                                                                                                                        If cancel_boundary Then
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            cancel_boundary := false;
                                                                                                                                                                                                                                                                                                                                            main_k := non_address;
                                                                                                                                                                                                                                                                                                                                          End
                                                                                                                                                                                                                                                                                                                                        Else main_k := bchar_label[main_f];
                                                                                                                                                                                                                                                                                                                                        If main_k=non_address Then goto main_loop_move+2; {no left boundary processing}
                                                                                                                                                                                                                                                                                                                                        cur_r := cur_l;
                                                                                                                                                                                                                                                                                                                                        cur_l := non_char;
                                                                                                                                                                                                                                                                                                                                        goto main_lig_loop+1; {begin with cursor after left boundary}



                                                                                                                                                                                                                                                                                                                                        main_loop_wrapup:
(*INSERT 'Make a ligature node, if |ligature_present|; insert a null discretionary, if appropriate'*)(*PASCAL module 1035*)
                                                                                                                                                                                                                                                                                                                                                          wrapup(rt_hit)

(*FIN INSERT 'Make a ligature node, if |ligature_present|; insert a null discretionary, if appropriate'*)                                                                                                                                                                                                                               ;
                                                                                                                                                                                                                                                                                                                                        main_loop_move:
(*INSERT 'If the cursor is immediately followed by the right boundary, |goto reswitch|; if it''s followed by an invalid character, |goto big_switch|; otherwise move the cursor one step to the right and |goto main_lig_loop|'*)(*PASCAL module 1036*)
(*inner loop*)
                                                                                                                                                                                                                                                                                                                                                        If lig_stack=null Then goto reswitch;
                                                                                                                                                                                                                                                                                                                                        cur_q := tail;
                                                                                                                                                                                                                                                                                                                                        cur_l := character(lig_stack);
                                                                                                                                                                                                                                                                                                                                        main_loop_move+1: If Not is_char_node(lig_stack) Then goto main_loop_move_lig;
                                                                                                                                                                                                                                                                                                                                        main_loop_move+2: If (cur_chr<font_bc[main_f])Or(cur_chr>font_ec[main_f]) Then
                                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                                              char_warning(main_f,cur_chr);
                                                                                                                                                                                                                                                                                                                                                              free_avail(lig_stack);
                                                                                                                                                                                                                                                                                                                                                              goto big_switch;
                                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                        main_i := char_info(main_f)(cur_l);
                                                                                                                                                                                                                                                                                                                                        If Not char_exists(main_i) Then
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            char_warning(main_f,cur_chr);
                                                                                                                                                                                                                                                                                                                                            free_avail(lig_stack);
                                                                                                                                                                                                                                                                                                                                            goto big_switch;
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        link(tail) := lig_stack;
                                                                                                                                                                                                                                                                                                                                        tail := lig_stack {|main_loop_lookahead| is next}

(*FIN INSERT 'If the cursor is immediately followed by the right boundary, |goto reswitch|; if it''s followed by an invalid character, |goto big_switch|; otherwise move the cursor one step to the right and |goto main_lig_loop|'*)                                                                                                   ;
                                                                                                                                                                                                                                                                                                                                        main_loop_lookahead:
(*INSERT 'Look ahead for another character, or leave |lig_stack| empty if there''s none there'*)(*PASCAL module 1038*)
                                                                                                                                                                                                                                                                                                                                                             get_next; {set only |cur_cmd| and |cur_chr|, for speed}
                                                                                                                                                                                                                                                                                                                                        If cur_cmd=letter Then goto main_loop_lookahead+1;
                                                                                                                                                                                                                                                                                                                                        If cur_cmd=other_char Then goto main_loop_lookahead+1;
                                                                                                                                                                                                                                                                                                                                        If cur_cmd=char_given Then goto main_loop_lookahead+1;
                                                                                                                                                                                                                                                                                                                                        x_token; {now expand and set |cur_cmd|, |cur_chr|, |cur_tok|}
                                                                                                                                                                                                                                                                                                                                        If cur_cmd=letter Then goto main_loop_lookahead+1;
                                                                                                                                                                                                                                                                                                                                        If cur_cmd=other_char Then goto main_loop_lookahead+1;
                                                                                                                                                                                                                                                                                                                                        If cur_cmd=char_given Then goto main_loop_lookahead+1;
                                                                                                                                                                                                                                                                                                                                        If cur_cmd=char_num Then
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            scan_char_num;
                                                                                                                                                                                                                                                                                                                                            cur_chr := cur_val;
                                                                                                                                                                                                                                                                                                                                            goto main_loop_lookahead+1;
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        If cur_cmd=no_boundary Then bchar := non_char;
                                                                                                                                                                                                                                                                                                                                        cur_r := bchar;
                                                                                                                                                                                                                                                                                                                                        lig_stack := null;
                                                                                                                                                                                                                                                                                                                                        goto main_lig_loop;
                                                                                                                                                                                                                                                                                                                                        main_loop_lookahead+1: adjust_space_factor;
                                                                                                                                                                                                                                                                                                                                        fast_get_avail(lig_stack);
                                                                                                                                                                                                                                                                                                                                        font(lig_stack) := main_f;
                                                                                                                                                                                                                                                                                                                                        cur_r := qi(cur_chr);
                                                                                                                                                                                                                                                                                                                                        character(lig_stack) := cur_r;
                                                                                                                                                                                                                                                                                                                                        If cur_r=false_bchar Then cur_r := non_char {this prevents spurious ligatures}

(*FIN INSERT 'Look ahead for another character, or leave |lig_stack| empty if there''s none there'*)                                                                                                                                                                                                                                    ;
                                                                                                                                                                                                                                                                                                                                        main_lig_loop:
(*INSERT 'If there''s a ligature/kern command relevant to |cur_l| and |cur_r|, adjust the text appropriately; exit to |main_loop_wrapup|'*)(*PASCAL module 1039*)
                                                                                                                                                                                                                                                                                                                                                       If char_tag(main_i)<>lig_tag Then goto main_loop_wrapup;
                                                                                                                                                                                                                                                                                                                                        If cur_r=non_char Then goto main_loop_wrapup;
                                                                                                                                                                                                                                                                                                                                        main_k := lig_kern_start(main_f)(main_i);
                                                                                                                                                                                                                                                                                                                                        main_j := font_info[main_k].qqqq;
                                                                                                                                                                                                                                                                                                                                        If skip_byte(main_j)<=stop_flag Then goto main_lig_loop+2;
                                                                                                                                                                                                                                                                                                                                        main_k := lig_kern_restart(main_f)(main_j);
                                                                                                                                                                                                                                                                                                                                        main_lig_loop+1: main_j := font_info[main_k].qqqq;
                                                                                                                                                                                                                                                                                                                                        main_lig_loop+2: If next_char(main_j)=cur_r Then
                                                                                                                                                                                                                                                                                                                                                           If skip_byte(main_j)<=stop_flag Then

(*INSERT 'Do ligature or kern command, returning to |main_lig_loop| or |main_loop_wrapup| or |main_loop_move|'*)(*PASCAL module 1040*)
                                                                                                                                                                                                                                                                                                                                                             Begin
                                                                                                                                                                                                                                                                                                                                                               If op_byte(main_j)>=kern_flag Then
                                                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                                                   wrapup(rt_hit);
                                                                                                                                                                                                                                                                                                                                                               tail_append(new_kern(char_kern(main_f)(main_j)));
                                                                                                                                                                                                                                                                                                                                                               goto main_loop_move;
                                                                                                                                                                                                                                                                                                                                                             End;
                                                                                                                                                                                                                                                                                                                                        If cur_l=non_char Then lft_hit := true
                                                                                                                                                                                                                                                                                                                                        Else If lig_stack=null Then rt_hit := true;
                                                                                                                                                                                                                                                                                                                                        check_interrupt; {allow a way out in case there's an infinite ligature loop}
                                                                                                                                                                                                                                                                                                                                        Case op_byte(main_j) Of 
                                                                                                                                                                                                                                                                                                                                          qi(1),qi(5):
                                                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                                                         cur_l := rem_byte(main_j); {\.[=:\?], \.[=:\?>]}
                                                                                                                                                                                                                                                                                                                                                         main_i := char_info(main_f)(cur_l);
                                                                                                                                                                                                                                                                                                                                                         ligature_present := true;
                                                                                                                                                                                                                                                                                                                                                       End;
                                                                                                                                                                                                                                                                                                                                          qi(2),qi(6):
                                                                                                                                                                                                                                                                                                                                                       Begin
                                                                                                                                                                                                                                                                                                                                                         cur_r := rem_byte(main_j); {\.[\?=:], \.[\?=:>]}
                                                                                                                                                                                                                                                                                                                                                         If lig_stack=null Then {right boundary character is being consumed}
                                                                                                                                                                                                                                                                                                                                                           Begin
                                                                                                                                                                                                                                                                                                                                                             lig_stack := new_lig_item(cur_r);
                                                                                                                                                                                                                                                                                                                                                             bchar := non_char;
                                                                                                                                                                                                                                                                                                                                                           End
                                                                                                                                                                                                                                                                                                                                                         Else If is_char_node(lig_stack) Then {|link(lig_stack)=null|}
                                                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                                                  main_p := lig_stack;
                                                                                                                                                                                                                                                                                                                                                         lig_stack := new_lig_item(cur_r);
                                                                                                                                                                                                                                                                                                                                                         lig_ptr(lig_stack) := main_p;
                                                                                                                                                                                                                                                                                                                                                       End
                                                                                                                                                                                                                                                                                                                                                       Else character(lig_stack) := cur_r;
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                        qi(3):
                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                 cur_r := rem_byte(main_j); {\.[\?=:\?]}
                                                                                                                                                                                                                                                                                                                                                 main_p := lig_stack;
                                                                                                                                                                                                                                                                                                                                                 lig_stack := new_lig_item(cur_r);
                                                                                                                                                                                                                                                                                                                                                 link(lig_stack) := main_p;
                                                                                                                                                                                                                                                                                                                                               End;
                                                                                                                                                                                                                                                                                                                                        qi(7),qi(11):
                                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                                        wrapup(false); {\.[\?=:\?>], \.[\?=:\?>>]}
                                                                                                                                                                                                                                                                                                                                                        cur_q := tail;
                                                                                                                                                                                                                                                                                                                                                        cur_l := rem_byte(main_j);
                                                                                                                                                                                                                                                                                                                                                        main_i := char_info(main_f)(cur_l);
                                                                                                                                                                                                                                                                                                                                                        ligature_present := true;
                                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                        othercases
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          cur_l := rem_byte(main_j);
                                                                                                                                                                                                                                                                                                                                          ligature_present := true; {\.[=:]}
                                                                                                                                                                                                                                                                                                                                          If lig_stack=null Then goto main_loop_wrapup
                                                                                                                                                                                                                                                                                                                                          Else goto main_loop_move+1;
                                                                                                                                                                                                                                                                                                                                        End
                                                                                                                                                                                                                                                                                                                                        endcases;
                                                                                                                                                                                                                                                                                                                                        If op_byte(main_j)>qi(4) Then
                                                                                                                                                                                                                                                                                                                                          If op_byte(main_j)<>qi(7) Then goto main_loop_wrapup;
                                                                                                                                                                                                                                                                                                                                        If cur_l<non_char Then goto main_lig_loop;
                                                                                                                                                                                                                                                                                                                                        main_k := bchar_label[main_f];
                                                                                                                                                                                                                                                                                                                                        goto main_lig_loop+1;
                                                                                                                                                                                                                                                                                                                                      End

(*FIN INSERT 'Do ligature or kern command, returning to |main_lig_loop| or |main_loop_wrapup| or |main_loop_move|'*)                                                                                                                                                                                                                  ;
                                                                                                                                                                                                                                                                                                                                      If skip_byte(main_j)=qi(0) Then incr(main_k)
                                                                                                                                                                                                                                                                                                                                      Else
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          If skip_byte(main_j)>=stop_flag Then goto main_loop_wrapup;
                                                                                                                                                                                                                                                                                                                                          main_k := main_k+qo(skip_byte(main_j))+1;
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      goto main_lig_loop+1

(*FIN INSERT 'If there''s a ligature/kern command relevant to |cur_l| and |cur_r|, adjust the text appropriately; exit to |main_loop_wrapup|'*)                                                                                                                                                                                       ;
                                                                                                                                                                                                                                                                                                                                      main_loop_move_lig:
(*INSERT 'Move the cursor past a pseudo-ligature, then |goto main_loop_lookahead| or |main_lig_loop|'*)(*PASCAL module 1037*)
                                                                                                                                                                                                                                                                                                                                                          main_p := lig_ptr(lig_stack);
                                                                                                                                                                                                                                                                                                                                      If main_p>null Then tail_append(main_p); {append a single character}
                                                                                                                                                                                                                                                                                                                                      temp_ptr := lig_stack;
                                                                                                                                                                                                                                                                                                                                      lig_stack := link(temp_ptr);
                                                                                                                                                                                                                                                                                                                                      free_node(temp_ptr,small_node_size);
                                                                                                                                                                                                                                                                                                                                      main_i := char_info(main_f)(cur_l);
                                                                                                                                                                                                                                                                                                                                      ligature_present := true;
                                                                                                                                                                                                                                                                                                                                      If lig_stack=null Then
                                                                                                                                                                                                                                                                                                                                        If main_p>null Then goto main_loop_lookahead
                                                                                                                                                                                                                                                                                                                                      Else cur_r := bchar
                                                                                                                                                                                                                                                                                                                                      Else cur_r := character(lig_stack);
                                                                                                                                                                                                                                                                                                                                      goto main_lig_loop

(*FIN INSERT 'Move the cursor past a pseudo-ligature, then |goto main_loop_lookahead| or |main_lig_loop|'*)

(*FIN INSERT 'Append character |cur_chr| and the following characters (if~any) to the current hlist in the current font; |goto reswitch| when a non-character has been fetched'*)                                                                                                                                                     ;
                                                                                                                                                                                                                                                                                                                                      append_normal_space:
(*INSERT 'Append a normal inter-word space to the current list, then |goto big_switch|'*)(*PASCAL module 1041*)
                                                                                                                                                                                                                                                                                                                                                           If space_skip=zero_glue Then
                                                                                                                                                                                                                                                                                                                                                             Begin
(*INSERT 'Find the glue specification, |main_p|, for text spaces in the current font'*)(*PASCAL module 1042*)
                                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                                 main_p := font_glue[cur_font];
                                                                                                                                                                                                                                                                                                                                                                 If main_p=null Then
                                                                                                                                                                                                                                                                                                                                                                   Begin
                                                                                                                                                                                                                                                                                                                                                                     main_p := new_spec(zero_glue);
                                                                                                                                                                                                                                                                                                                                                                     main_k := param_base[cur_font]+space_code;
                                                                                                                                                                                                                                                                                                                                                                     width(main_p) := font_info[main_k].sc; {that's |space(cur_font)|}
                                                                                                                                                                                                                                                                                                                                                                     stretch(main_p) := font_info[main_k+1].sc; {and |space_stretch(cur_font)|}
                                                                                                                                                                                                                                                                                                                                                                     shrink(main_p) := font_info[main_k+2].sc; {and |space_shrink(cur_font)|}
                                                                                                                                                                                                                                                                                                                                                                     font_glue[cur_font] := main_p;
                                                                                                                                                                                                                                                                                                                                                                   End;
                                                                                                                                                                                                                                                                                                                                                               End

(*FIN INSERT 'Find the glue specification, |main_p|, for text spaces in the current font'*)                                                                                                                                                                                                                                                                    ;
                                                                                                                                                                                                                                                                                                                                                               temp_ptr := new_glue(main_p);
                                                                                                                                                                                                                                                                                                                                                             End
                                                                                                                                                                                                                                                                                                                                                           Else temp_ptr := new_param_glue(space_skip_code);
                                                                                                                                                                                                                                                                                                                                      link(tail) := temp_ptr;
                                                                                                                                                                                                                                                                                                                                      tail := temp_ptr;
                                                                                                                                                                                                                                                                                                                                      goto big_switch

(*FIN INSERT 'Append a normal inter-word space to the current list, then |goto big_switch|'*)                                                                                                                                                                                                                                         ;
                                                                                                                                                                                                                                                                                                                                      exit:
                                                                                                                                                                                                                                                                                                                                    End;


(***PASCAL module 1284***)
                                                                                                                                                                                                                                                                                                                                    Procedure give_err_help;
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      token_show(err_help);
                                                                                                                                                                                                                                                                                                                                    End;


(***PASCAL module 1303***)
(*\4*)
(*INSERT 'Declare the function called |open_fmt_file|'*)(*PASCAL module 524*)
                                                                                                                                                                                                                                                                                                                                    Function open_fmt_file: boolean;

                                                                                                                                                                                                                                                                                                                                    Label found,exit;

                                                                                                                                                                                                                                                                                                                                    Var j: 0..buf_size; {the first space after the format file name}
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      j := loc;
                                                                                                                                                                                                                                                                                                                                      If buffer[loc]='&' Then
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          incr(loc);
                                                                                                                                                                                                                                                                                                                                          j := loc;
                                                                                                                                                                                                                                                                                                                                          buffer[last] := ' ';
                                                                                                                                                                                                                                                                                                                                          While buffer[j]<>' ' Do
                                                                                                                                                                                                                                                                                                                                            incr(j);
                                                                                                                                                                                                                                                                                                                                          pack_buffered_name(0,loc,j-1); {try first without the system file area}
                                                                                                                                                                                                                                                                                                                                          If w_open_in(fmt_file) Then goto found;
                                                                                                                                                                                                                                                                                                                                          pack_buffered_name(format_area_length,loc,j-1);
    {now try the system format file area}
                                                                                                                                                                                                                                                                                                                                          If w_open_in(fmt_file) Then goto found;
                                                                                                                                                                                                                                                                                                                                          wake_up_terminal;
                                                                                                                                                                                                                                                                                                                                          wterm_ln('Sorry, I can''t find that format;',' will try PLAIN.');
(*Sorry, I can''t find...*)
                                                                                                                                                                                                                                                                                                                                          update_terminal;
                                                                                                                                                                                                                                                                                                                                        End;
  {now pull out all the stops: try for the system \.[plain] file}
                                                                                                                                                                                                                                                                                                                                      pack_buffered_name(format_default_length-format_ext_length,1,0);
                                                                                                                                                                                                                                                                                                                                      If Not w_open_in(fmt_file) Then
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          wake_up_terminal;
                                                                                                                                                                                                                                                                                                                                          wterm_ln('I can''t find the PLAIN format file!');
(*I can''t find PLAIN...*)
(*plain*)
                                                                                                                                                                                                                                                                                                                                          open_fmt_file := false;
                                                                                                                                                                                                                                                                                                                                          return;
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      found: loc := j;
                                                                                                                                                                                                                                                                                                                                      open_fmt_file := true;
                                                                                                                                                                                                                                                                                                                                      exit:
                                                                                                                                                                                                                                                                                                                                    End;

(*FIN INSERT 'Declare the function called |open_fmt_file|'*)                                                                                                                                                                                                                                                                        ;
                                                                                                                                                                                                                                                                                                                                    Function load_fmt_file: boolean;

                                                                                                                                                                                                                                                                                                                                    Label bad_fmt,exit;

                                                                                                                                                                                                                                                                                                                                    Var j,k: integer; {all-purpose indices}
                                                                                                                                                                                                                                                                                                                                      p,q: pointer; {all-purpose pointers}
                                                                                                                                                                                                                                                                                                                                      x: integer; {something undumped}
                                                                                                                                                                                                                                                                                                                                      w: four_quarters; {four ASCII codes}
                                                                                                                                                                                                                                                                                                                                    Begin
(*INSERT 'Undump constants for consistency check'*)(*PASCAL module 1308*)
                                                                                                                                                                                                                                                                                                                                      x := fmt_file^.int;
                                                                                                                                                                                                                                                                                                                                      If x<>@$ Then goto bad_fmt; {check that strings are the same}
                                                                                                                                                                                                                                                                                                                                      undump_int(x);
                                                                                                                                                                                                                                                                                                                                      If x<>mem_bot Then goto bad_fmt;
                                                                                                                                                                                                                                                                                                                                      undump_int(x);
                                                                                                                                                                                                                                                                                                                                      If x<>mem_top Then goto bad_fmt;
                                                                                                                                                                                                                                                                                                                                      undump_int(x);
                                                                                                                                                                                                                                                                                                                                      If x<>eqtb_size Then goto bad_fmt;
                                                                                                                                                                                                                                                                                                                                      undump_int(x);
                                                                                                                                                                                                                                                                                                                                      If x<>hash_prime Then goto bad_fmt;
                                                                                                                                                                                                                                                                                                                                      undump_int(x);
                                                                                                                                                                                                                                                                                                                                      If x<>hyph_size Then goto bad_fmt

(*FIN INSERT 'Undump constants for consistency check'*)                                                                                                                                                                                                                                                                               ;

(*INSERT 'Undump the string pool'*)(*PASCAL module 1310*)
                                                                                                                                                                                                                                                                                                                                      undump_size(0)(pool_size)('string pool size')(pool_ptr);
                                                                                                                                                                                                                                                                                                                                      undump_size(0)(max_strings)('max strings')(str_ptr);
                                                                                                                                                                                                                                                                                                                                      For k:=0 To str_ptr Do
                                                                                                                                                                                                                                                                                                                                        undump(0)(pool_ptr)(str_start[k]);
                                                                                                                                                                                                                                                                                                                                      k := 0;
                                                                                                                                                                                                                                                                                                                                      While k+4<pool_ptr Do
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          undump_four_ASCII;
                                                                                                                                                                                                                                                                                                                                          k := k+4;
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      k := pool_ptr-4;
                                                                                                                                                                                                                                                                                                                                      undump_four_ASCII;
                                                                                                                                                                                                                                                                                                                                      init_str_ptr := str_ptr;
                                                                                                                                                                                                                                                                                                                                      init_pool_ptr := pool_ptr

(*FIN INSERT 'Undump the string pool'*)                                                                                                                                                                                                                                                                                               ;

(*INSERT 'Undump the dynamic memory'*)(*PASCAL module 1312*)
                                                                                                                                                                                                                                                                                                                                      undump(lo_mem_stat_max+1000)(hi_mem_stat_min-1)(lo_mem_max);
                                                                                                                                                                                                                                                                                                                                      undump(lo_mem_stat_max+1)(lo_mem_max)(rover);
                                                                                                                                                                                                                                                                                                                                      p := mem_bot;
                                                                                                                                                                                                                                                                                                                                      q := rover;
                                                                                                                                                                                                                                                                                                                                      Repeat
                                                                                                                                                                                                                                                                                                                                        For k:=p To q+1 Do
                                                                                                                                                                                                                                                                                                                                          undump_wd(mem[k]);
                                                                                                                                                                                                                                                                                                                                        p := q+node_size(q);
                                                                                                                                                                                                                                                                                                                                        If (p>lo_mem_max)Or((q>=rlink(q))And(rlink(q)<>rover)) Then goto bad_fmt;
                                                                                                                                                                                                                                                                                                                                        q := rlink(q);
                                                                                                                                                                                                                                                                                                                                      Until q=rover;
                                                                                                                                                                                                                                                                                                                                      For k:=p To lo_mem_max Do
                                                                                                                                                                                                                                                                                                                                        undump_wd(mem[k]);
                                                                                                                                                                                                                                                                                                                                      If mem_min<mem_bot-2 Then {make more low memory available}
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          p := llink(rover);
                                                                                                                                                                                                                                                                                                                                          q := mem_min+1;
                                                                                                                                                                                                                                                                                                                                          link(mem_min) := null;
                                                                                                                                                                                                                                                                                                                                          info(mem_min) := null; {we don't use the bottom word}
                                                                                                                                                                                                                                                                                                                                          rlink(p) := q;
                                                                                                                                                                                                                                                                                                                                          llink(rover) := q;

                                                                                                                                                                                                                                                                                                                                          rlink(q) := rover;
                                                                                                                                                                                                                                                                                                                                          llink(q) := p;
                                                                                                                                                                                                                                                                                                                                          link(q) := empty_flag;
                                                                                                                                                                                                                                                                                                                                          node_size(q) := mem_bot-q;
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      undump(lo_mem_max+1)(hi_mem_stat_min)(hi_mem_min);
                                                                                                                                                                                                                                                                                                                                      undump(null)(mem_top)(avail);
                                                                                                                                                                                                                                                                                                                                      mem_end := mem_top;
                                                                                                                                                                                                                                                                                                                                      For k:=hi_mem_min To mem_end Do
                                                                                                                                                                                                                                                                                                                                        undump_wd(mem[k]);
                                                                                                                                                                                                                                                                                                                                      undump_int(var_used);
                                                                                                                                                                                                                                                                                                                                      undump_int(dyn_used)

(*FIN INSERT 'Undump the dynamic memory'*)                                                                                                                                                                                                                                                                                            ;

(*INSERT 'Undump the table of equivalents'*)(*PASCAL module 1314*)

(*INSERT 'Undump regions 1 to 6 of |eqtb|'*)(*PASCAL module 1317*)
                                                                                                                                                                                                                                                                                                                                      k := active_base;
                                                                                                                                                                                                                                                                                                                                      Repeat
                                                                                                                                                                                                                                                                                                                                        undump_int(x);
                                                                                                                                                                                                                                                                                                                                        If (x<1)Or(k+x>eqtb_size+1) Then goto bad_fmt;
                                                                                                                                                                                                                                                                                                                                        For j:=k To k+x-1 Do
                                                                                                                                                                                                                                                                                                                                          undump_wd(eqtb[j]);
                                                                                                                                                                                                                                                                                                                                        k := k+x;
                                                                                                                                                                                                                                                                                                                                        undump_int(x);
                                                                                                                                                                                                                                                                                                                                        If (x<0)Or(k+x>eqtb_size+1) Then goto bad_fmt;
                                                                                                                                                                                                                                                                                                                                        For j:=k To k+x-1 Do
                                                                                                                                                                                                                                                                                                                                          eqtb[j] := eqtb[k-1];
                                                                                                                                                                                                                                                                                                                                        k := k+x;
                                                                                                                                                                                                                                                                                                                                      Until k>eqtb_size

(*FIN INSERT 'Undump regions 1 to 6 of |eqtb|'*)                                                                                                                                                                                                                                                                                      ;
                                                                                                                                                                                                                                                                                                                                      undump(hash_base)(frozen_control_sequence)(par_loc);
                                                                                                                                                                                                                                                                                                                                      par_token := cs_token_flag+par_loc;

                                                                                                                                                                                                                                                                                                                                      undump(hash_base)(frozen_control_sequence)(write_loc);


(*INSERT 'Undump the hash table'*)(*PASCAL module 1319*)
                                                                                                                                                                                                                                                                                                                                      undump(hash_base)(frozen_control_sequence)(hash_used);
                                                                                                                                                                                                                                                                                                                                      p := hash_base-1;
                                                                                                                                                                                                                                                                                                                                      Repeat
                                                                                                                                                                                                                                                                                                                                        undump(p+1)(hash_used)(p);
                                                                                                                                                                                                                                                                                                                                        undump_hh(hash[p]);
                                                                                                                                                                                                                                                                                                                                      Until p=hash_used;
                                                                                                                                                                                                                                                                                                                                      For p:=hash_used+1 To undefined_control_sequence-1 Do
                                                                                                                                                                                                                                                                                                                                        undump_hh(hash[p]);
                                                                                                                                                                                                                                                                                                                                      undump_int(cs_count)

(*FIN INSERT 'Undump the hash table'*)

(*FIN INSERT 'Undump the table of equivalents'*)                                                                                                                                                                                                                                                                                      ;

(*INSERT 'Undump the font information'*)(*PASCAL module 1321*)
                                                                                                                                                                                                                                                                                                                                      undump_size(7)(font_mem_size)('font mem size')(fmem_ptr);
                                                                                                                                                                                                                                                                                                                                      For k:=0 To fmem_ptr-1 Do
                                                                                                                                                                                                                                                                                                                                        undump_wd(font_info[k]);
                                                                                                                                                                                                                                                                                                                                      undump_size(font_base)(font_max)('font max')(font_ptr);
                                                                                                                                                                                                                                                                                                                                      For k:=null_font To font_ptr Do

(*INSERT 'Undump the array info for internal font number |k|'*)(*PASCAL module 1323*)
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          undump_qqqq(font_check[k]);

                                                                                                                                                                                                                                                                                                                                          undump_int(font_size[k]);
                                                                                                                                                                                                                                                                                                                                          undump_int(font_dsize[k]);
                                                                                                                                                                                                                                                                                                                                          undump(min_halfword)(max_halfword)(font_params[k]);

                                                                                                                                                                                                                                                                                                                                          undump_int(hyphen_char[k]);
                                                                                                                                                                                                                                                                                                                                          undump_int(skew_char[k]);

                                                                                                                                                                                                                                                                                                                                          undump(0)(str_ptr)(font_name[k]);
                                                                                                                                                                                                                                                                                                                                          undump(0)(str_ptr)(font_area[k]);

                                                                                                                                                                                                                                                                                                                                          undump(0)(255)(font_bc[k]);
                                                                                                                                                                                                                                                                                                                                          undump(0)(255)(font_ec[k]);

                                                                                                                                                                                                                                                                                                                                          undump_int(char_base[k]);
                                                                                                                                                                                                                                                                                                                                          undump_int(width_base[k]);
                                                                                                                                                                                                                                                                                                                                          undump_int(height_base[k]);

                                                                                                                                                                                                                                                                                                                                          undump_int(depth_base[k]);
                                                                                                                                                                                                                                                                                                                                          undump_int(italic_base[k]);
                                                                                                                                                                                                                                                                                                                                          undump_int(lig_kern_base[k]);

                                                                                                                                                                                                                                                                                                                                          undump_int(kern_base[k]);
                                                                                                                                                                                                                                                                                                                                          undump_int(exten_base[k]);
                                                                                                                                                                                                                                                                                                                                          undump_int(param_base[k]);

                                                                                                                                                                                                                                                                                                                                          undump(min_halfword)(lo_mem_max)(font_glue[k]);

                                                                                                                                                                                                                                                                                                                                          undump(0)(fmem_ptr-1)(bchar_label[k]);
                                                                                                                                                                                                                                                                                                                                          undump(min_quarterword)(non_char)(font_bchar[k]);
                                                                                                                                                                                                                                                                                                                                          undump(min_quarterword)(non_char)(font_false_bchar[k]);
                                                                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'Undump the array info for internal font number |k|'*)

(*FIN INSERT 'Undump the font information'*)                                                                                                                                                                                                                                                                                          ;

(*INSERT 'Undump the hyphenation tables'*)(*PASCAL module 1325*)
                                                                                                                                                                                                                                                                                                                                      undump(0)(hyph_size)(hyph_count);
                                                                                                                                                                                                                                                                                                                                      For k:=1 To hyph_count Do
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          undump(0)(hyph_size)(j);
                                                                                                                                                                                                                                                                                                                                          undump(0)(str_ptr)(hyph_word[j]);
                                                                                                                                                                                                                                                                                                                                          undump(min_halfword)(max_halfword)(hyph_list[j]);
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      undump_size(0)(trie_size)('trie size')(j);
                                                                                                                                                                                                                                                                                                                                      init trie_max := j;
                                                                                                                                                                                                                                                                                                                                      tini
                                                                                                                                                                                                                                                                                                                                      For k:=0 To j Do
                                                                                                                                                                                                                                                                                                                                        undump_hh(trie[k]);
                                                                                                                                                                                                                                                                                                                                      undump_size(0)(trie_op_size)('trie op size')(j);
                                                                                                                                                                                                                                                                                                                                      init trie_op_ptr := j;
                                                                                                                                                                                                                                                                                                                                      tini
                                                                                                                                                                                                                                                                                                                                      For k:=1 To j Do
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          undump(0)(63)(hyf_distance[k]); {a |small_number|}
                                                                                                                                                                                                                                                                                                                                          undump(0)(63)(hyf_num[k]);
                                                                                                                                                                                                                                                                                                                                          undump(min_quarterword)(max_quarterword)(hyf_next[k]);
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      init For k:=0 To 255 Do
                                                                                                                                                                                                                                                                                                                                             trie_used[k] := min_quarterword;
                                                                                                                                                                                                                                                                                                                                      tini;

                                                                                                                                                                                                                                                                                                                                      k := 256;
                                                                                                                                                                                                                                                                                                                                      While j>0 Do
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          undump(0)(k-1)(k);
                                                                                                                                                                                                                                                                                                                                          undump(1)(j)(x);
                                                                                                                                                                                                                                                                                                                                          init trie_used[k] := qi(x);
                                                                                                                                                                                                                                                                                                                                          tini;

                                                                                                                                                                                                                                                                                                                                          j := j-x;
                                                                                                                                                                                                                                                                                                                                          op_start[k] := qo(j);
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      init trie_not_ready := false tini

(*FIN INSERT 'Undump the hyphenation tables'*)                                                                                                                                                                                                                                                                                        ;

(*INSERT 'Undump a couple more things and the closing check word'*)(*PASCAL module 1327*)
                                                                                                                                                                                                                                                                                                                                      undump(batch_mode)(error_stop_mode)(interaction);
                                                                                                                                                                                                                                                                                                                                      undump(0)(str_ptr)(format_ident);
                                                                                                                                                                                                                                                                                                                                      undump_int(x);
                                                                                                                                                                                                                                                                                                                                      If (x<>69069)Or eof(fmt_file) Then goto bad_fmt

(*FIN INSERT 'Undump a couple more things and the closing check word'*)                                                                                                                                                                                                                                                               ;
                                                                                                                                                                                                                                                                                                                                      load_fmt_file := true;
                                                                                                                                                                                                                                                                                                                                      return; {it worked!}
                                                                                                                                                                                                                                                                                                                                      bad_fmt: wake_up_terminal;
                                                                                                                                                                                                                                                                                                                                      wterm_ln('(Fatal format file error; I''m stymied)');
(*Fatal format file error*)
                                                                                                                                                                                                                                                                                                                                      load_fmt_file := false;
                                                                                                                                                                                                                                                                                                                                      exit:
                                                                                                                                                                                                                                                                                                                                    End;


(***PASCAL module 1330***)

(*INSERT 'Last-minute procedures'*)(*PASCAL module 1333*)
                                                                                                                                                                                                                                                                                                                                    Procedure close_files_and_terminate;

                                                                                                                                                                                                                                                                                                                                    Var k: integer; {all-purpose index}
                                                                                                                                                                                                                                                                                                                                    Begin
(*INSERT 'Finish the extensions'*)(*PASCAL module 1378*)
                                                                                                                                                                                                                                                                                                                                      For k:=0 To 15 Do
                                                                                                                                                                                                                                                                                                                                        If write_open[k] Then a_close(write_file[k])

(*FIN INSERT 'Finish the extensions'*)                                                                                                                                                                                                                                                                                                ;
                                                                                                                                                                                                                                                                                                                                      stat If tracing_stats>0 Then
(*INSERT 'Output statistics about this job'*)(*PASCAL module 1334*)
                                                                                                                                                                                                                                                                                                                                             If log_opened Then
                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                 wlog_ln(' ');
                                                                                                                                                                                                                                                                                                                                                 wlog_ln('Here is how much of TeX''s memory',' you used:');
(*Here is how much...*)
                                                                                                                                                                                                                                                                                                                                                 wlog(' ',str_ptr-init_str_ptr:1,' string');
                                                                                                                                                                                                                                                                                                                                                 If str_ptr<>init_str_ptr+1 Then wlog('s');
                                                                                                                                                                                                                                                                                                                                                 wlog_ln(' out of ', max_strings-init_str_ptr:1);

                                                                                                                                                                                                                                                                                                                                                 wlog_ln(' ',pool_ptr-init_pool_ptr:1,' string characters out of ',
                                                                                                                                                                                                                                                                                                                                                         pool_size-init_pool_ptr:1);

                                                                                                                                                                                                                                                                                                                                                 wlog_ln(' ',lo_mem_max-mem_min+mem_end-hi_mem_min+2:1,
                                                                                                                                                                                                                                                                                                                                                         ' words of memory out of ',mem_end+1-mem_min:1);

                                                                                                                                                                                                                                                                                                                                                 wlog_ln(' ',cs_count:1,' multiletter control sequences out of ',
                                                                                                                                                                                                                                                                                                                                                         hash_size:1);

                                                                                                                                                                                                                                                                                                                                                 wlog(' ',fmem_ptr:1,' words of font info for ',
                                                                                                                                                                                                                                                                                                                                                      font_ptr-font_base:1,' font');
                                                                                                                                                                                                                                                                                                                                                 If font_ptr<>font_base+1 Then wlog('s');
                                                                                                                                                                                                                                                                                                                                                 wlog_ln(', out of ',font_mem_size:1,' for ',font_max-font_base:1);

                                                                                                                                                                                                                                                                                                                                                 wlog(' ',hyph_count:1,' hyphenation exception');
                                                                                                                                                                                                                                                                                                                                                 If hyph_count<>1 Then wlog('s');
                                                                                                                                                                                                                                                                                                                                                 wlog_ln(' out of ',hyph_size:1);

                                                                                                                                                                                                                                                                                                                                                 wlog_ln(' ',max_in_stack:1,'i,',max_nest_stack:1,'n,',
                                                                                                                                                                                                                                                                                                                                                         max_param_stack:1,'p,',
                                                                                                                                                                                                                                                                                                                                                         max_buf_stack+1:1,'b,',
                                                                                                                                                                                                                                                                                                                                                         max_save_stack+6:1,'s stack positions out of ',
                                                                                                                                                                                                                                                                                                                                                         stack_size:1,'i,',
                                                                                                                                                                                                                                                                                                                                                         nest_size:1,'n,',
                                                                                                                                                                                                                                                                                                                                                         param_size:1,'p,',
                                                                                                                                                                                                                                                                                                                                                         buf_size:1,'b,',
                                                                                                                                                                                                                                                                                                                                                         save_size:1,'s');
                                                                                                                                                                                                                                                                                                                                               End

(*FIN INSERT 'Output statistics about this job'*)                                                                                                                                                                                                                                                                                     ;;
                                                                                                                                                                                                                                                                                                                                      tats

                                                                                                                                                                                                                                                                                                                                      wake_up_terminal;
(*INSERT 'Finish the \.{DVI} file'*)(*PASCAL module 642*)
                                                                                                                                                                                                                                                                                                                                      While cur_s>-1 Do
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          If cur_s>0 Then dvi_out(pop)
                                                                                                                                                                                                                                                                                                                                          Else
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              dvi_out(eop);
                                                                                                                                                                                                                                                                                                                                              incr(total_pages);
                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                          decr(cur_s);
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      If total_pages=0 Then print_nl('No pages of output.')
(*No pages of output*)
                                                                                                                                                                                                                                                                                                                                      Else
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          dvi_out(post); {beginning of the postamble}
                                                                                                                                                                                                                                                                                                                                          dvi_four(last_bop);
                                                                                                                                                                                                                                                                                                                                          last_bop := dvi_offset+dvi_ptr-5; {|post| location}
                                                                                                                                                                                                                                                                                                                                          dvi_four(25400000);
                                                                                                                                                                                                                                                                                                                                          dvi_four(473628672); {conversion ratio for sp}
                                                                                                                                                                                                                                                                                                                                          prepare_mag;
                                                                                                                                                                                                                                                                                                                                          dvi_four(mag); {magnification factor}
                                                                                                                                                                                                                                                                                                                                          dvi_four(max_v);
                                                                                                                                                                                                                                                                                                                                          dvi_four(max_h);

                                                                                                                                                                                                                                                                                                                                          dvi_out(max_push Div 256);
                                                                                                                                                                                                                                                                                                                                          dvi_out(max_push Mod 256);

                                                                                                                                                                                                                                                                                                                                          dvi_out((total_pages Div 256) mod 256);
                                                                                                                                                                                                                                                                                                                                          dvi_out(total_pages Mod 256);


(*INSERT 'Output the font definitions for all fonts that were used'*)(*PASCAL module 643*)
                                                                                                                                                                                                                                                                                                                                          While font_ptr>font_base Do
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              If font_used[font_ptr] Then dvi_font_def(font_ptr);
                                                                                                                                                                                                                                                                                                                                              decr(font_ptr);
                                                                                                                                                                                                                                                                                                                                            End

(*FIN INSERT 'Output the font definitions for all fonts that were used'*)                                                                                                                                                                                                                                                                 ;
                                                                                                                                                                                                                                                                                                                                          dvi_out(post_post);
                                                                                                                                                                                                                                                                                                                                          dvi_four(last_bop);
                                                                                                                                                                                                                                                                                                                                          dvi_out(id_byte);

                                                                                                                                                                                                                                                                                                                                          k := 4+((dvi_buf_size-dvi_ptr) Mod 4); {the number of 223's}
                                                                                                                                                                                                                                                                                                                                          While k>0 Do
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              dvi_out(223);
                                                                                                                                                                                                                                                                                                                                              decr(k);
                                                                                                                                                                                                                                                                                                                                            End;

(*INSERT 'Empty the last bytes out of |dvi_buf|'*)(*PASCAL module 599*)
                                                                                                                                                                                                                                                                                                                                          If dvi_limit=half_buf Then write_dvi(half_buf,dvi_buf_size-1);
                                                                                                                                                                                                                                                                                                                                          If dvi_ptr>0 Then write_dvi(0,dvi_ptr-1)

(*FIN INSERT 'Empty the last bytes out of |dvi_buf|'*)                                                                                                                                                                                                                                                                                    ;
                                                                                                                                                                                                                                                                                                                                          print_nl('Output written on ');
                                                                                                                                                                                                                                                                                                                                          slow_print(output_file_name);
(*Output written on x*)
                                                                                                                                                                                                                                                                                                                                          print(' (');
                                                                                                                                                                                                                                                                                                                                          print_int(total_pages);
                                                                                                                                                                                                                                                                                                                                          print(' page');
                                                                                                                                                                                                                                                                                                                                          If total_pages<>1 Then print_char('s');
                                                                                                                                                                                                                                                                                                                                          print(', ');
                                                                                                                                                                                                                                                                                                                                          print_int(dvi_offset+dvi_ptr);
                                                                                                                                                                                                                                                                                                                                          print(' bytes).');
                                                                                                                                                                                                                                                                                                                                          b_close(dvi_file);
                                                                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'Finish the \.{DVI} file'*)                                                                                                                                                                                                                                                                                              ;
                                                                                                                                                                                                                                                                                                                                      If log_opened Then
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          wlog_cr;
                                                                                                                                                                                                                                                                                                                                          a_close(log_file);
                                                                                                                                                                                                                                                                                                                                          selector := selector-2;
                                                                                                                                                                                                                                                                                                                                          If selector=term_only Then
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              print_nl('Transcript written on ');
(*Transcript written...*)
                                                                                                                                                                                                                                                                                                                                              slow_print(log_name);
                                                                                                                                                                                                                                                                                                                                              print_char('.');
                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1335*)
                                                                                                                                                                                                                                                                                                                                    Procedure final_cleanup;

                                                                                                                                                                                                                                                                                                                                    Label exit;

                                                                                                                                                                                                                                                                                                                                    Var c: small_number; {0 for \.[\\end], 1 for \.[\\dump]}
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      c := cur_chr;
                                                                                                                                                                                                                                                                                                                                      If job_name=0 Then open_log_file;
                                                                                                                                                                                                                                                                                                                                      While input_ptr>0 Do
                                                                                                                                                                                                                                                                                                                                        If state=token_list Then end_token_listelse end_file_reading;
                                                                                                                                                                                                                                                                                                                                      While open_parens>0 Do
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          print(' )');
                                                                                                                                                                                                                                                                                                                                          decr(open_parens);
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      If cur_level>level_one Then
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          print_nl('(');
                                                                                                                                                                                                                                                                                                                                          print_esc('end occurred ');
                                                                                                                                                                                                                                                                                                                                          print('inside a group at level ');
(*end_][\.{(\\end occurred...)}*)
                                                                                                                                                                                                                                                                                                                                          print_int(cur_level-level_one);
                                                                                                                                                                                                                                                                                                                                          print_char(')');
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      While cond_ptr<>null Do
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          print_nl('(');
                                                                                                                                                                                                                                                                                                                                          print_esc('end occurred ');
                                                                                                                                                                                                                                                                                                                                          print('when ');
                                                                                                                                                                                                                                                                                                                                          print_cmd_chr(if_test,cur_if);
                                                                                                                                                                                                                                                                                                                                          If if_line<>0 Then
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              print(' on line ');
                                                                                                                                                                                                                                                                                                                                              print_int(if_line);
                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                          print(' was incomplete)');
                                                                                                                                                                                                                                                                                                                                          if_line := if_line_field(cond_ptr);
                                                                                                                                                                                                                                                                                                                                          cur_if := subtype(cond_ptr);
                                                                                                                                                                                                                                                                                                                                          temp_ptr := cond_ptr;
                                                                                                                                                                                                                                                                                                                                          cond_ptr := link(cond_ptr);
                                                                                                                                                                                                                                                                                                                                          free_node(temp_ptr,if_node_size);
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      If history<>spotless Then
                                                                                                                                                                                                                                                                                                                                        If ((history=warning_issued)Or(interaction<error_stop_mode)) Then
                                                                                                                                                                                                                                                                                                                                          If selector=term_and_log Then
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              selector := term_only;
                                                                                                                                                                                                                                                                                                                                              print_nl('(see the transcript file for additional information)');
(*see the transcript file...*)
                                                                                                                                                                                                                                                                                                                                              selector := term_and_log;
                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                      If c=1 Then
                                                                                                                                                                                                                                                                                                                                        Begin
                                                                                                                                                                                                                                                                                                                                          init For c:=top_mark_code To split_bot_mark_code Do
                                                                                                                                                                                                                                                                                                                                                 If cur_mark[c]<>null Then delete_token_ref(cur_mark[c]);
                                                                                                                                                                                                                                                                                                                                          If last_glue<>max_halfword Then delete_glue_ref(last_glue);
                                                                                                                                                                                                                                                                                                                                          store_fmt_file;
                                                                                                                                                                                                                                                                                                                                          return;
                                                                                                                                                                                                                                                                                                                                          tini

                                                                                                                                                                                                                                                                                                                                          print_nl('(\dump is performed only by INITEX)');
                                                                                                                                                                                                                                                                                                                                          return;
(*dump_][\.{\\dump...only by INITEX}*)
                                                                                                                                                                                                                                                                                                                                        End;
                                                                                                                                                                                                                                                                                                                                      exit:
                                                                                                                                                                                                                                                                                                                                    End;

(*PASCAL module 1336*)
                                                                                                                                                                                                                                                                                                                                    init Procedure init_prim; {initialize all the primitives}
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      no_new_control_sequence := false;

(*INSERT 'Put each of \TeX''s primitives into the hash table'*)(*PASCAL module 226*)
                                                                                                                                                                                                                                                                                                                                      primitive('lineskip',assign_glue,glue_base+line_skip_code);

(*line_skip_][\.{\\lineskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('baselineskip',assign_glue,glue_base+baseline_skip_code);

(*baseline_skip_][\.{\\baselineskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('parskip',assign_glue,glue_base+par_skip_code);

(*par_skip_][\.{\\parskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('abovedisplayskip',assign_glue,glue_base+above_display_skip_code);

(*above_display_skip_][\.{\\abovedisplayskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('belowdisplayskip',assign_glue,glue_base+below_display_skip_code);

(*below_display_skip_][\.{\\belowdisplayskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('abovedisplayshortskip',
                                                                                                                                                                                                                                                                                                                                                assign_glue,glue_base+above_display_short_skip_code);

(*above_display_short_skip_][\.{\\abovedisplayshortskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('belowdisplayshortskip',
                                                                                                                                                                                                                                                                                                                                                assign_glue,glue_base+below_display_short_skip_code);

(*below_display_short_skip_][\.{\\belowdisplayshortskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('leftskip',assign_glue,glue_base+left_skip_code);

(*left_skip_][\.{\\leftskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('rightskip',assign_glue,glue_base+right_skip_code);

(*right_skip_][\.{\\rightskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('topskip',assign_glue,glue_base+top_skip_code);

(*top_skip_][\.{\\topskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('splittopskip',assign_glue,glue_base+split_top_skip_code);

(*split_top_skip_][\.{\\splittopskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('tabskip',assign_glue,glue_base+tab_skip_code);

(*tab_skip_][\.{\\tabskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('spaceskip',assign_glue,glue_base+space_skip_code);

(*space_skip_][\.{\\spaceskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('xspaceskip',assign_glue,glue_base+xspace_skip_code);

(*xspace_skip_][\.{\\xspaceskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('parfillskip',assign_glue,glue_base+par_fill_skip_code);

(*par_fill_skip_][\.{\\parfillskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('thinmuskip',assign_mu_glue,glue_base+thin_mu_skip_code);

(*thin_mu_skip_][\.{\\thinmuskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('medmuskip',assign_mu_glue,glue_base+med_mu_skip_code);

(*med_mu_skip_][\.{\\medmuskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('thickmuskip',assign_mu_glue,glue_base+thick_mu_skip_code);

(*thick_mu_skip_][\.{\\thickmuskip} primitive*)

(*PASCAL module 230*)
                                                                                                                                                                                                                                                                                                                                      primitive('output',assign_toks,output_routine_loc);
(*output_][\.{\\output} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('everypar',assign_toks,every_par_loc);
(*every_par_][\.{\\everypar} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('everymath',assign_toks,every_math_loc);
(*every_math_][\.{\\everymath} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('everydisplay',assign_toks,every_display_loc);
(*every_display_][\.{\\everydisplay} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('everyhbox',assign_toks,every_hbox_loc);
(*every_hbox_][\.{\\everyhbox} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('everyvbox',assign_toks,every_vbox_loc);
(*every_vbox_][\.{\\everyvbox} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('everyjob',assign_toks,every_job_loc);
(*every_job_][\.{\\everyjob} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('everycr',assign_toks,every_cr_loc);
(*every_cr_][\.{\\everycr} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('errhelp',assign_toks,err_help_loc);
(*err_help_][\.{\\errhelp} primitive*)

(*PASCAL module 238*)
                                                                                                                                                                                                                                                                                                                                      primitive('pretolerance',assign_int,int_base+pretolerance_code);

(*pretolerance_][\.{\\pretolerance} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('tolerance',assign_int,int_base+tolerance_code);

(*tolerance_][\.{\\tolerance} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('linepenalty',assign_int,int_base+line_penalty_code);

(*line_penalty_][\.{\\linepenalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('hyphenpenalty',assign_int,int_base+hyphen_penalty_code);

(*hyphen_penalty_][\.{\\hyphenpenalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('exhyphenpenalty',assign_int,int_base+ex_hyphen_penalty_code);

(*ex_hyphen_penalty_][\.{\\exhyphenpenalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('clubpenalty',assign_int,int_base+club_penalty_code);

(*club_penalty_][\.{\\clubpenalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('widowpenalty',assign_int,int_base+widow_penalty_code);

(*widow_penalty_][\.{\\widowpenalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('displaywidowpenalty',
                                                                                                                                                                                                                                                                                                                                                assign_int,int_base+display_widow_penalty_code);

(*display_widow_penalty_][\.{\\displaywidowpenalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('brokenpenalty',assign_int,int_base+broken_penalty_code);

(*broken_penalty_][\.{\\brokenpenalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('binoppenalty',assign_int,int_base+bin_op_penalty_code);

(*bin_op_penalty_][\.{\\binoppenalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('relpenalty',assign_int,int_base+rel_penalty_code);

(*rel_penalty_][\.{\\relpenalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('predisplaypenalty',assign_int,int_base+pre_display_penalty_code);

(*pre_display_penalty_][\.{\\predisplaypenalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('postdisplaypenalty',assign_int,int_base+post_display_penalty_code);

(*post_display_penalty_][\.{\\postdisplaypenalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('interlinepenalty',assign_int,int_base+inter_line_penalty_code);

(*inter_line_penalty_][\.{\\interlinepenalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('doublehyphendemerits',
                                                                                                                                                                                                                                                                                                                                                assign_int,int_base+double_hyphen_demerits_code);

(*double_hyphen_demerits_][\.{\\doublehyphendemerits} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('finalhyphendemerits',
                                                                                                                                                                                                                                                                                                                                                assign_int,int_base+final_hyphen_demerits_code);

(*final_hyphen_demerits_][\.{\\finalhyphendemerits} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('adjdemerits',assign_int,int_base+adj_demerits_code);

(*adj_demerits_][\.{\\adjdemerits} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mag',assign_int,int_base+mag_code);

(*mag_][\.{\\mag} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('delimiterfactor',assign_int,int_base+delimiter_factor_code);

(*delimiter_factor_][\.{\\delimiterfactor} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('looseness',assign_int,int_base+looseness_code);

(*looseness_][\.{\\looseness} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('time',assign_int,int_base+time_code);

(*time_][\.{\\time} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('day',assign_int,int_base+day_code);

(*day_][\.{\\day} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('month',assign_int,int_base+month_code);

(*month_][\.{\\month} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('year',assign_int,int_base+year_code);

(*year_][\.{\\year} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('showboxbreadth',assign_int,int_base+show_box_breadth_code);

(*show_box_breadth_][\.{\\showboxbreadth} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('showboxdepth',assign_int,int_base+show_box_depth_code);

(*show_box_depth_][\.{\\showboxdepth} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('hbadness',assign_int,int_base+hbadness_code);

(*hbadness_][\.{\\hbadness} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('vbadness',assign_int,int_base+vbadness_code);

(*vbadness_][\.{\\vbadness} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('pausing',assign_int,int_base+pausing_code);

(*pausing_][\.{\\pausing} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('tracingonline',assign_int,int_base+tracing_online_code);

(*tracing_online_][\.{\\tracingonline} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('tracingmacros',assign_int,int_base+tracing_macros_code);

(*tracing_macros_][\.{\\tracingmacros} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('tracingstats',assign_int,int_base+tracing_stats_code);

(*tracing_stats_][\.{\\tracingstats} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('tracingparagraphs',assign_int,int_base+tracing_paragraphs_code);

(*tracing_paragraphs_][\.{\\tracingparagraphs} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('tracingpages',assign_int,int_base+tracing_pages_code);

(*tracing_pages_][\.{\\tracingpages} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('tracingoutput',assign_int,int_base+tracing_output_code);

(*tracing_output_][\.{\\tracingoutput} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('tracinglostchars',assign_int,int_base+tracing_lost_chars_code);

(*tracing_lost_chars_][\.{\\tracinglostchars} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('tracingcommands',assign_int,int_base+tracing_commands_code);

(*tracing_commands_][\.{\\tracingcommands} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('tracingrestores',assign_int,int_base+tracing_restores_code);

(*tracing_restores_][\.{\\tracingrestores} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('uchyph',assign_int,int_base+uc_hyph_code);

(*uc_hyph_][\.{\\uchyph} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('outputpenalty',assign_int,int_base+output_penalty_code);

(*output_penalty_][\.{\\outputpenalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('maxdeadcycles',assign_int,int_base+max_dead_cycles_code);

(*max_dead_cycles_][\.{\\maxdeadcycles} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('hangafter',assign_int,int_base+hang_after_code);

(*hang_after_][\.{\\hangafter} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('floatingpenalty',assign_int,int_base+floating_penalty_code);

(*floating_penalty_][\.{\\floatingpenalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('globaldefs',assign_int,int_base+global_defs_code);

(*global_defs_][\.{\\globaldefs} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('fam',assign_int,int_base+cur_fam_code);

(*fam_][\.{\\fam} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('escapechar',assign_int,int_base+escape_char_code);

(*escape_char_][\.{\\escapechar} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('defaulthyphenchar',assign_int,int_base+default_hyphen_char_code);

(*default_hyphen_char_][\.{\\defaulthyphenchar} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('defaultskewchar',assign_int,int_base+default_skew_char_code);

(*default_skew_char_][\.{\\defaultskewchar} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('endlinechar',assign_int,int_base+end_line_char_code);

(*end_line_char_][\.{\\endlinechar} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('newlinechar',assign_int,int_base+new_line_char_code);

(*new_line_char_][\.{\\newlinechar} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('language',assign_int,int_base+language_code);

(*language_][\.{\\language} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('lefthyphenmin',assign_int,int_base+left_hyphen_min_code);

(*left_hyphen_min_][\.{\\lefthyphenmin} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('righthyphenmin',assign_int,int_base+right_hyphen_min_code);

(*right_hyphen_min_][\.{\\righthyphenmin} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('holdinginserts',assign_int,int_base+holding_inserts_code);

(*holding_inserts_][\.{\\holdinginserts} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('errorcontextlines',assign_int,int_base+error_context_lines_code);

(*error_context_lines_][\.{\\errorcontextlines} primitive*)

(*PASCAL module 248*)
                                                                                                                                                                                                                                                                                                                                      primitive('parindent',assign_dimen,dimen_base+par_indent_code);

(*par_indent_][\.{\\parindent} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mathsurround',assign_dimen,dimen_base+math_surround_code);

(*math_surround_][\.{\\mathsurround} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('lineskiplimit',assign_dimen,dimen_base+line_skip_limit_code);

(*line_skip_limit_][\.{\\lineskiplimit} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('hsize',assign_dimen,dimen_base+hsize_code);

(*hsize_][\.{\\hsize} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('vsize',assign_dimen,dimen_base+vsize_code);

(*vsize_][\.{\\vsize} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('maxdepth',assign_dimen,dimen_base+max_depth_code);

(*max_depth_][\.{\\maxdepth} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('splitmaxdepth',assign_dimen,dimen_base+split_max_depth_code);

(*split_max_depth_][\.{\\splitmaxdepth} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('boxmaxdepth',assign_dimen,dimen_base+box_max_depth_code);

(*box_max_depth_][\.{\\boxmaxdepth} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('hfuzz',assign_dimen,dimen_base+hfuzz_code);

(*hfuzz_][\.{\\hfuzz} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('vfuzz',assign_dimen,dimen_base+vfuzz_code);

(*vfuzz_][\.{\\vfuzz} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('delimitershortfall',
                                                                                                                                                                                                                                                                                                                                                assign_dimen,dimen_base+delimiter_shortfall_code);

(*delimiter_shortfall_][\.{\\delimitershortfall} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('nulldelimiterspace',
                                                                                                                                                                                                                                                                                                                                                assign_dimen,dimen_base+null_delimiter_space_code);

(*null_delimiter_space_][\.{\\nulldelimiterspace} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('scriptspace',assign_dimen,dimen_base+script_space_code);

(*script_space_][\.{\\scriptspace} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('predisplaysize',assign_dimen,dimen_base+pre_display_size_code);

(*pre_display_size_][\.{\\predisplaysize} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('displaywidth',assign_dimen,dimen_base+display_width_code);

(*display_width_][\.{\\displaywidth} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('displayindent',assign_dimen,dimen_base+display_indent_code);

(*display_indent_][\.{\\displayindent} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('overfullrule',assign_dimen,dimen_base+overfull_rule_code);

(*overfull_rule_][\.{\\overfullrule} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('hangindent',assign_dimen,dimen_base+hang_indent_code);

(*hang_indent_][\.{\\hangindent} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('hoffset',assign_dimen,dimen_base+h_offset_code);

(*h_offset_][\.{\\hoffset} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('voffset',assign_dimen,dimen_base+v_offset_code);

(*v_offset_][\.{\\voffset} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('emergencystretch',assign_dimen,dimen_base+emergency_stretch_code);

(*emergency_stretch_][\.{\\emergencystretch} primitive*)

(*PASCAL module 265*)
                                                                                                                                                                                                                                                                                                                                      primitive(' ',ex_space,0);

(*Single-character primitives /][\quad\.{\\\ }*)
                                                                                                                                                                                                                                                                                                                                      primitive('/',ital_corr,0);

(*Single-character primitives /][\quad\.{\\/}*)
                                                                                                                                                                                                                                                                                                                                      primitive('accent',accent,0);

(*accent_][\.{\\accent} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('advance',advance,0);

(*advance_][\.{\\advance} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('afterassignment',after_assignment,0);

(*after_assignment_][\.{\\afterassignment} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('aftergroup',after_group,0);

(*after_group_][\.{\\aftergroup} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('begingroup',begin_group,0);

(*begin_group_][\.{\\begingroup} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('char',char_num,0);

(*char_][\.{\\char} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('csname',cs_name,0);

(*cs_name_][\.{\\csname} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('delimiter',delim_num,0);

(*delimiter_][\.{\\delimiter} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('divide',divide,0);

(*divide_][\.{\\divide} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('endcsname',end_cs_name,0);

(*end_cs_name_][\.{\\endcsname} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('endgroup',end_group,0);
(*end_group_][\.{\\endgroup} primitive*)
                                                                                                                                                                                                                                                                                                                                      text(frozen_end_group) := 'endgroup';
                                                                                                                                                                                                                                                                                                                                      eqtb[frozen_end_group] := eqtb[cur_val];

                                                                                                                                                                                                                                                                                                                                      primitive('expandafter',expand_after,0);

(*expand_after_][\.{\\expandafter} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('font',def_font,0);

(*font_][\.{\\font} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('fontdimen',assign_font_dimen,0);

(*font_dimen_][\.{\\fontdimen} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('halign',halign,0);

(*halign_][\.{\\halign} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('hrule',hrule,0);

(*hrule_][\.{\\hrule} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('ignorespaces',ignore_spaces,0);

(*ignore_spaces_][\.{\\ignorespaces} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('insert',insert,0);

(*insert_][\.{\\insert} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mark',mark,0);

(*mark_][\.{\\mark} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mathaccent',math_accent,0);

(*math_accent_][\.{\\mathaccent} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mathchar',math_char_num,0);

(*math_char_][\.{\\mathchar} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mathchoice',math_choice,0);

(*math_choice_][\.{\\mathchoice} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('multiply',multiply,0);

(*multiply_][\.{\\multiply} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('noalign',no_align,0);

(*no_align_][\.{\\noalign} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('noboundary',no_boundary,0);

(*no_boundary_][\.{\\noboundary} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('noexpand',no_expand,0);

(*no_expand_][\.{\\noexpand} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('nonscript',non_script,0);

(*non_script_][\.{\\nonscript} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('omit',omit,0);

(*omit_][\.{\\omit} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('parshape',set_shape,0);

(*par_shape_][\.{\\parshape} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('penalty',break_penalty,0);

(*penalty_][\.{\\penalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('prevgraf',set_prev_graf,0);

(*prev_graf_][\.{\\prevgraf} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('radical',radical,0);

(*radical_][\.{\\radical} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('read',read_to_cs,0);

(*read_][\.{\\read} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('relax',relax,256); {cf.\ |scan_file_name|}
(*relax_][\.{\\relax} primitive*)
                                                                                                                                                                                                                                                                                                                                      text(frozen_relax) := 'relax';
                                                                                                                                                                                                                                                                                                                                      eqtb[frozen_relax] := eqtb[cur_val];

                                                                                                                                                                                                                                                                                                                                      primitive('setbox',set_box,0);

(*set_box_][\.{\\setbox} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('the',the,0);

(*the_][\.{\\the} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('toks',toks_register,0);

(*toks_][\.{\\toks} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('vadjust',vadjust,0);

(*vadjust_][\.{\\vadjust} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('valign',valign,0);

(*valign_][\.{\\valign} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('vcenter',vcenter,0);

(*vcenter_][\.{\\vcenter} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('vrule',vrule,0);

(*vrule_][\.{\\vrule} primitive*)

(*PASCAL module 334*)
                                                                                                                                                                                                                                                                                                                                      primitive('par',par_end,256); {cf.\ |scan_file_name|}
(*par_][\.{\\par} primitive*)
                                                                                                                                                                                                                                                                                                                                      par_loc := cur_val;
                                                                                                                                                                                                                                                                                                                                      par_token := cs_token_flag+par_loc;

(*PASCAL module 376*)
                                                                                                                                                                                                                                                                                                                                      primitive('input',input,0);

(*input_][\.{\\input} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('endinput',input,1);

(*end_input_][\.{\\endinput} primitive*)

(*PASCAL module 384*)
                                                                                                                                                                                                                                                                                                                                      primitive('topmark',top_bot_mark,top_mark_code);
(*top_mark_][\.{\\topmark} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('firstmark',top_bot_mark,first_mark_code);
(*first_mark_][\.{\\firstmark} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('botmark',top_bot_mark,bot_mark_code);
(*bot_mark_][\.{\\botmark} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('splitfirstmark',top_bot_mark,split_first_mark_code);
(*split_first_mark_][\.{\\splitfirstmark} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('splitbotmark',top_bot_mark,split_bot_mark_code);
(*split_bot_mark_][\.{\\splitbotmark} primitive*)

(*PASCAL module 411*)
                                                                                                                                                                                                                                                                                                                                      primitive('count',register,int_val);
(*count_][\.{\\count} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('dimen',register,dimen_val);
(*dimen_][\.{\\dimen} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('skip',register,glue_val);
(*skip_][\.{\\skip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('muskip',register,mu_val);
(*mu_skip_][\.{\\muskip} primitive*)

(*PASCAL module 416*)
                                                                                                                                                                                                                                                                                                                                      primitive('spacefactor',set_aux,hmode);
(*space_factor_][\.{\\spacefactor} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('prevdepth',set_aux,vmode);

(*prev_depth_][\.{\\prevdepth} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('deadcycles',set_page_int,0);
(*dead_cycles_][\.{\\deadcycles} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('insertpenalties',set_page_int,1);
(*insert_penalties_][\.{\\insertpenalties} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('wd',set_box_dimen,width_offset);
(*wd_][\.{\\wd} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('ht',set_box_dimen,height_offset);
(*ht_][\.{\\ht} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('dp',set_box_dimen,depth_offset);
(*dp_][\.{\\dp} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('lastpenalty',last_item,int_val);
(*last_penalty_][\.{\\lastpenalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('lastkern',last_item,dimen_val);
(*last_kern_][\.{\\lastkern} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('lastskip',last_item,glue_val);
(*last_skip_][\.{\\lastskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('inputlineno',last_item,input_line_no_code);
(*input_line_no_][\.{\\inputlineno} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('badness',last_item,badness_code);
(*badness_][\.{\\badness} primitive*)

(*PASCAL module 468*)
                                                                                                                                                                                                                                                                                                                                      primitive('number',convert,number_code);

(*number_][\.{\\number} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('romannumeral',convert,roman_numeral_code);

(*roman_numeral_][\.{\\romannumeral} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('string',convert,string_code);

(*string_][\.{\\string} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('meaning',convert,meaning_code);

(*meaning_][\.{\\meaning} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('fontname',convert,font_name_code);

(*font_name_][\.{\\fontname} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('jobname',convert,job_name_code);

(*job_name_][\.{\\jobname} primitive*)

(*PASCAL module 487*)
                                                                                                                                                                                                                                                                                                                                      primitive('if',if_test,if_char_code);
(*if_char_][\.{\\if} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('ifcat',if_test,if_cat_code);
(*if_cat_code_][\.{\\ifcat} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('ifnum',if_test,if_int_code);
(*if_int_][\.{\\ifnum} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('ifdim',if_test,if_dim_code);
(*if_dim_][\.{\\ifdim} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('ifodd',if_test,if_odd_code);
(*if_odd_][\.{\\ifodd} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('ifvmode',if_test,if_vmode_code);
(*if_vmode_][\.{\\ifvmode} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('ifhmode',if_test,if_hmode_code);
(*if_hmode_][\.{\\ifhmode} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('ifmmode',if_test,if_mmode_code);
(*if_mmode_][\.{\\ifmmode} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('ifinner',if_test,if_inner_code);
(*if_inner_][\.{\\ifinner} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('ifvoid',if_test,if_void_code);
(*if_void_][\.{\\ifvoid} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('ifhbox',if_test,if_hbox_code);
(*if_hbox_][\.{\\ifhbox} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('ifvbox',if_test,if_vbox_code);
(*if_vbox_][\.{\\ifvbox} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('ifx',if_test,ifx_code);
(*ifx_][\.{\\ifx} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('ifeof',if_test,if_eof_code);
(*if_eof_][\.{\\ifeof} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('iftrue',if_test,if_true_code);
(*if_true_][\.{\\iftrue} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('iffalse',if_test,if_false_code);
(*if_false_][\.{\\iffalse} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('ifcase',if_test,if_case_code);
(*if_case_][\.{\\ifcase} primitive*)

(*PASCAL module 491*)
                                                                                                                                                                                                                                                                                                                                      primitive('fi',fi_or_else,fi_code);
(*fi_][\.{\\fi} primitive*)
                                                                                                                                                                                                                                                                                                                                      text(frozen_fi) := 'fi';
                                                                                                                                                                                                                                                                                                                                      eqtb[frozen_fi] := eqtb[cur_val];
                                                                                                                                                                                                                                                                                                                                      primitive('or',fi_or_else,or_code);
(*or_][\.{\\or} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('else',fi_or_else,else_code);
(*else_][\.{\\else} primitive*)

(*PASCAL module 553*)
                                                                                                                                                                                                                                                                                                                                      primitive('nullfont',set_font,null_font);
(*null_font_][\.{\\nullfont} primitive*)
                                                                                                                                                                                                                                                                                                                                      text(frozen_null_font) := 'nullfont';
                                                                                                                                                                                                                                                                                                                                      eqtb[frozen_null_font] := eqtb[cur_val];

(*PASCAL module 780*)
                                                                                                                                                                                                                                                                                                                                      primitive('span',tab_mark,span_code);

(*span_][\.{\\span} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('cr',car_ret,cr_code);
(*cr_][\.{\\cr} primitive*)
                                                                                                                                                                                                                                                                                                                                      text(frozen_cr) := 'cr';
                                                                                                                                                                                                                                                                                                                                      eqtb[frozen_cr] := eqtb[cur_val];

                                                                                                                                                                                                                                                                                                                                      primitive('crcr',car_ret,cr_cr_code);
(*cr_cr_][\.{\\crcr} primitive*)
                                                                                                                                                                                                                                                                                                                                      text(frozen_end_template) := 'endtemplate';
                                                                                                                                                                                                                                                                                                                                      text(frozen_endv) := 'endtemplate';
                                                                                                                                                                                                                                                                                                                                      eq_type(frozen_endv) := endv;
                                                                                                                                                                                                                                                                                                                                      equiv(frozen_endv) := null_list;
                                                                                                                                                                                                                                                                                                                                      eq_level(frozen_endv) := level_one;

                                                                                                                                                                                                                                                                                                                                      eqtb[frozen_end_template] := eqtb[frozen_endv];
                                                                                                                                                                                                                                                                                                                                      eq_type(frozen_end_template) := end_template;

(*PASCAL module 983*)
                                                                                                                                                                                                                                                                                                                                      primitive('pagegoal',set_page_dimen,0);
(*page_goal_][\.{\\pagegoal} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('pagetotal',set_page_dimen,1);
(*page_total_][\.{\\pagetotal} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('pagestretch',set_page_dimen,2);
(*page_stretch_][\.{\\pagestretch} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('pagefilstretch',set_page_dimen,3);
(*page_fil_stretch_][\.{\\pagefilstretch} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('pagefillstretch',set_page_dimen,4);
(*page_fill_stretch_][\.{\\pagefillstretch} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('pagefilllstretch',set_page_dimen,5);
(*page_filll_stretch_][\.{\\pagefilllstretch} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('pageshrink',set_page_dimen,6);
(*page_shrink_][\.{\\pageshrink} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('pagedepth',set_page_dimen,7);
(*page_depth_][\.{\\pagedepth} primitive*)

(*PASCAL module 1052*)
                                                                                                                                                                                                                                                                                                                                      primitive('end',stop,0);

(*end_][\.{\\end} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('dump',stop,1);

(*dump_][\.{\\dump} primitive*)

(*PASCAL module 1058*)
                                                                                                                                                                                                                                                                                                                                      primitive('hskip',hskip,skip_code);

(*hskip_][\.{\\hskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('hfil',hskip,fil_code);
(*hfil_][\.{\\hfil} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('hfill',hskip,fill_code);

(*hfill_][\.{\\hfill} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('hss',hskip,ss_code);
(*hss_][\.{\\hss} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('hfilneg',hskip,fil_neg_code);

(*hfil_neg_][\.{\\hfilneg} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('vskip',vskip,skip_code);

(*vskip_][\.{\\vskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('vfil',vskip,fil_code);
(*vfil_][\.{\\vfil} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('vfill',vskip,fill_code);

(*vfill_][\.{\\vfill} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('vss',vskip,ss_code);
(*vss_][\.{\\vss} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('vfilneg',vskip,fil_neg_code);

(*vfil_neg_][\.{\\vfilneg} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mskip',mskip,mskip_code);

(*mskip_][\.{\\mskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('kern',kern,explicit);
(*kern_][\.{\\kern} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mkern',mkern,mu_glue);

(*mkern_][\.{\\mkern} primitive*)

(*PASCAL module 1071*)
                                                                                                                                                                                                                                                                                                                                      primitive('moveleft',hmove,1);
(*move_left_][\.{\\moveleft} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('moveright',hmove,0);

(*move_right_][\.{\\moveright} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('raise',vmove,1);
(*raise_][\.{\\raise} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('lower',vmove,0);
(*lower_][\.{\\lower} primitive*)



                                                                                                                                                                                                                                                                                                                                      primitive('box',make_box,box_code);
(*box_][\.{\\box} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('copy',make_box,copy_code);
(*copy_][\.{\\copy} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('lastbox',make_box,last_box_code);
(*last_box_][\.{\\lastbox} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('vsplit',make_box,vsplit_code);
(*vsplit_][\.{\\vsplit} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('vtop',make_box,vtop_code);

(*vtop_][\.{\\vtop} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('vbox',make_box,vtop_code+vmode);
(*vbox_][\.{\\vbox} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('hbox',make_box,vtop_code+hmode);

(*hbox_][\.{\\hbox} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('shipout',leader_ship,a_leaders-1); {|ship_out_flag=leader_flag-1|}
(*ship_out_][\.{\\shipout} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('leaders',leader_ship,a_leaders);
(*leaders_][\.{\\leaders} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('cleaders',leader_ship,c_leaders);
(*c_leaders_][\.{\\cleaders} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('xleaders',leader_ship,x_leaders);
(*x_leaders_][\.{\\xleaders} primitive*)

(*PASCAL module 1088*)
                                                                                                                                                                                                                                                                                                                                      primitive('indent',start_par,1);
(*indent_][\.{\\indent} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('noindent',start_par,0);
(*no_indent_][\.{\\noindent} primitive*)

(*PASCAL module 1107*)
                                                                                                                                                                                                                                                                                                                                      primitive('unpenalty',remove_item,penalty_node);

(*un_penalty_][\.{\\unpenalty} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('unkern',remove_item,kern_node);

(*un_kern_][\.{\\unkern} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('unskip',remove_item,glue_node);

(*un_skip_][\.{\\unskip} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('unhbox',un_hbox,box_code);

(*un_hbox_][\.{\\unhbox} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('unhcopy',un_hbox,copy_code);

(*un_hcopy_][\.{\\unhcopy} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('unvbox',un_vbox,box_code);

(*un_vbox_][\.{\\unvbox} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('unvcopy',un_vbox,copy_code);

(*un_vcopy_][\.{\\unvcopy} primitive*)

(*PASCAL module 1114*)
                                                                                                                                                                                                                                                                                                                                      primitive('-',discretionary,1);
(*Single-character primitives -][\quad\.{\\-}*)
                                                                                                                                                                                                                                                                                                                                      primitive('discretionary',discretionary,0);
(*discretionary_][\.{\\discretionary} primitive*)

(*PASCAL module 1141*)
                                                                                                                                                                                                                                                                                                                                      primitive('eqno',eq_no,0);
(*eq_no_][\.{\\eqno} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('leqno',eq_no,1);
(*leq_no_][\.{\\leqno} primitive*)

(*PASCAL module 1156*)
                                                                                                                                                                                                                                                                                                                                      primitive('mathord',math_comp,ord_noad);
(*math_ord_][\.{\\mathord} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mathop',math_comp,op_noad);
(*math_op_][\.{\\mathop} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mathbin',math_comp,bin_noad);
(*math_bin_][\.{\\mathbin} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mathrel',math_comp,rel_noad);
(*math_rel_][\.{\\mathrel} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mathopen',math_comp,open_noad);
(*math_open_][\.{\\mathopen} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mathclose',math_comp,close_noad);
(*math_close_][\.{\\mathclose} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mathpunct',math_comp,punct_noad);
(*math_punct_][\.{\\mathpunct} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mathinner',math_comp,inner_noad);
(*math_inner_][\.{\\mathinner} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('underline',math_comp,under_noad);
(*underline_][\.{\\underline} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('overline',math_comp,over_noad);

(*overline_][\.{\\overline} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('displaylimits',limit_switch,normal);
(*display_limits_][\.{\\displaylimits} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('limits',limit_switch,limits);
(*limits_][\.{\\limits} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('nolimits',limit_switch,no_limits);
(*no_limits_][\.{\\nolimits} primitive*)

(*PASCAL module 1169*)
                                                                                                                                                                                                                                                                                                                                      primitive('displaystyle',math_style,display_style);
(*display_style_][\.{\\displaystyle} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('textstyle',math_style,text_style);
(*text_style_][\.{\\textstyle} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('scriptstyle',math_style,script_style);
(*script_style_][\.{\\scriptstyle} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('scriptscriptstyle',math_style,script_script_style);
(*script_script_style_][\.{\\scriptscriptstyle} primitive*)

(*PASCAL module 1178*)
                                                                                                                                                                                                                                                                                                                                      primitive('above',above,above_code);

(*above_][\.{\\above} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('over',above,over_code);

(*over_][\.{\\over} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('atop',above,atop_code);

(*atop_][\.{\\atop} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('abovewithdelims',above,delimited_code+above_code);

(*above_with_delims_][\.{\\abovewithdelims} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('overwithdelims',above,delimited_code+over_code);

(*over_with_delims_][\.{\\overwithdelims} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('atopwithdelims',above,delimited_code+atop_code);
(*atop_with_delims_][\.{\\atopwithdelims} primitive*)

(*PASCAL module 1188*)
                                                                                                                                                                                                                                                                                                                                      primitive('left',left_right,left_noad);
(*left_][\.{\\left} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('right',left_right,right_noad);
(*right_][\.{\\right} primitive*)
                                                                                                                                                                                                                                                                                                                                      text(frozen_right) := 'right';
                                                                                                                                                                                                                                                                                                                                      eqtb[frozen_right] := eqtb[cur_val];

(*PASCAL module 1208*)
                                                                                                                                                                                                                                                                                                                                      primitive('long',prefix,1);
(*long_][\.{\\long} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('outer',prefix,2);
(*outer_][\.{\\outer} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('global',prefix,4);
(*global_][\.{\\global} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('def',def,0);
(*def_][\.{\\def} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('gdef',def,1);
(*gdef_][\.{\\gdef} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('edef',def,2);
(*edef_][\.{\\edef} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('xdef',def,3);
(*xdef_][\.{\\xdef} primitive*)

(*PASCAL module 1219*)
                                                                                                                                                                                                                                                                                                                                      primitive('let',let,normal);

(*let_][\.{\\let} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('futurelet',let,normal+1);

(*future_let_][\.{\\futurelet} primitive*)

(*PASCAL module 1222*)
                                                                                                                                                                                                                                                                                                                                      primitive('chardef',shorthand_def,char_def_code);

(*char_def_][\.{\\chardef} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mathchardef',shorthand_def,math_char_def_code);

(*math_char_def_][\.{\\mathchardef} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('countdef',shorthand_def,count_def_code);

(*count_def_][\.{\\countdef} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('dimendef',shorthand_def,dimen_def_code);

(*dimen_def_][\.{\\dimendef} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('skipdef',shorthand_def,skip_def_code);

(*skip_def_][\.{\\skipdef} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('muskipdef',shorthand_def,mu_skip_def_code);

(*mu_skip_def_][\.{\\muskipdef} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('toksdef',shorthand_def,toks_def_code);

(*toks_def_][\.{\\toksdef} primitive*)

(*PASCAL module 1230*)
                                                                                                                                                                                                                                                                                                                                      primitive('catcode',def_code,cat_code_base);
(*cat_code_][\.{\\catcode} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('mathcode',def_code,math_code_base);
(*math_code_][\.{\\mathcode} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('lccode',def_code,lc_code_base);
(*lc_code_][\.{\\lccode} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('uccode',def_code,uc_code_base);
(*uc_code_][\.{\\uccode} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('sfcode',def_code,sf_code_base);
(*sf_code_][\.{\\sfcode} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('delcode',def_code,del_code_base);
(*del_code_][\.{\\delcode} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('textfont',def_family,math_font_base);
(*text_font_][\.{\\textfont} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('scriptfont',def_family,math_font_base+script_size);
(*script_font_][\.{\\scriptfont} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('scriptscriptfont',def_family,math_font_base+script_script_size);
(*script_script_font_][\.{\\scriptscriptfont} primitive*)

(*PASCAL module 1250*)
                                                                                                                                                                                                                                                                                                                                      primitive('hyphenation',hyph_data,0);
(*hyphenation_][\.{\\hyphenation} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('patterns',hyph_data,1);
(*patterns_][\.{\\patterns} primitive*)

(*PASCAL module 1254*)
                                                                                                                                                                                                                                                                                                                                      primitive('hyphenchar',assign_font_int,0);
(*hyphen_char_][\.{\\hyphenchar} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('skewchar',assign_font_int,1);
(*skew_char_][\.{\\skewchar} primitive*)

(*PASCAL module 1262*)
                                                                                                                                                                                                                                                                                                                                      primitive('batchmode',set_interaction,batch_mode);
(*batch_mode_][\.{\\batchmode} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('nonstopmode',set_interaction,nonstop_mode);
(*nonstop_mode_][\.{\\nonstopmode} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('scrollmode',set_interaction,scroll_mode);
(*scroll_mode_][\.{\\scrollmode} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('errorstopmode',set_interaction,error_stop_mode);
(*error_stop_mode_][\.{\\errorstopmode} primitive*)

(*PASCAL module 1272*)
                                                                                                                                                                                                                                                                                                                                      primitive('openin',in_stream,1);
(*open_in_][\.{\\openin} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('closein',in_stream,0);
(*close_in_][\.{\\closein} primitive*)

(*PASCAL module 1277*)
                                                                                                                                                                                                                                                                                                                                      primitive('message',message,0);
(*message_][\.{\\message} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('errmessage',message,1);
(*err_message_][\.{\\errmessage} primitive*)

(*PASCAL module 1286*)
                                                                                                                                                                                                                                                                                                                                      primitive('lowercase',case_shift,lc_code_base);
(*lowercase_][\.{\\lowercase} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('uppercase',case_shift,uc_code_base);
(*uppercase_][\.{\\uppercase} primitive*)

(*PASCAL module 1291*)
                                                                                                                                                                                                                                                                                                                                      primitive('show',xray,show_code);
(*show_][\.{\\show} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('showbox',xray,show_box_code);
(*show_box_][\.{\\showbox} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('showthe',xray,show_the_code);
(*show_the_][\.{\\showthe} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('showlists',xray,show_lists);
(*show_lists_][\.{\\showlists} primitive*)

(*PASCAL module 1344*)
                                                                                                                                                                                                                                                                                                                                      primitive('openout',extension,open_node);

(*open_out_][\.{\\openout} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('write',extension,write_node);
                                                                                                                                                                                                                                                                                                                                      write_loc := cur_val;

(*write_][\.{\\write} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('closeout',extension,close_node);

(*close_out_][\.{\\closeout} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('special',extension,special_node);

(*special_][\.{\\special} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('immediate',extension,immediate_code);

(*immediate_][\.{\\immediate} primitive*)
                                                                                                                                                                                                                                                                                                                                      primitive('setlanguage',extension,set_language_code);

(*set_language_][\.{\\setlanguage} primitive*)

(*FIN INSERT 'Put each of \TeX''s primitives into the hash table'*)                                                                                                                                                                                                                                                                   ;
                                                                                                                                                                                                                                                                                                                                      no_new_control_sequence := true;
                                                                                                                                                                                                                                                                                                                                    End;
                                                                                                                                                                                                                                                                                                                                    tini

(*PASCAL module 1338*)
                                                                                                                                                                                                                                                                                                                                    debug Procedure debug_help; {routine to display various things}

                                                                                                                                                                                                                                                                                                                                    Label breakpoint,exit;

                                                                                                                                                                                                                                                                                                                                    Var k,l,m,n: integer;
                                                                                                                                                                                                                                                                                                                                    Begin
                                                                                                                                                                                                                                                                                                                                      loop
                                                                                                                                                                                                                                                                                                                                      Begin
                                                                                                                                                                                                                                                                                                                                        wake_up_terminal;
                                                                                                                                                                                                                                                                                                                                        print_nl('debug # (-1 to exit):');
                                                                                                                                                                                                                                                                                                                                        update_terminal;
(*debug \#*)
                                                                                                                                                                                                                                                                                                                                        read(term_in,m);
                                                                                                                                                                                                                                                                                                                                        If m<0 Then return
                                                                                                                                                                                                                                                                                                                                        Else If m=0 Then
                                                                                                                                                                                                                                                                                                                                               Begin
                                                                                                                                                                                                                                                                                                                                                 goto breakpoint; {go to every label at least once}
                                                                                                                                                                                                                                                                                                                                                 breakpoint: m := 0;
                                                                                                                                                                                                                                                                                                                                                 @{'BREAKPOINT'@}
                                                                                                                                                                                                                                                                                                                                               End
                                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            read(term_in,n);
                                                                                                                                                                                                                                                                                                                                            Case m Of 
    (*\4*)
(*INSERT 'Numbered cases for |debug_help|'*)(*PASCAL module 1339*)
                                                                                                                                                                                                                                                                                                                                              1: print_word(mem[n]); {display |mem[n]| in all forms}
                                                                                                                                                                                                                                                                                                                                              2: print_int(info(n));
                                                                                                                                                                                                                                                                                                                                              3: print_int(link(n));
                                                                                                                                                                                                                                                                                                                                              4: print_word(eqtb[n]);
                                                                                                                                                                                                                                                                                                                                              5: print_word(font_info[n]);
                                                                                                                                                                                                                                                                                                                                              6: print_word(save_stack[n]);
                                                                                                                                                                                                                                                                                                                                              7: show_box(n);
  {show a box, abbreviated by |show_box_depth| and |show_box_breadth|}
                                                                                                                                                                                                                                                                                                                                              8:
                                                                                                                                                                                                                                                                                                                                                 Begin
                                                                                                                                                                                                                                                                                                                                                   breadth_max := 10000;
                                                                                                                                                                                                                                                                                                                                                   depth_threshold := pool_size-pool_ptr-10;
                                                                                                                                                                                                                                                                                                                                                   show_node_list(n); {show a box in its entirety}
                                                                                                                                                                                                                                                                                                                                                 End;
                                                                                                                                                                                                                                                                                                                                              9: show_token_list(n,null,1000);
                                                                                                                                                                                                                                                                                                                                              10: slow_print(n);
                                                                                                                                                                                                                                                                                                                                              11: check_mem(n>0); {check wellformedness; print new busy locations if |n>0|}
                                                                                                                                                                                                                                                                                                                                              12: search_mem(n); {look for pointers to |n|}
                                                                                                                                                                                                                                                                                                                                              13:
                                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                                    read(term_in,l);
                                                                                                                                                                                                                                                                                                                                                    print_cmd_chr(n,l);
                                                                                                                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                                                                                                              14: For k:=0 To n Do
                                                                                                                                                                                                                                                                                                                                                    print(buffer[k]);
                                                                                                                                                                                                                                                                                                                                              15:
                                                                                                                                                                                                                                                                                                                                                  Begin
                                                                                                                                                                                                                                                                                                                                                    font_in_short_display := null_font;
                                                                                                                                                                                                                                                                                                                                                    short_display(n);
                                                                                                                                                                                                                                                                                                                                                  End;
                                                                                                                                                                                                                                                                                                                                              16: panicking := Not panicking;

(*FIN INSERT 'Numbered cases for |debug_help|'*)                                                                                                                                                                                                                                                                                              ;
                                                                                                                                                                                                                                                                                                                                              othercases print('?')
                                                                                                                                                                                                                                                                                                                                              endcases;
                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        exit:
                                                                                                                                                                                                                                                                                                                                      End;
                                                                                                                                                                                                                                                                                                                                      gubed

(*FIN INSERT 'Last-minute procedures'*)


(***PASCAL module 1332***)
                                                                                                                                                                                                                                                                                                                                      Begin {|start_here|}
                                                                                                                                                                                                                                                                                                                                        history := fatal_error_stop; {in case we quit during initialization}
                                                                                                                                                                                                                                                                                                                                        t_open_out; {open the terminal for output}
                                                                                                                                                                                                                                                                                                                                        If ready_already=314159 Then goto start_of_TEX;

(*INSERT 'Check the ``constant'''' values for consistency'*)(*PASCAL module 14*)
                                                                                                                                                                                                                                                                                                                                        bad := 0;
                                                                                                                                                                                                                                                                                                                                        If (half_error_line<30)Or(half_error_line>error_line-15) Then bad := 1;
                                                                                                                                                                                                                                                                                                                                        If max_print_line<60 Then bad := 2;
                                                                                                                                                                                                                                                                                                                                        If dvi_buf_size Mod 8<>0 Then bad := 3;
                                                                                                                                                                                                                                                                                                                                        If mem_bot+1100>mem_top Then bad := 4;
                                                                                                                                                                                                                                                                                                                                        If hash_prime>hash_size Then bad := 5;
                                                                                                                                                                                                                                                                                                                                        If max_in_open>=128 Then bad := 6;
                                                                                                                                                                                                                                                                                                                                        If mem_top<256+11 Then bad := 7; {we will want |null_list>255|}

(*PASCAL module 111*)
                                                                                                                                                                                                                                                                                                                                        init If (mem_min<>mem_bot)Or(mem_max<>mem_top) Then bad := 10;
                                                                                                                                                                                                                                                                                                                                        tini;

                                                                                                                                                                                                                                                                                                                                        If (mem_min>mem_bot)Or(mem_max<mem_top) Then bad := 10;
                                                                                                                                                                                                                                                                                                                                        If (min_quarterword>0)Or(max_quarterword<127) Then bad := 11;
                                                                                                                                                                                                                                                                                                                                        If (min_halfword>0)Or(max_halfword<32767) Then bad := 12;
                                                                                                                                                                                                                                                                                                                                        If (min_quarterword<min_halfword)Or
                                                                                                                                                                                                                                                                                                                                           (max_quarterword>max_halfword) Then bad := 13;
                                                                                                                                                                                                                                                                                                                                        If (mem_min<min_halfword)Or(mem_max>=max_halfword)Or
                                                                                                                                                                                                                                                                                                                                           (mem_bot-mem_min>max_halfword+1) Then bad := 14;
                                                                                                                                                                                                                                                                                                                                        If (font_base<min_quarterword)Or(font_max>max_quarterword) Then bad := 15;
                                                                                                                                                                                                                                                                                                                                        If font_max>font_base+256 Then bad := 16;
                                                                                                                                                                                                                                                                                                                                        If (save_size>max_halfword)Or(max_strings>max_halfword) Then bad := 17;
                                                                                                                                                                                                                                                                                                                                        If buf_size>max_halfword Then bad := 18;
                                                                                                                                                                                                                                                                                                                                        If max_quarterword-min_quarterword<255 Then bad := 19;

(*PASCAL module 290*)
                                                                                                                                                                                                                                                                                                                                        If cs_token_flag+undefined_control_sequence>max_halfword Then bad := 21;

(*PASCAL module 522*)
                                                                                                                                                                                                                                                                                                                                        If format_default_length>file_name_size Then bad := 31;

(*PASCAL module 1249*)
                                                                                                                                                                                                                                                                                                                                        If 2*max_halfword<mem_top-mem_min Then bad := 41;

(*FIN INSERT 'Check the ``constant'''' values for consistency'*)                                                                                                                                                                                                                                                                        ;
                                                                                                                                                                                                                                                                                                                                        If bad>0 Then
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            wterm_ln('Ouch---my internal constants have been clobbered!',
                                                                                                                                                                                                                                                                                                                                                     '---case ',bad:1);
(*Ouch...clobbered*)
                                                                                                                                                                                                                                                                                                                                            goto final_end;
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        initialize; {set global variables to their starting values}
                                                                                                                                                                                                                                                                                                                                        init If Not get_strings_started Then goto final_end;
                                                                                                                                                                                                                                                                                                                                        init_prim; {call |primitive| for each primitive}
                                                                                                                                                                                                                                                                                                                                        init_str_ptr := str_ptr;
                                                                                                                                                                                                                                                                                                                                        init_pool_ptr := pool_ptr;
                                                                                                                                                                                                                                                                                                                                        fix_date_and_time;
                                                                                                                                                                                                                                                                                                                                        tini

                                                                                                                                                                                                                                                                                                                                        ready_already := 314159;
                                                                                                                                                                                                                                                                                                                                        start_of_TEX:
(*INSERT 'Initialize the output routines'*)(*PASCAL module 55*)
                                                                                                                                                                                                                                                                                                                                                      selector := term_only;
                                                                                                                                                                                                                                                                                                                                        tally := 0;
                                                                                                                                                                                                                                                                                                                                        term_offset := 0;
                                                                                                                                                                                                                                                                                                                                        file_offset := 0;

(*PASCAL module 61*)
                                                                                                                                                                                                                                                                                                                                        wterm(banner);
                                                                                                                                                                                                                                                                                                                                        If format_ident=0 Then wterm_ln(' (no format preloaded)')
                                                                                                                                                                                                                                                                                                                                        Else
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            slow_print(format_ident);
                                                                                                                                                                                                                                                                                                                                            print_ln;
                                                                                                                                                                                                                                                                                                                                          End;
                                                                                                                                                                                                                                                                                                                                        update_terminal;

(*PASCAL module 528*)
                                                                                                                                                                                                                                                                                                                                        job_name := 0;
                                                                                                                                                                                                                                                                                                                                        name_in_progress := false;
                                                                                                                                                                                                                                                                                                                                        log_opened := false;

(*FIN INSERT 'Initialize the output routines'*)                                                                                                                                                                                                                                                                                         ;

(*INSERT 'Get the first line of input and prepare to start'*)(*PASCAL module 1337*)
                                                                                                                                                                                                                                                                                                                                        Begin
(*INSERT 'Initialize the input routines'*)(*PASCAL module 331*)
                                                                                                                                                                                                                                                                                                                                          Begin
                                                                                                                                                                                                                                                                                                                                            input_ptr := 0;
                                                                                                                                                                                                                                                                                                                                            max_in_stack := 0;
                                                                                                                                                                                                                                                                                                                                            in_open := 0;
                                                                                                                                                                                                                                                                                                                                            open_parens := 0;
                                                                                                                                                                                                                                                                                                                                            max_buf_stack := 0;
                                                                                                                                                                                                                                                                                                                                            param_ptr := 0;
                                                                                                                                                                                                                                                                                                                                            max_param_stack := 0;
                                                                                                                                                                                                                                                                                                                                            first := buf_size;
                                                                                                                                                                                                                                                                                                                                            Repeat
                                                                                                                                                                                                                                                                                                                                              buffer[first] := 0;
                                                                                                                                                                                                                                                                                                                                              decr(first);
                                                                                                                                                                                                                                                                                                                                            Until first=0;
                                                                                                                                                                                                                                                                                                                                            scanner_status := normal;
                                                                                                                                                                                                                                                                                                                                            warning_index := null;
                                                                                                                                                                                                                                                                                                                                            first := 1;
                                                                                                                                                                                                                                                                                                                                            state := new_line;
                                                                                                                                                                                                                                                                                                                                            start := 1;
                                                                                                                                                                                                                                                                                                                                            index := 0;
                                                                                                                                                                                                                                                                                                                                            line := 0;
                                                                                                                                                                                                                                                                                                                                            name := 0;
                                                                                                                                                                                                                                                                                                                                            force_eof := false;
                                                                                                                                                                                                                                                                                                                                            align_state := 1000000;

                                                                                                                                                                                                                                                                                                                                            If Not init_terminal Then goto final_end;
                                                                                                                                                                                                                                                                                                                                            limit := last;
                                                                                                                                                                                                                                                                                                                                            first := last+1; {|init_terminal| has set |loc| and |last|}
                                                                                                                                                                                                                                                                                                                                          End

(*FIN INSERT 'Initialize the input routines'*)                                                                                                                                                                                                                                                                                            ;
                                                                                                                                                                                                                                                                                                                                          If (format_ident=0)Or(buffer[loc]='&') Then
                                                                                                                                                                                                                                                                                                                                            Begin
                                                                                                                                                                                                                                                                                                                                              If format_ident<>0 Then initialize; {erase preloaded format}
                                                                                                                                                                                                                                                                                                                                              If Not open_fmt_file Then goto final_end;
                                                                                                                                                                                                                                                                                                                                              If Not load_fmt_file Then
                                                                                                                                                                                                                                                                                                                                                Begin
                                                                                                                                                                                                                                                                                                                                                  w_close(fmt_file);
                                                                                                                                                                                                                                                                                                                                                  goto final_end;
                                                                                                                                                                                                                                                                                                                                                End;
                                                                                                                                                                                                                                                                                                                                              w_close(fmt_file);
                                                                                                                                                                                                                                                                                                                                              While (loc<limit)And(buffer[loc]=' ') Do
                                                                                                                                                                                                                                                                                                                                                incr(loc);
                                                                                                                                                                                                                                                                                                                                            End;
                                                                                                                                                                                                                                                                                                                                          If end_line_char_inactive Then decr(limit)
                                                                                                                                                                                                                                                                                                                                          Else  buffer[limit] := end_line_char;
                                                                                                                                                                                                                                                                                                                                          fix_date_and_time;


(*INSERT 'Compute the magic offset'*)(*PASCAL module 765*)
                                                                                                                                                                                                                                                                                                                                          magic_offset := str_start[math_spacing]-9*ord_noad

(*FIN INSERT 'Compute the magic offset'*)                                                                                                                                                                                                                                                                                                 ;

(*INSERT 'Initialize the print |selector| based on |interaction|'*)(*PASCAL module 75*)
                                                                                                                                                                                                                                                                                                                                          If interaction=batch_mode Then selector := no_printelse selector:=term_only

(*FIN INSERT 'Initialize the print |selector| based on |interaction|'*)                                                                                                                                                                                                                                                                   ;
                                                                                                                                                                                                                                                                                                                                          If (loc<limit)And(cat_code(buffer[loc])<>escape) Then start_input;
  {\.[\\input] assumed}
                                                                                                                                                                                                                                                                                                                                        End

(*FIN INSERT 'Get the first line of input and prepare to start'*)                                                                                                                                                                                                                                                                       ;
                                                                                                                                                                                                                                                                                                                                        history := spotless; {ready to go!}
                                                                                                                                                                                                                                                                                                                                        main_control; {come to life}
                                                                                                                                                                                                                                                                                                                                        final_cleanup; {prepare for death}
                                                                                                                                                                                                                                                                                                                                        end_of_TEX: close_files_and_terminate;
                                                                                                                                                                                                                                                                                                                                        final_end: ready_already := 0;
                                                                                                                                                                                                                                                                                                                                      End.
