#include "issuemessage.h"
#include "flushlist.h"
#include "tokenshow.h"
#include "overflow.h"
#include "println.h"
#include "printchar.h"
#include "slowprint.h"
#include "printnl.h"
#include "print.h"
#include "error.h"
#include "scantoks.h"
#include "makestring.h"
#include <iostream>
#include "texte.h"

void issuemessage(void)
{
	auto c = curchr;
	link(garbage) = scantoks(false, true);
	auto oldsetting = selector;
	selector = new_string;
	tokenshow(defref);
	selector = oldsetting;
	flushlist(defref);
	if (poolptr+1 > poolsize)
		overflow("pool size", poolsize-initpoolptr);
	auto s = makestring(); 
	if (c == 0)
	{
		if (termoffset+strstart[s+1]-strstart[s] > maxprintline-2)
			println();
		else 
			if (termoffset > 0 || fileoffset > 0)
			printchar(' ');
		slowprint(s);
		std::cout << std::flush;
	}
	else
	{
		printnl("! ");
		print("");
		slowprint(s);
		if (err_help())
			useerrhelp = true;
		else 
			if (longhelpseen)
			{
				helpptr = 1;
				helpline[0] = "(That was another \\errmessage.)";
			}
			else
			{
				if (interaction < error_stop_mode)
					longhelpseen = true;
				helpptr = 4;
				helpline[3] = "This error message was generated by an \\errmessage";
				helpline[2] = "command, so I can't give any explicit help.";
				helpline[1] = "Pretend that you're Hercule Poirot: Examine all clues,";
				helpline[0] = "and deduce the truth by order and method.";
			}
		error();
		useerrhelp = false;
	}
	strptr--;
	poolptr = strstart[strptr];
}
