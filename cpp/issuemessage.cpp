#include "issuemessage.h"
#include "flushlist.h"
#include "tokenshow.h"
#include "overflow.h"
#include "println.h"
#include "printchar.h"
#include "slowprint.h"
#include "printnl.h"
#include "print.h"
#include "error.h"
#include "scantoks.h"
#include "makestring.h"
#include <iostream>

void issuemessage(void)
{
	auto c = curchr;
	link(garbage) = scantoks(false, true);
	auto oldsetting = selector;
	selector = 21;
	tokenshow(defref);
	selector = oldsetting;
	flushlist(defref);
	if (poolptr+1 > poolsize)
		overflow(257, poolsize-initpoolptr); //pool size
	auto s = makestring(); 
	if (c == 0)
	{
		if (termoffset+strstart[s+1]-strstart[s] > maxprintline-2)
			println();
		else 
			if (termoffset > 0 || fileoffset > 0)
			printchar(' ');
		slowprint(s);
		std::cout << std::flush;
	}
	else
	{
		if (interaction == 3)
			printnl(262); //! 
		print(338);//
		slowprint(s);
		if (err_help())
			useerrhelp = true;
		else 
			if (longhelpseen)
			{
				helpptr = 1;
				helpline[0] = 1231; //(That was another \errmessage.)
			}
			else
			{
				if (interaction < 3)
					longhelpseen = true;
				helpptr = 4;
				helpline[3] = 1232; //This error message was generated by an \errmessage
				helpline[2] = 1233; //command, so I can't give any explicit help.
				helpline[1] = 1234; //Pretend that you're Hercule Poirot: Examine all clues,
				helpline[0] = 1235; //and deduce the truth by order and method.
			}
		error();
		useerrhelp = false;
	}
	strptr--;
	poolptr = strstart[strptr];
}
