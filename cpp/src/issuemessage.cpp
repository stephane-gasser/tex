#include "issuemessage.h"
#include "noeud.h"
#include "impression.h"
#include "erreur.h"
#include "erreur.h"
#include "equivalent.h"
#include "lecture.h"
#include "getnext.h"
#include <iostream>

void issuemessage(Token t)
{
	scanNonMacroToksExpand(t);
	auto s = defRef.toString();
	defRef.list.clear();
	if (t.chr == 0) // \message
	{
		print((termoffset+s.size() > maxprintline-2 ? "\n": termoffset > 0 || fileoffset > 0 ? " " : "")+s);
		std::cout << std::flush;
	}
	else // \errmessage
	{
		useerrhelp = err_help() ? true : false;
		if (useerrhelp)
			error(s, "");
		else 
		{
			static bool longhelpseen = false;
			if (longhelpseen)
				error(s, "(That was another \\errmessage.)");
			else
			{
				error(s, "This error message was generated by an \\errmessage\ncommand, so I can't give any explicit help.\nPretend that you're Hercule Poirot: Examine all clues,\nand deduce the truth by order and method.");
				if (interaction < error_stop_mode)
					longhelpseen = true;
			}
		}
	}
}
