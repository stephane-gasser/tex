A <- rmultinom(5, size=100, prob=c(0.2, 0.4, 0.05, 0.02, 0.15, 0.13, 0.01, 0.04))
B <- rmultinom(5, size=100, prob=c(0.6, 0.25, 0, 0.04, 0.02, 0.06, 0.02, 0))
counts <- cbind(A, B)
groups <- c(rep('A', 5), rep('B', 5))
toy_richness <- colSums(counts != 0)
toy_richness
c(rep('A', 5), rep('B', 5))
wilcox.test(toy_richness~groups) 
# calculate number of singletons
singletons <- colSums(counts == 1)
doubletons <- colSums(counts == 2)
rares <- singletons / (2*doubletons)
rares[doubletons == 0] <- 0
chao1 <- toy_richness + rares
chao1
sums <- apply(counts, 2, sum) # get the column sums (sample sums)
counts, 2, sum) # get the column sums (sample sums)
norm_counts <- counts # generate new data frame for normalized data
for (i in 1:ncol(counts)){ # divide per sample by sample total
norm_counts [,i] <- counts[,i]/sums[i]
}
shannon_div <- function(vector){
    vector <- vector*log(vector)
    # the vector has NA values if the species proportions are 0
    vectorsum <- sum(na.omit(vector))
    return((-1)*vectorsum)
}
shannon_diversities <- apply(norm_counts, 2, shannon_div)
shannon_diversities
simpson_indices <- colSums(norm_counts^2)
inverse_simpson_indices <- 1 / simpson_indices
inverse_simpson_indices
